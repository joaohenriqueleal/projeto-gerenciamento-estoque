{"version":3,"file":"chart-B9JC_kT1.js","names":["map","interpolate","clone","color","index","set","callback","_descriptors","defaults","resolve","descriptors","draw","to","from","index","scales","elements","names","color","i","inRange","layouts","validIndex","descriptors","plugins","listener","alpha","skip","fill","callback","round","map"],"sources":["../../@kurkle/color/dist/color.esm.js","../../chart.js/dist/chunks/helpers.dataset.js","../../chart.js/dist/chart.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _normalizeAngle as al, _readValueToProps as am, _updateBezierControlPoints as an, _computeSegments as ao, _boundSegments as ap, _steppedInterpolation as aq, _bezierInterpolation as ar, _pointInLine as as, _steppedLineTo as at, _bezierCurveTo as au, drawPoint as av, addRoundedRectPath as aw, toTRBL as ax, toTRBLCorners as ay, _boundSegment as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.5.0\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _normalizeAngle, am as _readValueToProps, an as _updateBezierControlPoints, ao as _computeSegments, ap as _boundSegments, aq as _steppedInterpolation, ar as _bezierInterpolation, as as _pointInLine, at as _steppedLineTo, au as _bezierCurveTo, av as drawPoint, aw as addRoundedRectPath, ax as toTRBL, ay as toTRBLCorners, az as _boundSegment, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getAxisCount() {\n        return this._getAxis().length;\n    }\n    getFirstScaleIdForIndexAxis() {\n        const scales = this.chart.scales;\n        const indexScaleId = this.chart.options.indexAxis;\n        return Object.keys(scales).filter((key)=>scales[key].axis === indexScaleId).shift();\n    }\n    _getAxis() {\n        const axis = {};\n        const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n        for (const dataset of this.chart.data.datasets){\n            axis[valueOrDefault(this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId)] = true;\n        }\n        return Object.keys(axis);\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        const axisCount = this._getAxisCount();\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount) : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n            const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n            const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.5.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipSelf(ctx, element, endAngle) {\n    const { startAngle , x , y , outerRadius , innerRadius , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n    if (innerRadius > 0) {\n        const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n        ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n    } else {\n        const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n        if (borderJoinStyle === 'round') {\n            ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n        } else if (borderJoinStyle === 'bevel') {\n            const r = 2 * clipWidth * clipWidth;\n            const endX = -r * Math.cos(endAngle + PI / 2) + x;\n            const endY = -r * Math.sin(endAngle + PI / 2) + y;\n            const startX = r * Math.cos(startAngle + PI / 2) + x;\n            const startY = r * Math.sin(startAngle + PI / 2) + y;\n            ctx.lineTo(endX, endY);\n            ctx.lineTo(startX, startY);\n        }\n    }\n    ctx.closePath();\n    ctx.moveTo(0, 0);\n    ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.clip('evenodd');\n}\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset , borderRadius  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n        clipSelf(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true,\n        selfJoin: false\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    let fillColor = below;\n    if (below !== above) {\n        if (property === 'x') {\n            clipVertical(ctx, target, area.top);\n            fill(ctx, {\n                line,\n                target,\n                color: above,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipVertical(ctx, target, area.bottom);\n        } else if (property === 'y') {\n            clipHorizontal(ctx, target, area.left);\n            fill(ctx, {\n                line,\n                target,\n                color: below,\n                scale,\n                property,\n                clip\n            });\n            ctx.restore();\n            ctx.save();\n            clipHorizontal(ctx, target, area.right);\n            fillColor = above;\n        }\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: fillColor,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction clipHorizontal(ctx, target, clipX) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(clipX, firstPoint.y);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(clipX, lastPoint.y);\n        }\n    }\n    ctx.lineTo(clipX, target.first().y);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"mappings":";;;;;;;AAMA,SAAS,MAAM,GAAG;AAChB,QAAO,IAAI,KAAM;;AAEnB,IAAM,OAAO,GAAG,GAAG,MAAM,KAAK,IAAI,KAAK,IAAI,GAAG,EAAE,EAAE,EAAE;AACpD,SAAS,IAAI,GAAG;AACd,QAAO,IAAI,MAAM,IAAI,KAAK,EAAE,GAAG,IAAI;;AAKrC,SAAS,IAAI,GAAG;AACd,QAAO,IAAI,MAAM,IAAI,IAAI,EAAE,GAAG,IAAI;;AAEpC,SAAS,IAAI,GAAG;AACd,QAAO,IAAI,MAAM,IAAI,KAAK,GAAG,KAAK,GAAG,EAAE;;AAEzC,SAAS,IAAI,GAAG;AACd,QAAO,IAAI,MAAM,IAAI,IAAI,EAAE,GAAG,IAAI;;AAGpC,IAAM,QAAQ;CAAC,GAAG;CAAG,GAAG;CAAG,GAAG;CAAG,GAAG;CAAG,GAAG;CAAG,GAAG;CAAG,GAAG;CAAG,GAAG;CAAG,GAAG;CAAG,GAAG;CAAG,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAI,GAAG;CAAG;AAC9J,IAAM,MAAM,CAAC,GAAG,mBAAmB;AACnC,IAAM,MAAK,MAAK,IAAI,IAAI;AACxB,IAAM,MAAK,MAAK,KAAK,IAAI,QAAS,KAAK,IAAI,IAAI;AAC/C,IAAM,MAAK,OAAO,IAAI,QAAS,OAAQ,IAAI;AAC3C,IAAM,WAAU,MAAK,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EAAE;AAC7D,SAAS,SAAS,KAAK;CACrB,IAAI,MAAM,IAAI;CACd,IAAI;AACJ,KAAI,IAAI,OAAO,KACb;MAAI,QAAQ,KAAK,QAAQ,EACvB,OAAM;GACJ,GAAG,MAAM,MAAM,IAAI,MAAM;GACzB,GAAG,MAAM,MAAM,IAAI,MAAM;GACzB,GAAG,MAAM,MAAM,IAAI,MAAM;GACzB,GAAG,QAAQ,IAAI,MAAM,IAAI,MAAM,KAAK;GACrC;WACQ,QAAQ,KAAK,QAAQ,EAC9B,OAAM;GACJ,GAAG,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI;GAClC,GAAG,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI;GAClC,GAAG,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI;GAClC,GAAG,QAAQ,IAAK,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI,MAAO;GACvD;;AAGL,QAAO;;AAET,IAAM,SAAS,GAAG,MAAM,IAAI,MAAM,EAAE,EAAE,GAAG;AACzC,SAAS,UAAU,GAAG;CACpB,IAAI,IAAI,QAAQ,EAAE,GAAG,KAAK;AAC1B,QAAO,IACH,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,GAC9C;;AAGN,IAAM,SAAS;AACf,SAAS,SAAS,GAAG,GAAG,GAAG;CACzB,MAAM,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,EAAE;CAChC,MAAM,KAAK,GAAG,KAAK,IAAI,IAAI,MAAM,OAAO,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG;AACvF,QAAO;EAAC,EAAE,EAAE;EAAE,EAAE,EAAE;EAAE,EAAE,EAAE;EAAC;;AAE3B,SAAS,SAAS,GAAG,GAAG,GAAG;CACzB,MAAM,KAAK,GAAG,KAAK,IAAI,IAAI,MAAM,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,EAAE;AACrF,QAAO;EAAC,EAAE,EAAE;EAAE,EAAE,EAAE;EAAE,EAAE,EAAE;EAAC;;AAE3B,SAAS,SAAS,GAAG,GAAG,GAAG;CACzB,MAAM,MAAM,SAAS,GAAG,GAAG,GAAI;CAC/B,IAAI;AACJ,KAAI,IAAI,IAAI,GAAG;AACb,MAAI,KAAK,IAAI;AACb,OAAK;AACL,OAAK;;AAEP,MAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,MAAI,MAAM,IAAI,IAAI;AAClB,MAAI,MAAM;;AAEZ,QAAO;;AAET,SAAS,SAAS,GAAG,GAAG,GAAG,GAAG,KAAK;AACjC,KAAI,MAAM,IACR,SAAS,IAAI,KAAK,KAAM,IAAI,IAAI,IAAI;AAEtC,KAAI,MAAM,IACR,SAAQ,IAAI,KAAK,IAAI;AAEvB,SAAQ,IAAI,KAAK,IAAI;;AAEvB,SAAS,QAAQ,GAAG;CAClB,MAAM,QAAQ;CACd,MAAM,IAAI,EAAE,IAAI;CAChB,MAAM,IAAI,EAAE,IAAI;CAChB,MAAM,IAAI,EAAE,IAAI;CAChB,MAAM,MAAM,KAAK,IAAI,GAAG,GAAG,EAAE;CAC7B,MAAM,MAAM,KAAK,IAAI,GAAG,GAAG,EAAE;CAC7B,MAAM,KAAK,MAAM,OAAO;CACxB,IAAI,GAAG,GAAG;AACV,KAAI,QAAQ,KAAK;AACf,MAAI,MAAM;AACV,MAAI,IAAI,KAAM,KAAK,IAAI,MAAM,OAAO,KAAK,MAAM;AAC/C,MAAI,SAAS,GAAG,GAAG,GAAG,GAAG,IAAI;AAC7B,MAAI,IAAI,KAAK;;AAEf,QAAO;EAAC,IAAI;EAAG,KAAK;EAAG;EAAE;;AAE3B,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG;AACzB,SACE,MAAM,QAAQ,EAAE,GACZ,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,GACnB,EAAE,GAAG,GAAG,EAAE,EACd,IAAI,IAAI;;AAEZ,SAAS,QAAQ,GAAG,GAAG,GAAG;AACxB,QAAO,MAAM,UAAU,GAAG,GAAG,EAAE;;AAEjC,SAAS,QAAQ,GAAG,GAAG,GAAG;AACxB,QAAO,MAAM,UAAU,GAAG,GAAG,EAAE;;AAEjC,SAAS,QAAQ,GAAG,GAAG,GAAG;AACxB,QAAO,MAAM,UAAU,GAAG,GAAG,EAAE;;AAEjC,SAAS,IAAI,GAAG;AACd,SAAQ,IAAI,MAAM,OAAO;;AAE3B,SAAS,SAAS,KAAK;CACrB,MAAM,IAAI,OAAO,KAAK,IAAI;CAC1B,IAAI,IAAI;CACR,IAAI;AACJ,KAAI,CAAC,EACH;AAEF,KAAI,EAAE,OAAO,EACX,KAAI,EAAE,KAAK,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG;CAEpC,MAAM,IAAI,IAAI,CAAC,EAAE,GAAG;CACpB,MAAM,KAAK,CAAC,EAAE,KAAK;CACnB,MAAM,KAAK,CAAC,EAAE,KAAK;AACnB,KAAI,EAAE,OAAO,MACX,KAAI,QAAQ,GAAG,IAAI,GAAG;UACb,EAAE,OAAO,MAClB,KAAI,QAAQ,GAAG,IAAI,GAAG;KAEtB,KAAI,QAAQ,GAAG,IAAI,GAAG;AAExB,QAAO;EACL,GAAG,EAAE;EACL,GAAG,EAAE;EACL,GAAG,EAAE;EACF;EACJ;;AAEH,SAAS,OAAO,GAAG,KAAK;CACtB,IAAI,IAAI,QAAQ,EAAE;AAClB,GAAE,KAAK,IAAI,EAAE,KAAK,IAAI;AACtB,KAAI,QAAQ,EAAE;AACd,GAAE,IAAI,EAAE;AACR,GAAE,IAAI,EAAE;AACR,GAAE,IAAI,EAAE;;AAEV,SAAS,UAAU,GAAG;AACpB,KAAI,CAAC,EACH;CAEF,MAAM,IAAI,QAAQ,EAAE;CACpB,MAAM,IAAI,EAAE;CACZ,MAAM,IAAI,IAAI,EAAE,GAAG;CACnB,MAAM,IAAI,IAAI,EAAE,GAAG;AACnB,QAAO,EAAE,IAAI,MACT,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,IAAI,EAAE,EAAE,CAAC,KACrC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;;AAG5B,IAAMA,QAAM;CACX,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH,GAAG;CACH;AACD,IAAM,UAAU;CACf,QAAQ;CACR,aAAa;CACb,MAAM;CACN,WAAW;CACX,MAAM;CACN,OAAO;CACP,QAAQ;CACR,OAAO;CACP,cAAc;CACd,IAAI;CACJ,SAAS;CACT,MAAM;CACN,WAAW;CACX,QAAQ;CACR,UAAU;CACV,SAAS;CACT,KAAK;CACL,aAAa;CACb,SAAS;CACT,SAAS;CACT,MAAM;CACN,KAAK;CACL,OAAO;CACP,SAAS;CACT,MAAM;CACN,MAAM;CACN,MAAM;CACN,QAAQ;CACR,SAAS;CACT,UAAU;CACV,QAAQ;CACR,OAAO;CACP,KAAK;CACL,QAAQ;CACR,QAAQ;CACR,MAAM;CACN,OAAO;CACP,OAAO;CACP,KAAK;CACL,QAAQ;CACR,QAAQ;CACR,UAAU;CACV,QAAQ;CACR,QAAQ;CACR,UAAU;CACV,UAAU;CACV,UAAU;CACV,UAAU;CACV,QAAQ;CACR,SAAS;CACT,WAAW;CACX,KAAK;CACL,QAAQ;CACR,KAAK;CACL,KAAK;CACL,OAAO;CACP,KAAK;CACL,SAAS;CACT,QAAQ;CACR,SAAS;CACT,OAAO;CACP,MAAM;CACN,OAAO;CACP,QAAQ;CACR,WAAW;CACX,SAAS;CACT,YAAY;CACZ,KAAK;CACL,MAAM;CACN,OAAO;CACP,WAAW;CACX,MAAM;CACN,MAAM;CACN,MAAM;CACN,MAAM;CACN,QAAQ;CACR,QAAQ;CACR,QAAQ;CACR,OAAO;CACP,OAAO;CACP,SAAS;CACT,KAAK;CACL,MAAM;CACN,SAAS;CACT,KAAK;CACL,QAAQ;CACR,OAAO;CACP,YAAY;CACZ,KAAK;CACL,OAAO;CACP,QAAQ;CACR,QAAQ;CACR,MAAM;CACN,WAAW;CACX,KAAK;CACL,UAAU;CACV,YAAY;CACZ,SAAS;CACT,UAAU;CACV,SAAS;CACT,YAAY;CACZ,MAAM;CACN,QAAQ;CACR,MAAM;CACN,SAAS;CACT,OAAO;CACP,SAAS;CACT,MAAM;CACN,WAAW;CACX,QAAQ;CACR,OAAO;CACP,YAAY;CACZ,WAAW;CACX,SAAS;CACT,MAAM;CACN,KAAK;CACL,MAAM;CACN,SAAS;CACT,OAAO;CACP,aAAa;CACb,IAAI;CACJ,UAAU;CACV,OAAO;CACP,WAAW;CACX,OAAO;CACP,WAAW;CACX,OAAO;CACP,SAAS;CACT,OAAO;CACP,QAAQ;CACR,OAAO;CACP,KAAK;CACL,MAAM;CACN,MAAM;CACN,MAAM;CACN,UAAU;CACV,QAAQ;CACR,KAAK;CACL,KAAK;CACL,OAAO;CACP,QAAQ;CACR,IAAI;CACJ,OAAO;CACP,KAAK;CACL,MAAM;CACN,WAAW;CACX,IAAI;CACJ,OAAO;CACP;AACD,SAAS,SAAS;CAChB,MAAM,WAAW,EAAE;CACnB,MAAM,OAAO,OAAO,KAAK,QAAQ;CACjC,MAAM,QAAQ,OAAO,KAAKA,MAAI;CAC9B,IAAI,GAAG,GAAG,GAAG,IAAI;AACjB,MAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,OAAK,KAAK,KAAK;AACf,OAAK,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACjC,OAAI,MAAM;AACV,QAAK,GAAG,QAAQ,GAAGA,MAAI,GAAG;;AAE5B,MAAI,SAAS,QAAQ,KAAK,GAAG;AAC7B,WAAS,MAAM;GAAC,KAAK,KAAK;GAAM,KAAK,IAAI;GAAM,IAAI;GAAK;;AAE1D,QAAO;;AAGT,IAAI;AACJ,SAAS,UAAU,KAAK;AACtB,KAAI,CAAC,OAAO;AACV,UAAQ,QAAQ;AAChB,QAAM,cAAc;GAAC;GAAG;GAAG;GAAG;GAAE;;CAElC,MAAM,IAAI,MAAM,IAAI,aAAa;AACjC,QAAO,KAAK;EACV,GAAG,EAAE;EACL,GAAG,EAAE;EACL,GAAG,EAAE;EACL,GAAG,EAAE,WAAW,IAAI,EAAE,KAAK;EAC5B;;AAGH,IAAM,SAAS;AACf,SAAS,SAAS,KAAK;CACrB,MAAM,IAAI,OAAO,KAAK,IAAI;CAC1B,IAAI,IAAI;CACR,IAAI,GAAG,GAAG;AACV,KAAI,CAAC,EACH;AAEF,KAAI,EAAE,OAAO,GAAG;EACd,MAAM,IAAI,CAAC,EAAE;AACb,MAAI,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI;;AAE1C,KAAI,CAAC,EAAE;AACP,KAAI,CAAC,EAAE;AACP,KAAI,CAAC,EAAE;AACP,KAAI,OAAO,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,GAAG,IAAI;AACzC,KAAI,OAAO,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,GAAG,IAAI;AACzC,KAAI,OAAO,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,GAAG,IAAI;AACzC,QAAO;EACF;EACA;EACA;EACA;EACJ;;AAEH,SAAS,UAAU,GAAG;AACpB,QAAO,MACL,EAAE,IAAI,MACF,QAAQ,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,CAAC,KACzC,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE;;AAInC,IAAM,MAAK,MAAK,KAAK,WAAY,IAAI,QAAQ,KAAK,IAAI,GAAG,IAAM,IAAI,GAAG,QAAQ;AAC9E,IAAM,QAAO,MAAK,KAAK,SAAU,IAAI,QAAQ,KAAK,KAAK,IAAI,QAAS,OAAO,IAAI;AAC/E,SAASC,cAAY,MAAM,MAAM,GAAG;CAClC,MAAM,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;CAC3B,MAAM,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;CAC3B,MAAM,IAAI,KAAK,IAAI,KAAK,EAAE,CAAC;AAC3B,QAAO;EACL,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC;EAC3C,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC;EAC3C,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,EAAE,CAAC,GAAG,GAAG,CAAC;EAC3C,GAAG,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK;EAChC;;AAGH,SAAS,OAAO,GAAG,GAAG,OAAO;AAC3B,KAAI,GAAG;EACL,IAAI,MAAM,QAAQ,EAAE;AACpB,MAAI,KAAK,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,OAAO,MAAM,IAAI,MAAM,EAAE,CAAC;AAC1E,QAAM,QAAQ,IAAI;AAClB,IAAE,IAAI,IAAI;AACV,IAAE,IAAI,IAAI;AACV,IAAE,IAAI,IAAI;;;AAGd,SAASC,QAAM,GAAG,OAAO;AACvB,QAAO,IAAI,OAAO,OAAO,SAAS,EAAE,EAAE,EAAE,GAAG;;AAE7C,SAAS,WAAW,OAAO;CACzB,IAAI,IAAI;EAAC,GAAG;EAAG,GAAG;EAAG,GAAG;EAAG,GAAG;EAAI;AAClC,KAAI,MAAM,QAAQ,MAAM,EACtB;MAAI,MAAM,UAAU,GAAG;AACrB,OAAI;IAAC,GAAG,MAAM;IAAI,GAAG,MAAM;IAAI,GAAG,MAAM;IAAI,GAAG;IAAI;AACnD,OAAI,MAAM,SAAS,EACjB,GAAE,IAAI,IAAI,MAAM,GAAG;;QAGlB;AACL,MAAIA,QAAM,OAAO;GAAC,GAAG;GAAG,GAAG;GAAG,GAAG;GAAG,GAAG;GAAE,CAAC;AAC1C,IAAE,IAAI,IAAI,EAAE,EAAE;;AAEhB,QAAO;;AAET,SAAS,cAAc,KAAK;AAC1B,KAAI,IAAI,OAAO,EAAE,KAAK,IACpB,QAAO,SAAS,IAAI;AAEtB,QAAO,SAAS,IAAI;;AAEtB,IAAM,QAAN,MAAM,MAAM;CACV,YAAY,OAAO;AACjB,MAAI,iBAAiB,MACnB,QAAO;EAET,MAAM,OAAO,OAAO;EACpB,IAAI;AACJ,MAAI,SAAS,SACX,KAAI,WAAW,MAAM;WACZ,SAAS,SAClB,KAAI,SAAS,MAAM,IAAI,UAAU,MAAM,IAAI,cAAc,MAAM;AAEjE,OAAK,OAAO;AACZ,OAAK,SAAS,CAAC,CAAC;;CAElB,IAAI,QAAQ;AACV,SAAO,KAAK;;CAEd,IAAI,MAAM;EACR,IAAI,IAAIA,QAAM,KAAK,KAAK;AACxB,MAAI,EACF,GAAE,IAAI,IAAI,EAAE,EAAE;AAEhB,SAAO;;CAET,IAAI,IAAI,KAAK;AACX,OAAK,OAAO,WAAW,IAAI;;CAE7B,YAAY;AACV,SAAO,KAAK,SAAS,UAAU,KAAK,KAAK,GAAG;;CAE9C,YAAY;AACV,SAAO,KAAK,SAAS,UAAU,KAAK,KAAK,GAAG;;CAE9C,YAAY;AACV,SAAO,KAAK,SAAS,UAAU,KAAK,KAAK,GAAG;;CAE9C,IAAI,SAAO,QAAQ;AACjB,MAAIC,SAAO;GACT,MAAM,KAAK,KAAK;GAChB,MAAM,KAAKA,QAAM;GACjB,IAAI;GACJ,MAAM,IAAI,WAAW,KAAK,KAAM;GAChC,MAAM,IAAI,IAAI,IAAI;GAClB,MAAM,IAAI,GAAG,IAAI,GAAG;GACpB,MAAM,OAAO,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,IAAI,IAAI,MAAM,KAAK;AAC9D,QAAK,IAAI;AACT,MAAG,IAAI,MAAO,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AACtC,MAAG,IAAI,MAAO,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AACtC,MAAG,IAAI,MAAO,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AACtC,MAAG,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG;AAC/B,QAAK,MAAM;;AAEb,SAAO;;CAET,YAAY,SAAO,GAAG;AACpB,MAAIA,QACF,MAAK,OAAOF,cAAY,KAAK,MAAME,QAAM,MAAM,EAAE;AAEnD,SAAO;;CAET,QAAQ;AACN,SAAO,IAAI,MAAM,KAAK,IAAI;;CAE5B,MAAM,GAAG;AACP,OAAK,KAAK,IAAI,IAAI,EAAE;AACpB,SAAO;;CAET,QAAQ,OAAO;EACb,MAAM,MAAM,KAAK;AACjB,MAAI,KAAK,IAAI;AACb,SAAO;;CAET,YAAY;EACV,MAAM,MAAM,KAAK;AAEjB,MAAI,IAAI,IAAI,IAAI,IAAI,IADR,MAAM,IAAI,IAAI,KAAM,IAAI,IAAI,MAAO,IAAI,IAAI,IAAK;AAE5D,SAAO;;CAET,QAAQ,OAAO;EACb,MAAM,MAAM,KAAK;AACjB,MAAI,KAAK,IAAI;AACb,SAAO;;CAET,SAAS;EACP,MAAM,IAAI,KAAK;AACf,IAAE,IAAI,MAAM,EAAE;AACd,IAAE,IAAI,MAAM,EAAE;AACd,IAAE,IAAI,MAAM,EAAE;AACd,SAAO;;CAET,QAAQ,OAAO;AACb,SAAO,KAAK,MAAM,GAAG,MAAM;AAC3B,SAAO;;CAET,OAAO,OAAO;AACZ,SAAO,KAAK,MAAM,GAAG,CAAC,MAAM;AAC5B,SAAO;;CAET,SAAS,OAAO;AACd,SAAO,KAAK,MAAM,GAAG,MAAM;AAC3B,SAAO;;CAET,WAAW,OAAO;AAChB,SAAO,KAAK,MAAM,GAAG,CAAC,MAAM;AAC5B,SAAO;;CAET,OAAO,KAAK;AACV,SAAO,KAAK,MAAM,IAAI;AACtB,SAAO;;;;;;;;;;;GCxjBP,SAAS,OAAO;;;GAIhB,IAAM,aAAW;CACjB,IAAI,KAAK;AACT,cAAW;IACX;;;;;GAKA,SAAS,cAAc,OAAO;AAC9B,QAAO,UAAU,QAAQ,UAAU;;;;;;GAMnC,SAAS,QAAQ,OAAO;AACxB,KAAI,MAAM,WAAW,MAAM,QAAQ,MAAM,CACrC,QAAO;CAEX,MAAM,OAAO,OAAO,UAAU,SAAS,KAAK,MAAM;AAClD,KAAI,KAAK,MAAM,GAAG,EAAE,KAAK,aAAa,KAAK,MAAM,GAAG,KAAK,SACrD,QAAO;AAEX,QAAO;;;;;;GAMP,SAAS,SAAS,OAAO;AACzB,QAAO,UAAU,QAAQ,OAAO,UAAU,SAAS,KAAK,MAAM,KAAK;;;;;GAKnE,SAAS,eAAe,OAAO;AAC/B,SAAQ,OAAO,UAAU,YAAY,iBAAiB,WAAW,SAAS,CAAC,MAAM;;;;;;GAMjF,SAAS,gBAAgB,OAAO,cAAc;AAC9C,QAAO,eAAe,MAAM,GAAG,QAAQ;;;;;;GAMvC,SAAS,eAAe,OAAO,cAAc;AAC7C,QAAO,OAAO,UAAU,cAAc,eAAe;;AAEzD,IAAM,gBAAgB,OAAO,cAAY,OAAO,UAAU,YAAY,MAAM,SAAS,IAAI,GAAG,WAAW,MAAM,GAAG,MAAM,CAAC,QAAQ;AAC/H,IAAM,eAAe,OAAO,cAAY,OAAO,UAAU,YAAY,MAAM,SAAS,IAAI,GAAG,WAAW,MAAM,GAAG,MAAM,YAAY,CAAC;;;;;;;GAO9H,SAAS,SAAS,IAAI,MAAM,SAAS;AACrC,KAAI,MAAM,OAAO,GAAG,SAAS,WACzB,QAAO,GAAG,MAAM,SAAS,KAAK;;AAGtC,SAAS,KAAK,UAAU,IAAI,SAAS,SAAS;CAC1C,IAAI,GAAG,KAAK;AACZ,KAAI,QAAQ,SAAS,EAAE;AACnB,QAAM,SAAS;AACf,MAAI,QACA,MAAI,IAAI,MAAM,GAAG,KAAK,GAAG,IACrB,IAAG,KAAK,SAAS,SAAS,IAAI,EAAE;MAGpC,MAAI,IAAI,GAAG,IAAI,KAAK,IAChB,IAAG,KAAK,SAAS,SAAS,IAAI,EAAE;YAGjC,SAAS,SAAS,EAAE;AAC3B,SAAO,OAAO,KAAK,SAAS;AAC5B,QAAM,KAAK;AACX,OAAI,IAAI,GAAG,IAAI,KAAK,IAChB,IAAG,KAAK,SAAS,SAAS,KAAK,KAAK,KAAK,GAAG;;;;;;;;GASpD,SAAS,eAAe,IAAI,IAAI;CAChC,IAAI,GAAG,MAAM,IAAI;AACjB,KAAI,CAAC,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,OAC/B,QAAO;AAEX,MAAI,IAAI,GAAG,OAAO,GAAG,QAAQ,IAAI,MAAM,EAAE,GAAE;AACvC,OAAK,GAAG;AACR,OAAK,GAAG;AACR,MAAI,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,UAAU,GAAG,MACvD,QAAO;;AAGf,QAAO;;;;;GAKP,SAAS,MAAM,QAAQ;AACvB,KAAI,QAAQ,OAAO,CACf,QAAO,OAAO,IAAI,MAAM;AAE5B,KAAI,SAAS,OAAO,EAAE;EAClB,MAAM,SAAS,OAAO,OAAO,KAAK;EAClC,MAAM,OAAO,OAAO,KAAK,OAAO;EAChC,MAAM,OAAO,KAAK;EAClB,IAAI,IAAI;AACR,SAAM,IAAI,MAAM,EAAE,EACd,QAAO,KAAK,MAAM,MAAM,OAAO,KAAK,IAAI;AAE5C,SAAO;;AAEX,QAAO;;AAEX,SAAS,WAAW,KAAK;AACrB,QAAO;EACH;EACA;EACA;EACH,CAAC,QAAQ,IAAI,KAAK;;;;;;GAMnB,SAAS,QAAQ,KAAK,QAAQ,QAAQ,SAAS;AAC/C,KAAI,CAAC,WAAW,IAAI,CAChB;CAEJ,MAAM,OAAO,OAAO;CACpB,MAAM,OAAO,OAAO;AACpB,KAAI,SAAS,KAAK,IAAI,SAAS,KAAK,CAEhC,OAAM,MAAM,MAAM,QAAQ;KAE1B,QAAO,OAAO,MAAM,KAAK;;AAGjC,SAAS,MAAM,QAAQ,QAAQ,SAAS;CACpC,MAAM,UAAU,QAAQ,OAAO,GAAG,SAAS,CACvC,OACH;CACD,MAAM,OAAO,QAAQ;AACrB,KAAI,CAAC,SAAS,OAAO,CACjB,QAAO;AAEX,WAAU,WAAW,EAAE;CACvB,MAAM,SAAS,QAAQ,UAAU;CACjC,IAAI;AACJ,MAAI,IAAI,IAAI,GAAG,IAAI,MAAM,EAAE,GAAE;AACzB,YAAU,QAAQ;AAClB,MAAI,CAAC,SAAS,QAAQ,CAClB;EAEJ,MAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,OAAI,IAAI,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,EAAE,EAC3C,QAAO,KAAK,IAAI,QAAQ,SAAS,QAAQ;;AAGjD,QAAO;;AAEX,SAAS,QAAQ,QAAQ,QAAQ;AAE7B,QAAO,MAAM,QAAQ,QAAQ,EACzB,QAAQ,WACX,CAAC;;;;;GAKF,SAAS,UAAU,KAAK,QAAQ,QAAQ;AACxC,KAAI,CAAC,WAAW,IAAI,CAChB;CAEJ,MAAM,OAAO,OAAO;CACpB,MAAM,OAAO,OAAO;AACpB,KAAI,SAAS,KAAK,IAAI,SAAS,KAAK,CAChC,SAAQ,MAAM,KAAK;UACZ,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,IAAI,CACzD,QAAO,OAAO,MAAM,KAAK;;AAWjC,IAAM,eAAe;CAEjB,KAAK,MAAI;CAET,IAAI,MAAI,EAAE;CACV,IAAI,MAAI,EAAE;CACb;;;GAGG,SAAS,UAAU,KAAK;CACxB,MAAM,QAAQ,IAAI,MAAM,IAAI;CAC5B,MAAM,OAAO,EAAE;CACf,IAAI,MAAM;AACV,MAAK,MAAM,QAAQ,OAAM;AACrB,SAAO;AACP,MAAI,IAAI,SAAS,KAAK,CAClB,OAAM,IAAI,MAAM,GAAG,GAAG,GAAG;OACtB;AACH,QAAK,KAAK,IAAI;AACd,SAAM;;;AAGd,QAAO;;AAEX,SAAS,gBAAgB,KAAK;CAC1B,MAAM,OAAO,UAAU,IAAI;AAC3B,SAAQ,QAAM;AACV,OAAK,MAAM,KAAK,MAAK;AACjB,OAAI,MAAM,GACN;AAEJ,SAAM,OAAO,IAAI;;AAErB,SAAO;;;AAGf,SAAS,iBAAiB,KAAK,KAAK;AAEhC,SADiB,aAAa,SAAS,aAAa,OAAO,gBAAgB,IAAI,GAC/D,IAAI;;;;GAIpB,SAAS,YAAY,KAAK;AAC1B,QAAO,IAAI,OAAO,EAAE,CAAC,aAAa,GAAG,IAAI,MAAM,EAAE;;AAErD,IAAM,WAAW,UAAQ,OAAO,UAAU;AAC1C,IAAM,cAAc,UAAQ,OAAO,UAAU;AAE7C,IAAM,aAAa,GAAG,MAAI;AACtB,KAAI,EAAE,SAAS,EAAE,KACb,QAAO;AAEX,MAAK,MAAM,QAAQ,EACf,KAAI,CAAC,EAAE,IAAI,KAAK,CACZ,QAAO;AAGf,QAAO;;;;;GAKP,SAAS,cAAc,GAAG;AAC1B,QAAO,EAAE,SAAS,aAAa,EAAE,SAAS,WAAW,EAAE,SAAS;;;;;GAMhE,IAAM,KAAK,KAAK;AACpB,IAAM,MAAM,IAAI;AAChB,IAAM,QAAQ,MAAM;AACpB,IAAM,WAAW,OAAO;AACxB,IAAM,cAAc,KAAK;AACzB,IAAM,UAAU,KAAK;AACrB,IAAM,aAAa,KAAK;AACxB,IAAM,gBAAgB,KAAK,IAAI;AAC/B,IAAM,QAAQ,KAAK;AACnB,IAAM,OAAO,KAAK;AAClB,SAAS,aAAa,GAAG,GAAG,SAAS;AACjC,QAAO,KAAK,IAAI,IAAI,EAAE,GAAG;;;;GAIzB,SAAS,QAAQ,OAAO;CACxB,MAAM,eAAe,KAAK,MAAM,MAAM;AACtC,SAAQ,aAAa,OAAO,cAAc,QAAQ,IAAK,GAAG,eAAe;CACzE,MAAM,YAAY,KAAK,IAAI,IAAI,KAAK,MAAM,MAAM,MAAM,CAAC,CAAC;CACxD,MAAM,WAAW,QAAQ;AAEzB,SADqB,YAAY,IAAI,IAAI,YAAY,IAAI,IAAI,YAAY,IAAI,IAAI,MAC3D;;;;;GAKtB,SAAS,WAAW,OAAO;CAC3B,MAAM,SAAS,EAAE;CACjB,MAAM,OAAO,KAAK,KAAK,MAAM;CAC7B,IAAI;AACJ,MAAI,IAAI,GAAG,IAAI,MAAM,IACjB,KAAI,QAAQ,MAAM,GAAG;AACjB,SAAO,KAAK,EAAE;AACd,SAAO,KAAK,QAAQ,EAAE;;AAG9B,KAAI,UAAU,OAAO,GACjB,QAAO,KAAK,KAAK;AAErB,QAAO,MAAM,GAAG,MAAI,IAAI,EAAE,CAAC,KAAK;AAChC,QAAO;;;;GAIP,SAAS,eAAe,GAAG;AAC3B,QAAO,OAAO,MAAM,YAAY,OAAO,MAAM,YAAY,MAAM,QAAQ,EAAE,OAAO,eAAe,KAAK,cAAc,KAAK,aAAa;;AAExI,SAAS,SAAS,GAAG;AACjB,QAAO,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,WAAW,EAAE,CAAC,IAAI,SAAS,EAAE;;AAErE,SAAS,YAAY,GAAG,SAAS;CAC7B,MAAM,UAAU,KAAK,MAAM,EAAE;AAC7B,QAAO,UAAU,WAAW,KAAK,UAAU,WAAW;;;;GAItD,SAAS,mBAAmB,OAAO,QAAQ,UAAU;CACrD,IAAI,GAAG,MAAM;AACb,MAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,KAAI;AAC1C,UAAQ,MAAM,GAAG;AACjB,MAAI,CAAC,MAAM,MAAM,EAAE;AACf,UAAO,MAAM,KAAK,IAAI,OAAO,KAAK,MAAM;AACxC,UAAO,MAAM,KAAK,IAAI,OAAO,KAAK,MAAM;;;;AAIpD,SAAS,UAAU,SAAS;AACxB,QAAO,WAAW,KAAK;;AAE3B,SAAS,UAAU,SAAS;AACxB,QAAO,WAAW,MAAM;;;;;;;;GAQxB,SAAS,eAAe,GAAG;AAC3B,KAAI,CAAC,eAAe,EAAE,CAClB;CAEJ,IAAI,IAAI;CACR,IAAI,IAAI;AACR,QAAM,KAAK,MAAM,IAAI,EAAE,GAAG,MAAM,GAAE;AAC9B,OAAK;AACL;;AAEJ,QAAO;;AAGX,SAAS,kBAAkB,aAAa,YAAY;CAChD,MAAM,sBAAsB,WAAW,IAAI,YAAY;CACvD,MAAM,sBAAsB,WAAW,IAAI,YAAY;CACvD,MAAM,2BAA2B,KAAK,KAAK,sBAAsB,sBAAsB,sBAAsB,oBAAoB;CACjI,IAAI,QAAQ,KAAK,MAAM,qBAAqB,oBAAoB;AAChE,KAAI,QAAQ,MAAO,GACf,UAAS;AAEb,QAAO;EACH;EACA,UAAU;EACb;;AAEL,SAAS,sBAAsB,KAAK,KAAK;AACrC,QAAO,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;;;;;GAKzE,SAAS,WAAW,GAAG,GAAG;AAC1B,SAAQ,IAAI,IAAI,SAAS,MAAM;;;;;GAK/B,SAAS,gBAAgB,GAAG;AAC5B,SAAQ,IAAI,MAAM,OAAO;;;;GAIzB,SAAS,cAAc,OAAO,OAAO,KAAK,uBAAuB;CACjE,MAAM,IAAI,gBAAgB,MAAM;CAChC,MAAM,IAAI,gBAAgB,MAAM;CAChC,MAAM,IAAI,gBAAgB,IAAI;CAC9B,MAAM,eAAe,gBAAgB,IAAI,EAAE;CAC3C,MAAM,aAAa,gBAAgB,IAAI,EAAE;CACzC,MAAM,eAAe,gBAAgB,IAAI,EAAE;CAC3C,MAAM,aAAa,gBAAgB,IAAI,EAAE;AACzC,QAAO,MAAM,KAAK,MAAM,KAAK,yBAAyB,MAAM,KAAK,eAAe,cAAc,eAAe;;;;;;;;GAQ7G,SAAS,YAAY,OAAO,KAAK,KAAK;AACtC,QAAO,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,MAAM,CAAC;;;;;GAK1C,SAAS,YAAY,OAAO;AAC5B,QAAO,YAAY,OAAO,QAAQ,MAAM;;;;;;;;GAQxC,SAAS,WAAW,OAAO,OAAO,KAAK,UAAU,MAAM;AACvD,QAAO,SAAS,KAAK,IAAI,OAAO,IAAI,GAAG,WAAW,SAAS,KAAK,IAAI,OAAO,IAAI,GAAG;;AAGtF,SAAS,QAAQ,OAAO,OAAO,KAAK;AAChC,OAAM,SAAS,YAAQ,MAAMC,WAAS;CACtC,IAAI,KAAK,MAAM,SAAS;CACxB,IAAI,KAAK;CACT,IAAI;AACJ,QAAM,KAAK,KAAK,GAAE;AACd,QAAM,KAAK,MAAM;AACjB,MAAI,IAAI,IAAI,CACR,MAAK;MAEL,MAAK;;AAGb,QAAO;EACH;EACA;EACH;;;;;;;;;GASD,IAAM,gBAAgB,OAAO,KAAK,OAAO,SAAO,QAAQ,OAAO,OAAO,QAAQ,YAAQ;CAClF,MAAM,KAAK,MAAMA,SAAO;AACxB,QAAO,KAAK,SAAS,OAAO,SAAS,MAAMA,UAAQ,GAAG,SAAS;KAC9D,YAAQ,MAAMA,SAAO,OAAO,MAAM;;;;;;;GAOvC,IAAM,iBAAiB,OAAO,KAAK,UAAQ,QAAQ,OAAO,QAAQ,YAAQ,MAAMA,SAAO,QAAQ,MAAM;;;;;;;GAOrG,SAAS,eAAe,QAAQ,KAAK,KAAK;CAC1C,IAAI,QAAQ;CACZ,IAAI,MAAM,OAAO;AACjB,QAAM,QAAQ,OAAO,OAAO,SAAS,IACjC;AAEJ,QAAM,MAAM,SAAS,OAAO,MAAM,KAAK,IACnC;AAEJ,QAAO,QAAQ,KAAK,MAAM,OAAO,SAAS,OAAO,MAAM,OAAO,IAAI,GAAG;;AAEzE,IAAM,cAAc;CAChB;CACA;CACA;CACA;CACA;CACH;AACD,SAAS,kBAAkB,OAAO,UAAU;AACxC,KAAI,MAAM,UAAU;AAChB,QAAM,SAAS,UAAU,KAAK,SAAS;AACvC;;AAEJ,QAAO,eAAe,OAAO,YAAY;EACrC,cAAc;EACd,YAAY;EACZ,OAAO,EACH,WAAW,CACP,SACH,EACJ;EACJ,CAAC;AACF,aAAY,SAAS,QAAM;EACvB,MAAM,SAAS,YAAY,YAAY,IAAI;EAC3C,MAAM,OAAO,MAAM;AACnB,SAAO,eAAe,OAAO,KAAK;GAC9B,cAAc;GACd,YAAY;GACZ,MAAO,GAAG,MAAM;IACZ,MAAM,MAAM,KAAK,MAAM,MAAM,KAAK;AAClC,UAAM,SAAS,UAAU,SAAS,WAAS;AACvC,SAAI,OAAO,OAAO,YAAY,WAC1B,QAAO,QAAQ,GAAG,KAAK;MAE7B;AACF,WAAO;;GAEd,CAAC;GACJ;;AAEN,SAAS,oBAAoB,OAAO,UAAU;CAC1C,MAAM,OAAO,MAAM;AACnB,KAAI,CAAC,KACD;CAEJ,MAAM,YAAY,KAAK;CACvB,MAAMA,UAAQ,UAAU,QAAQ,SAAS;AACzC,KAAIA,YAAU,GACV,WAAU,OAAOA,SAAO,EAAE;AAE9B,KAAI,UAAU,SAAS,EACnB;AAEJ,aAAY,SAAS,QAAM;AACvB,SAAO,MAAM;GACf;AACF,QAAO,MAAM;;;;GAIb,SAAS,aAAa,OAAO;CAC7B,MAAMC,QAAM,IAAI,IAAI,MAAM;AAC1B,KAAIA,MAAI,SAAS,MAAM,OACnB,QAAO;AAEX,QAAO,MAAM,KAAKA,MAAI;;;;GAQvB,IAAM,mBAAmB,WAAW;AACnC,KAAI,OAAO,WAAW,YAClB,QAAO,SAAS,YAAU;AACtB,SAAOC,YAAU;;AAGzB,QAAO,OAAO;GACf;;;;GAIC,SAAS,UAAU,IAAI,SAAS;CAChC,IAAI,YAAY,EAAE;CAClB,IAAI,UAAU;AACd,QAAO,SAAS,GAAG,MAAM;AAErB,cAAY;AACZ,MAAI,CAAC,SAAS;AACV,aAAU;AACV,oBAAiB,KAAK,cAAY;AAC9B,cAAU;AACV,OAAG,MAAM,SAAS,UAAU;KAC9B;;;;;;GAMV,SAAS,SAAS,IAAI,OAAO;CAC7B,IAAI;AACJ,QAAO,SAAS,GAAG,MAAM;AACrB,MAAI,OAAO;AACP,gBAAa,QAAQ;AACrB,aAAU,WAAW,IAAI,OAAO,KAAK;QAErC,IAAG,MAAM,MAAM,KAAK;AAExB,SAAO;;;;;;GAMX,IAAM,sBAAsB,UAAQ,UAAU,UAAU,SAAS,UAAU,QAAQ,UAAU;;;;GAI7F,IAAM,kBAAkB,OAAO,OAAO,QAAM,UAAU,UAAU,QAAQ,UAAU,QAAQ,OAAO,QAAQ,OAAO;;;;GAIhH,IAAM,UAAU,OAAO,MAAM,OAAO,QAAM;AAE1C,QAAO,WADO,MAAM,SAAS,WACJ,QAAQ,UAAU,YAAY,OAAO,SAAS,IAAI;;;;;GAK3E,SAAS,iCAAiC,MAAM,QAAQ,oBAAoB;CAC5E,MAAM,aAAa,OAAO;CAC1B,IAAI,QAAQ;CACZ,IAAI,QAAQ;AACZ,KAAI,KAAK,SAAS;EACd,MAAM,EAAE,QAAS,QAAS,YAAa;EACvC,MAAM,WAAW,KAAK,UAAU,KAAK,QAAQ,UAAU,KAAK,QAAQ,QAAQ,WAAW,OAAO;EAC9F,MAAM,OAAO,OAAO;EACpB,MAAM,EAAE,KAAM,KAAM,YAAa,eAAgB,OAAO,eAAe;AACvE,MAAI,YAAY;AACZ,WAAQ,KAAK,IACb,aAAa,SAAS,MAAM,IAAI,CAAC,IACjC,qBAAqB,aAAa,aAAa,QAAQ,MAAM,OAAO,iBAAiB,IAAI,CAAC,CAAC,GAAG;AAC9F,OAAI,UAAU;IACV,MAAM,sBAAsB,QAAQ,MAAM,GAAG,QAAQ,EAAE,CAAC,SAAS,CAAC,WAAW,UAAQ,CAAC,cAAc,MAAM,OAAO,MAAM,CAAC;AACxH,aAAS,KAAK,IAAI,GAAG,oBAAoB;;AAE7C,WAAQ,YAAY,OAAO,GAAG,aAAa,EAAE;;AAEjD,MAAI,YAAY;GACZ,IAAI,MAAM,KAAK,IACf,aAAa,SAAS,OAAO,MAAM,KAAK,KAAK,CAAC,KAAK,GACnD,qBAAqB,IAAI,aAAa,QAAQ,MAAM,OAAO,iBAAiB,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE;AAC/F,OAAI,UAAU;IACV,MAAM,sBAAsB,QAAQ,MAAM,MAAM,EAAE,CAAC,WAAW,UAAQ,CAAC,cAAc,MAAM,OAAO,MAAM,CAAC;AACzG,WAAO,KAAK,IAAI,GAAG,oBAAoB;;AAE3C,WAAQ,YAAY,KAAK,OAAO,WAAW,GAAG;QAE9C,SAAQ,aAAa;;AAG7B,QAAO;EACH;EACA;EACH;;;;;;;GAOD,SAAS,oBAAoB,MAAM;CACnC,MAAM,EAAE,QAAS,QAAS,iBAAkB;CAC5C,MAAM,YAAY;EACd,MAAM,OAAO;EACb,MAAM,OAAO;EACb,MAAM,OAAO;EACb,MAAM,OAAO;EAChB;AACD,KAAI,CAAC,cAAc;AACf,OAAK,eAAe;AACpB,SAAO;;CAEX,MAAM,UAAU,aAAa,SAAS,OAAO,OAAO,aAAa,SAAS,OAAO,OAAO,aAAa,SAAS,OAAO,OAAO,aAAa,SAAS,OAAO;AACzJ,QAAO,OAAO,cAAc,UAAU;AACtC,QAAO;;AAGX,IAAM,UAAU,MAAI,MAAM,KAAK,MAAM;AACrC,IAAM,aAAa,GAAG,GAAG,MAAI,EAAE,KAAK,IAAI,GAAG,MAAM,KAAK,GAAG,GAAG,KAAK,KAAK,IAAI,KAAK,MAAM,EAAE;AACvF,IAAM,cAAc,GAAG,GAAG,MAAI,KAAK,IAAI,GAAG,MAAM,EAAE,GAAG,KAAK,KAAK,IAAI,KAAK,MAAM,EAAE,GAAG;;;;;GAK/E,IAAM,UAAU;CAChB,SAAS,MAAI;CACb,aAAa,MAAI,IAAI;CACrB,cAAc,MAAI,CAAC,KAAK,IAAI;CAC5B,gBAAgB,OAAK,KAAK,MAAO,IAAI,KAAM,IAAI,IAAI,OAAQ,EAAE,KAAK,IAAI,KAAK;CAC3E,cAAc,MAAI,IAAI,IAAI;CAC1B,eAAe,OAAK,KAAK,KAAK,IAAI,IAAI;CACtC,iBAAiB,OAAK,KAAK,MAAO,IAAI,KAAM,IAAI,IAAI,IAAI,OAAQ,KAAK,KAAK,IAAI,IAAI;CAClF,cAAc,MAAI,IAAI,IAAI,IAAI;CAC9B,eAAe,MAAI,GAAG,KAAK,KAAK,IAAI,IAAI,IAAI;CAC5C,iBAAiB,OAAK,KAAK,MAAO,IAAI,KAAM,IAAI,IAAI,IAAI,IAAI,QAAS,KAAK,KAAK,IAAI,IAAI,IAAI;CAC3F,cAAc,MAAI,IAAI,IAAI,IAAI,IAAI;CAClC,eAAe,OAAK,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI;CAC9C,iBAAiB,OAAK,KAAK,MAAO,IAAI,KAAM,IAAI,IAAI,IAAI,IAAI,IAAI,OAAQ,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI;CAClG,aAAa,MAAI,CAAC,KAAK,IAAI,IAAI,QAAQ,GAAG;CAC1C,cAAc,MAAI,KAAK,IAAI,IAAI,QAAQ;CACvC,gBAAgB,MAAI,OAAQ,KAAK,IAAI,KAAK,EAAE,GAAG;CAC/C,aAAa,MAAI,MAAM,IAAI,IAAI,KAAK,IAAI,GAAG,MAAM,IAAI,GAAG;CACxD,cAAc,MAAI,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,MAAM,EAAE,GAAG;CACxD,gBAAgB,MAAI,OAAO,EAAE,GAAG,IAAI,IAAI,KAAM,KAAM,KAAK,IAAI,GAAG,MAAM,IAAI,IAAI,GAAG,GAAG,MAAO,CAAC,KAAK,IAAI,GAAG,OAAO,IAAI,IAAI,GAAG,GAAG;CAC7H,aAAa,MAAI,KAAK,IAAI,IAAI,EAAE,KAAK,KAAK,IAAI,IAAI,EAAE,GAAG;CACvD,cAAc,MAAI,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;CAC7C,gBAAgB,OAAK,KAAK,MAAO,IAAI,OAAQ,KAAK,KAAK,IAAI,IAAI,EAAE,GAAG,KAAK,MAAO,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE,GAAG;CAC9G,gBAAgB,MAAI,OAAO,EAAE,GAAG,IAAI,UAAU,GAAG,MAAO,GAAI;CAC5D,iBAAiB,MAAI,OAAO,EAAE,GAAG,IAAI,WAAW,GAAG,MAAO,GAAI;CAC9D,iBAAkB,GAAG;EACjB,MAAM,IAAI;EACV,MAAM,IAAI;AACV,SAAO,OAAO,EAAE,GAAG,IAAI,IAAI,KAAM,KAAM,UAAU,IAAI,GAAG,GAAG,EAAE,GAAG,KAAM,KAAM,WAAW,IAAI,IAAI,GAAG,GAAG,EAAE;;CAE3G,WAAY,GAAG;EACX,MAAM,IAAI;AACV,SAAO,IAAI,MAAM,IAAI,KAAK,IAAI;;CAElC,YAAa,GAAG;EACZ,MAAM,IAAI;AACV,UAAQ,KAAK,KAAK,MAAM,IAAI,KAAK,IAAI,KAAK;;CAE9C,cAAe,GAAG;EACd,IAAI,IAAI;AACR,OAAK,KAAK,MAAO,EACb,QAAO,MAAO,IAAI,OAAO,KAAK,SAAS,KAAK,IAAI;AAEpD,SAAO,OAAQ,KAAK,KAAK,OAAO,KAAK,SAAS,KAAK,IAAI,KAAK;;CAEhE,eAAe,MAAI,IAAI,QAAQ,cAAc,IAAI,EAAE;CACnD,cAAe,GAAG;EACd,MAAM,IAAI;EACV,MAAM,IAAI;AACV,MAAI,IAAI,IAAI,EACR,QAAO,IAAI,IAAI;AAEnB,MAAI,IAAI,IAAI,EACR,QAAO,KAAK,KAAK,MAAM,KAAK,IAAI;AAEpC,MAAI,IAAI,MAAM,EACV,QAAO,KAAK,KAAK,OAAO,KAAK,IAAI;AAErC,SAAO,KAAK,KAAK,QAAQ,KAAK,IAAI;;CAEtC,kBAAkB,MAAI,IAAI,KAAM,QAAQ,aAAa,IAAI,EAAE,GAAG,KAAM,QAAQ,cAAc,IAAI,IAAI,EAAE,GAAG,KAAM;CAChH;AAED,SAAS,oBAAoB,OAAO;AAChC,KAAI,SAAS,OAAO,UAAU,UAAU;EACpC,MAAM,OAAO,MAAM,UAAU;AAC7B,SAAO,SAAS,4BAA4B,SAAS;;AAEzD,QAAO;;AAEX,SAAS,MAAM,OAAO;AAClB,QAAO,oBAAoB,MAAM,GAAG,QAAQ,IAAI,MAAM,MAAM;;AAEhE,SAAS,cAAc,OAAO;AAC1B,QAAO,oBAAoB,MAAM,GAAG,QAAQ,IAAI,MAAM,MAAM,CAAC,SAAS,GAAI,CAAC,OAAO,GAAI,CAAC,WAAW;;AAGtG,IAAM,UAAU;CACZ;CACA;CACA;CACA;CACA;CACH;AACD,IAAM,SAAS;CACX;CACA;CACA;CACH;AACD,SAAS,wBAAwB,YAAU;AACvC,YAAS,IAAI,aAAa;EACtB,OAAO;EACP,UAAU;EACV,QAAQ;EACR,IAAI;EACJ,MAAM;EACN,MAAM;EACN,IAAI;EACJ,MAAM;EACT,CAAC;AACF,YAAS,SAAS,aAAa;EAC3B,WAAW;EACX,YAAY;EACZ,cAAc,SAAO,SAAS,gBAAgB,SAAS,gBAAgB,SAAS;EACnF,CAAC;AACF,YAAS,IAAI,cAAc;EACvB,QAAQ;GACJ,MAAM;GACN,YAAY;GACf;EACD,SAAS;GACL,MAAM;GACN,YAAY;GACf;EACJ,CAAC;AACF,YAAS,SAAS,cAAc,EAC5B,WAAW,aACd,CAAC;AACF,YAAS,IAAI,eAAe;EACxB,QAAQ,EACJ,WAAW,EACP,UAAU,KACb,EACJ;EACD,QAAQ,EACJ,WAAW,EACP,UAAU,GACb,EACJ;EACD,MAAM,EACF,YAAY;GACR,QAAQ,EACJ,MAAM,eACT;GACD,SAAS;IACL,MAAM;IACN,UAAU;IACb;GACJ,EACJ;EACD,MAAM,EACF,YAAY;GACR,QAAQ,EACJ,IAAI,eACP;GACD,SAAS;IACL,MAAM;IACN,QAAQ;IACR,KAAK,MAAI,IAAI;IAChB;GACJ,EACJ;EACJ,CAAC;;AAGN,SAAS,qBAAqB,YAAU;AACpC,YAAS,IAAI,UAAU;EACnB,aAAa;EACb,SAAS;GACL,KAAK;GACL,OAAO;GACP,QAAQ;GACR,MAAM;GACT;EACJ,CAAC;;AAGN,IAAM,4BAAY,IAAI,KAAK;AAC3B,SAAS,gBAAgB,QAAQ,SAAS;AACtC,WAAU,WAAW,EAAE;CACvB,MAAM,WAAW,SAAS,KAAK,UAAU,QAAQ;CACjD,IAAI,YAAY,UAAU,IAAI,SAAS;AACvC,KAAI,CAAC,WAAW;AACZ,cAAY,IAAI,KAAK,aAAa,QAAQ,QAAQ;AAClD,YAAU,IAAI,UAAU,UAAU;;AAEtC,QAAO;;AAEX,SAAS,aAAa,KAAK,QAAQ,SAAS;AACxC,QAAO,gBAAgB,QAAQ,QAAQ,CAAC,OAAO,IAAI;;AAGvD,IAAM,aAAa;CAClB,OAAQ,OAAO;AACR,SAAO,QAAQ,MAAM,GAAI,QAAQ,KAAK;;CAE7C,QAAS,WAAW,SAAO,OAAO;AAC3B,MAAI,cAAc,EACd,QAAO;EAEX,MAAM,SAAS,KAAK,MAAM,QAAQ;EAClC,IAAI;EACJ,IAAI,QAAQ;AACZ,MAAI,MAAM,SAAS,GAAG;GAClB,MAAM,UAAU,KAAK,IAAI,KAAK,IAAI,MAAM,GAAG,MAAM,EAAE,KAAK,IAAI,MAAM,MAAM,SAAS,GAAG,MAAM,CAAC;AAC3F,OAAI,UAAU,QAAQ,UAAU,gBAC5B,YAAW;AAEf,WAAQ,eAAe,WAAW,MAAM;;EAE5C,MAAM,WAAW,MAAM,KAAK,IAAI,MAAM,CAAC;EACvC,MAAM,aAAa,MAAM,SAAS,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,MAAM,SAAS,EAAE,GAAG,EAAE,EAAE;EAC7F,MAAM,UAAU;GACZ;GACA,uBAAuB;GACvB,uBAAuB;GAC1B;AACD,SAAO,OAAO,SAAS,KAAK,QAAQ,MAAM,OAAO;AACjD,SAAO,aAAa,WAAW,QAAQ,QAAQ;;CAEtD,YAAa,WAAW,SAAO,OAAO;AAC/B,MAAI,cAAc,EACd,QAAO;EAEX,MAAM,SAAS,MAAMF,SAAO,eAAe,YAAY,KAAK,IAAI,IAAI,KAAK,MAAM,MAAM,UAAU,CAAC,CAAC;AACjG,MAAI;GACA;GACA;GACA;GACA;GACA;GACA;GACH,CAAC,SAAS,OAAO,IAAIA,UAAQ,KAAM,MAAM,OACtC,QAAO,WAAW,QAAQ,KAAK,MAAM,WAAWA,SAAO,MAAM;AAEjE,SAAO;;CAEd;AACD,SAAS,eAAe,WAAW,OAAO;CACtC,IAAI,QAAQ,MAAM,SAAS,IAAI,MAAM,GAAG,QAAQ,MAAM,GAAG,QAAQ,MAAM,GAAG,QAAQ,MAAM,GAAG;AAC3F,KAAI,KAAK,IAAI,MAAM,IAAI,KAAK,cAAc,KAAK,MAAM,UAAU,CAC3D,SAAQ,YAAY,KAAK,MAAM,UAAU;AAE7C,QAAO;;AAEV,IAAI,QAAQ,EACT,YACH;AAED,SAAS,mBAAmB,YAAU;AAClC,YAAS,IAAI,SAAS;EAClB,SAAS;EACT,QAAQ;EACR,SAAS;EACT,aAAa;EACpB,QAAQ;EACD,MAAM;EACb,OAAO;EACA,MAAM;GACF,SAAS;GACT,WAAW;GACX,iBAAiB;GACjB,WAAW;GACX,YAAY;GACZ,YAAY,MAAM,YAAU,QAAQ;GACpC,YAAY,MAAM,YAAU,QAAQ;GACpC,QAAQ;GACX;EACD,QAAQ;GACJ,SAAS;GACT,MAAM,EAAE;GACR,YAAY;GACZ,OAAO;GACV;EACD,OAAO;GACH,SAAS;GACT,MAAM;GACN,SAAS;IACL,KAAK;IACL,QAAQ;IACX;GACJ;EACD,OAAO;GACH,aAAa;GACb,aAAa;GACb,QAAQ;GACR,iBAAiB;GACjB,iBAAiB;GACjB,SAAS;GACT,SAAS;GACT,UAAU;GACV,iBAAiB;GACjB,aAAa;GACb,UAAU,MAAM,WAAW;GAC3B,OAAO,EAAE;GACT,OAAO,EAAE;GACT,OAAO;GACP,YAAY;GACZ,mBAAmB;GACnB,eAAe;GACf,iBAAiB;GACpB;EACJ,CAAC;AACF,YAAS,MAAM,eAAe,SAAS,IAAI,QAAQ;AACnD,YAAS,MAAM,cAAc,SAAS,IAAI,cAAc;AACxD,YAAS,MAAM,gBAAgB,SAAS,IAAI,cAAc;AAC1D,YAAS,MAAM,eAAe,SAAS,IAAI,QAAQ;AACnD,YAAS,SAAS,SAAS;EACvB,WAAW;EACX,cAAc,SAAO,CAAC,KAAK,WAAW,SAAS,IAAI,CAAC,KAAK,WAAW,QAAQ,IAAI,SAAS,cAAc,SAAS;EAChH,aAAa,SAAO,SAAS,gBAAgB,SAAS,oBAAoB,SAAS;EACtF,CAAC;AACF,YAAS,SAAS,UAAU,EACxB,WAAW,SACd,CAAC;AACF,YAAS,SAAS,eAAe;EAC7B,cAAc,SAAO,SAAS,qBAAqB,SAAS;EAC5D,aAAa,SAAO,SAAS;EAChC,CAAC;;AAGN,IAAM,YAAY,OAAO,OAAO,KAAK;AACrC,IAAM,cAAc,OAAO,OAAO,KAAK;AACtC,SAAS,WAAW,MAAM,KAAK;AAC5B,KAAI,CAAC,IACD,QAAO;CAEX,MAAM,OAAO,IAAI,MAAM,IAAI;AAC3B,MAAI,IAAI,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,GAAG,EAAE,GAAE;EACvC,MAAM,IAAI,KAAK;AACf,SAAO,KAAK,OAAO,KAAK,KAAK,OAAO,OAAO,KAAK;;AAEpD,QAAO;;AAEX,SAAS,IAAI,MAAM,OAAO,QAAQ;AAC9B,KAAI,OAAO,UAAU,SACjB,QAAO,MAAM,WAAW,MAAM,MAAM,EAAE,OAAO;AAEjD,QAAO,MAAM,WAAW,MAAM,GAAG,EAAE,MAAM;;AAE5C,IAAM,WAAN,MAAe;CACZ,YAAY,gBAAc,WAAU;AAChC,OAAK,YAAY;AACjB,OAAK,kBAAkB;AACvB,OAAK,cAAc;AACnB,OAAK,QAAQ;AACb,OAAK,WAAW,EAAE;AAClB,OAAK,oBAAoB,YAAU,QAAQ,MAAM,SAAS,qBAAqB;AAC/E,OAAK,WAAW,EAAE;AAClB,OAAK,SAAS;GACV;GACA;GACA;GACA;GACA;GACH;AACD,OAAK,OAAO;GACR,QAAQ;GACR,MAAM;GACN,OAAO;GACP,YAAY;GACZ,QAAQ;GACX;AACD,OAAK,QAAQ,EAAE;AACf,OAAK,wBAAwB,KAAK,YAAU,cAAc,QAAQ,gBAAgB;AAClF,OAAK,oBAAoB,KAAK,YAAU,cAAc,QAAQ,YAAY;AAC1E,OAAK,cAAc,KAAK,YAAU,cAAc,QAAQ,MAAM;AAC9D,OAAK,YAAY;AACjB,OAAK,cAAc;GACf,MAAM;GACN,WAAW;GACX,kBAAkB;GACrB;AACD,OAAK,sBAAsB;AAC3B,OAAK,UAAU;AACf,OAAK,UAAU;AACf,OAAK,UAAU;AACf,OAAK,UAAU,EAAE;AACjB,OAAK,aAAa;AAClB,OAAK,QAAQ;AACb,OAAK,SAAS,EAAE;AAChB,OAAK,WAAW;AAChB,OAAK,0BAA0B;AAC/B,OAAK,SAASG,eAAa;AAC3B,OAAK,MAAM,UAAU;;CAE5B,IAAI,OAAO,QAAQ;AACZ,SAAO,IAAI,MAAM,OAAO,OAAO;;CAEtC,IAAI,OAAO;AACJ,SAAO,WAAW,MAAM,MAAM;;CAErC,SAAS,OAAO,QAAQ;AACjB,SAAO,IAAI,aAAa,OAAO,OAAO;;CAE1C,SAAS,OAAO,QAAQ;AACpB,SAAO,IAAI,WAAW,OAAO,OAAO;;CAE3C,MAAM,OAAO,MAAM,aAAa,YAAY;EACrC,MAAM,cAAc,WAAW,MAAM,MAAM;EAC3C,MAAM,oBAAoB,WAAW,MAAM,YAAY;EACvD,MAAM,cAAc,MAAM;AAC1B,SAAO,iBAAiB,aAAa;IAChC,cAAc;IACX,OAAO,YAAY;IACnB,UAAU;IACb;IACA,OAAO;IACJ,YAAY;IACZ,MAAO;KACH,MAAM,QAAQ,KAAK;KACnB,MAAM,SAAS,kBAAkB;AACjC,SAAI,SAAS,MAAM,CACf,QAAO,OAAO,OAAO,EAAE,EAAE,QAAQ,MAAM;AAE3C,YAAO,eAAe,OAAO,OAAO;;IAExC,IAAK,OAAO;AACR,UAAK,eAAe;;IAE3B;GACJ,CAAC;;CAEN,MAAM,UAAU;AACZ,WAAS,SAAS,UAAQ,MAAM,KAAK,CAAC;;;AAG9C,IAAI,2BAA2B,IAAI,SAAS;CACxC,cAAc,SAAO,CAAC,KAAK,WAAW,KAAK;CAC3C,aAAa,SAAO,SAAS;CAC7B,OAAO,EACH,WAAW,eACd;CACD,aAAa;EACT,aAAa;EACb,YAAY;EACf;CACJ,EAAE;CACC;CACA;CACA;CACH,CAAC;;;;;;GAOE,SAAS,aAAa,MAAM;AAC5B,KAAI,CAAC,QAAQ,cAAc,KAAK,KAAK,IAAI,cAAc,KAAK,OAAO,CAC/D,QAAO;AAEX,SAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,OAAO,KAAK,SAAS,KAAK,SAAS,MAAM,MAAM,KAAK,OAAO,QAAQ,KAAK;;;;GAIhH,SAAS,aAAa,KAAK,MAAM,IAAI,SAAS,QAAQ;CACtD,IAAI,YAAY,KAAK;AACrB,KAAI,CAAC,WAAW;AACZ,cAAY,KAAK,UAAU,IAAI,YAAY,OAAO,CAAC;AACnD,KAAG,KAAK,OAAO;;AAEnB,KAAI,YAAY,QACZ,WAAU;AAEd,QAAO;;;;GAKX,SAAS,aAAa,KAAK,MAAM,eAAe,OAAO;AACnD,SAAQ,SAAS,EAAE;CACnB,IAAI,OAAO,MAAM,OAAO,MAAM,QAAQ,EAAE;CACxC,IAAI,KAAK,MAAM,iBAAiB,MAAM,kBAAkB,EAAE;AAC1D,KAAI,MAAM,SAAS,MAAM;AACrB,SAAO,MAAM,OAAO,EAAE;AACtB,OAAK,MAAM,iBAAiB,EAAE;AAC9B,QAAM,OAAO;;AAEjB,KAAI,MAAM;AACV,KAAI,OAAO;CACX,IAAI,UAAU;CACd,MAAM,OAAO,cAAc;CAC3B,IAAI,GAAG,GAAG,MAAM,OAAO;AACvB,MAAI,IAAI,GAAG,IAAI,MAAM,KAAI;AACrB,UAAQ,cAAc;AAEtB,MAAI,UAAU,UAAa,UAAU,QAAQ,CAAC,QAAQ,MAAM,CACxD,WAAU,aAAa,KAAK,MAAM,IAAI,SAAS,MAAM;WAC9C,QAAQ,MAAM,CAGrB,MAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,KAAI;AAC1C,iBAAc,MAAM;AAEpB,OAAI,gBAAgB,UAAa,gBAAgB,QAAQ,CAAC,QAAQ,YAAY,CAC1E,WAAU,aAAa,KAAK,MAAM,IAAI,SAAS,YAAY;;;AAK3E,KAAI,SAAS;CACb,MAAM,QAAQ,GAAG,SAAS;AAC1B,KAAI,QAAQ,cAAc,QAAQ;AAC9B,OAAI,IAAI,GAAG,IAAI,OAAO,IAClB,QAAO,KAAK,GAAG;AAEnB,KAAG,OAAO,GAAG,MAAM;;AAEvB,QAAO;;;;;;;;;GASP,SAAS,YAAY,OAAO,OAAO,OAAO;CAC1C,MAAM,mBAAmB,MAAM;CAC/B,MAAM,YAAY,UAAU,IAAI,KAAK,IAAI,QAAQ,GAAG,GAAI,GAAG;AAC3D,QAAO,KAAK,OAAO,QAAQ,aAAa,iBAAiB,GAAG,mBAAmB;;;;GAI/E,SAAS,YAAY,QAAQ,KAAK;AAClC,KAAI,CAAC,OAAO,CAAC,OACT;AAEJ,OAAM,OAAO,OAAO,WAAW,KAAK;AACpC,KAAI,MAAM;AAGV,KAAI,gBAAgB;AACpB,KAAI,UAAU,GAAG,GAAG,OAAO,OAAO,OAAO,OAAO;AAChD,KAAI,SAAS;;AAEjB,SAAS,UAAU,KAAK,SAAS,GAAG,GAAG;AAEnC,iBAAgB,KAAK,SAAS,GAAG,GAAG,KAAK;;AAG7C,SAAS,gBAAgB,KAAK,SAAS,GAAG,GAAG,GAAG;CAC5C,IAAI,MAAM,SAAS,SAAS,MAAM,cAAc,OAAO,UAAU;CACjE,MAAM,QAAQ,QAAQ;CACtB,MAAM,WAAW,QAAQ;CACzB,MAAM,SAAS,QAAQ;CACvB,IAAI,OAAO,YAAY,KAAK;AAC5B,KAAI,SAAS,OAAO,UAAU,UAAU;AACpC,SAAO,MAAM,UAAU;AACvB,MAAI,SAAS,+BAA+B,SAAS,8BAA8B;AAC/E,OAAI,MAAM;AACV,OAAI,UAAU,GAAG,EAAE;AACnB,OAAI,OAAO,IAAI;AACf,OAAI,UAAU,OAAO,CAAC,MAAM,QAAQ,GAAG,CAAC,MAAM,SAAS,GAAG,MAAM,OAAO,MAAM,OAAO;AACpF,OAAI,SAAS;AACb;;;AAGR,KAAI,MAAM,OAAO,IAAI,UAAU,EAC3B;AAEJ,KAAI,WAAW;AACf,SAAO,OAAP;EAEI;AACI,OAAI,EACA,KAAI,QAAQ,GAAG,GAAG,IAAI,GAAG,QAAQ,GAAG,GAAG,IAAI;OAE3C,KAAI,IAAI,GAAG,GAAG,QAAQ,GAAG,IAAI;AAEjC,OAAI,WAAW;AACf;EACJ,KAAK;AACD,WAAQ,IAAI,IAAI,IAAI;AACpB,OAAI,OAAO,IAAI,KAAK,IAAI,IAAI,GAAG,OAAO,IAAI,KAAK,IAAI,IAAI,GAAG,OAAO;AACjE,UAAO;AACP,OAAI,OAAO,IAAI,KAAK,IAAI,IAAI,GAAG,OAAO,IAAI,KAAK,IAAI,IAAI,GAAG,OAAO;AACjE,UAAO;AACP,OAAI,OAAO,IAAI,KAAK,IAAI,IAAI,GAAG,OAAO,IAAI,KAAK,IAAI,IAAI,GAAG,OAAO;AACjE,OAAI,WAAW;AACf;EACJ,KAAK;AAQD,kBAAe,SAAS;AACxB,UAAO,SAAS;AAChB,aAAU,KAAK,IAAI,MAAM,WAAW,GAAG;AACvC,cAAW,KAAK,IAAI,MAAM,WAAW,IAAI,IAAI,IAAI,IAAI,eAAe;AACpE,aAAU,KAAK,IAAI,MAAM,WAAW,GAAG;AACvC,cAAW,KAAK,IAAI,MAAM,WAAW,IAAI,IAAI,IAAI,IAAI,eAAe;AACpE,OAAI,IAAI,IAAI,UAAU,IAAI,SAAS,cAAc,MAAM,IAAI,MAAM,QAAQ;AACzE,OAAI,IAAI,IAAI,UAAU,IAAI,SAAS,cAAc,MAAM,SAAS,IAAI;AACpE,OAAI,IAAI,IAAI,UAAU,IAAI,SAAS,cAAc,KAAK,MAAM,QAAQ;AACpE,OAAI,IAAI,IAAI,UAAU,IAAI,SAAS,cAAc,MAAM,SAAS,MAAM,GAAG;AACzE,OAAI,WAAW;AACf;EACJ,KAAK;AACD,OAAI,CAAC,UAAU;AACX,WAAO,KAAK,UAAU;AACtB,YAAQ,IAAI,IAAI,IAAI;AACpB,QAAI,KAAK,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,KAAK;AAClD;;AAEJ,UAAO;EACS,KAAK;AACrB,cAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,cAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,WAAW;AACf;EACJ,KAAK,WACD,QAAO;EACS,KAAK;AACrB,cAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,cAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC;EACJ,KAAK;AACD,cAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,cAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,UAAO;AACP,cAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,cAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC,OAAI,OAAO,IAAI,UAAU,IAAI,QAAQ;AACrC;EACJ,KAAK;AACD,aAAU,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,GAAG;AACtC,aAAU,KAAK,IAAI,IAAI,GAAG;AAC1B,OAAI,OAAO,IAAI,SAAS,IAAI,QAAQ;AACpC,OAAI,OAAO,IAAI,SAAS,IAAI,QAAQ;AACpC;EACJ,KAAK;AACD,OAAI,OAAO,GAAG,EAAE;AAChB,OAAI,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS,IAAI,KAAK,IAAI,IAAI,GAAG,OAAO;AAChF;EACJ,KAAK;AACD,OAAI,WAAW;AACf;;AAER,KAAI,MAAM;AACV,KAAI,QAAQ,cAAc,EACtB,KAAI,QAAQ;;;;;;;;GAShB,SAAS,eAAe,OAAO,MAAM,QAAQ;AAC7C,UAAS,UAAU;AACnB,QAAO,CAAC,QAAQ,SAAS,MAAM,IAAI,KAAK,OAAO,UAAU,MAAM,IAAI,KAAK,QAAQ,UAAU,MAAM,IAAI,KAAK,MAAM,UAAU,MAAM,IAAI,KAAK,SAAS;;AAErJ,SAAS,SAAS,KAAK,MAAM;AACzB,KAAI,MAAM;AACV,KAAI,WAAW;AACf,KAAI,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,QAAQ,KAAK,MAAM,KAAK,SAAS,KAAK,IAAI;AAC7E,KAAI,MAAM;;AAEd,SAAS,WAAW,KAAK;AACrB,KAAI,SAAS;;;;GAIb,SAAS,eAAe,KAAK,UAAU,QAAQ,MAAM,MAAM;AAC3D,KAAI,CAAC,SACD,QAAO,IAAI,OAAO,OAAO,GAAG,OAAO,EAAE;AAEzC,KAAI,SAAS,UAAU;EACnB,MAAM,YAAY,SAAS,IAAI,OAAO,KAAK;AAC3C,MAAI,OAAO,UAAU,SAAS,EAAE;AAChC,MAAI,OAAO,UAAU,OAAO,EAAE;YACvB,SAAS,YAAY,CAAC,CAAC,KAC9B,KAAI,OAAO,SAAS,GAAG,OAAO,EAAE;KAEhC,KAAI,OAAO,OAAO,GAAG,SAAS,EAAE;AAEpC,KAAI,OAAO,OAAO,GAAG,OAAO,EAAE;;;;GAI9B,SAAS,eAAe,KAAK,UAAU,QAAQ,MAAM;AACrD,KAAI,CAAC,SACD,QAAO,IAAI,OAAO,OAAO,GAAG,OAAO,EAAE;AAEzC,KAAI,cAAc,OAAO,SAAS,OAAO,SAAS,MAAM,OAAO,SAAS,OAAO,SAAS,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,MAAM,OAAO,GAAG,OAAO,EAAE;;AAEzL,SAAS,cAAc,KAAK,MAAM;AAC9B,KAAI,KAAK,YACL,KAAI,UAAU,KAAK,YAAY,IAAI,KAAK,YAAY,GAAG;AAE3D,KAAI,CAAC,cAAc,KAAK,SAAS,CAC7B,KAAI,OAAO,KAAK,SAAS;AAE7B,KAAI,KAAK,MACL,KAAI,YAAY,KAAK;AAEzB,KAAI,KAAK,UACL,KAAI,YAAY,KAAK;AAEzB,KAAI,KAAK,aACL,KAAI,eAAe,KAAK;;AAGhC,SAAS,aAAa,KAAK,GAAG,GAAG,MAAM,MAAM;AACzC,KAAI,KAAK,iBAAiB,KAAK,WAAW;;;;;;;KAOtC,MAAM,UAAU,IAAI,YAAY,KAAK;EACrC,MAAM,OAAO,IAAI,QAAQ;EACzB,MAAM,QAAQ,IAAI,QAAQ;EAC1B,MAAM,MAAM,IAAI,QAAQ;EACxB,MAAM,SAAS,IAAI,QAAQ;EAC3B,MAAM,cAAc,KAAK,iBAAiB,MAAM,UAAU,IAAI;AAC9D,MAAI,cAAc,IAAI;AACtB,MAAI,WAAW;AACf,MAAI,YAAY,KAAK,mBAAmB;AACxC,MAAI,OAAO,MAAM,YAAY;AAC7B,MAAI,OAAO,OAAO,YAAY;AAC9B,MAAI,QAAQ;;;AAGpB,SAAS,aAAa,KAAK,MAAM;CAC7B,MAAM,WAAW,IAAI;AACrB,KAAI,YAAY,KAAK;AACrB,KAAI,SAAS,KAAK,MAAM,KAAK,KAAK,KAAK,OAAO,KAAK,OAAO;AAC1D,KAAI,YAAY;;;;GAIhB,SAAS,WAAW,KAAK,MAAM,GAAG,GAAG,MAAM,OAAO,EAAE,EAAE;CACtD,MAAM,QAAQ,QAAQ,KAAK,GAAG,OAAO,CACjC,KACH;CACD,MAAM,SAAS,KAAK,cAAc,KAAK,KAAK,gBAAgB;CAC5D,IAAI,GAAG;AACP,KAAI,MAAM;AACV,KAAI,OAAO,KAAK;AAChB,eAAc,KAAK,KAAK;AACxB,MAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAE;AAC7B,SAAO,MAAM;AACb,MAAI,KAAK,SACL,cAAa,KAAK,KAAK,SAAS;AAEpC,MAAI,QAAQ;AACR,OAAI,KAAK,YACL,KAAI,cAAc,KAAK;AAE3B,OAAI,CAAC,cAAc,KAAK,YAAY,CAChC,KAAI,YAAY,KAAK;AAEzB,OAAI,WAAW,MAAM,GAAG,GAAG,KAAK,SAAS;;AAE7C,MAAI,SAAS,MAAM,GAAG,GAAG,KAAK,SAAS;AACvC,eAAa,KAAK,GAAG,GAAG,MAAM,KAAK;AACnC,OAAK,OAAO,KAAK,WAAW;;AAEhC,KAAI,SAAS;;;;;;GAMb,SAAS,mBAAmB,KAAK,MAAM;CACvC,MAAM,EAAE,GAAI,GAAI,GAAI,GAAI,WAAY;AAEpC,KAAI,IAAI,IAAI,OAAO,SAAS,IAAI,OAAO,SAAS,OAAO,SAAS,MAAM,IAAI,IAAI,KAAK;AAEnF,KAAI,OAAO,GAAG,IAAI,IAAI,OAAO,WAAW;AAExC,KAAI,IAAI,IAAI,OAAO,YAAY,IAAI,IAAI,OAAO,YAAY,OAAO,YAAY,IAAI,SAAS,KAAK;AAE/F,KAAI,OAAO,IAAI,IAAI,OAAO,aAAa,IAAI,EAAE;AAE7C,KAAI,IAAI,IAAI,IAAI,OAAO,aAAa,IAAI,IAAI,OAAO,aAAa,OAAO,aAAa,SAAS,GAAG,KAAK;AAErG,KAAI,OAAO,IAAI,GAAG,IAAI,OAAO,SAAS;AAEtC,KAAI,IAAI,IAAI,IAAI,OAAO,UAAU,IAAI,OAAO,UAAU,OAAO,UAAU,GAAG,CAAC,SAAS,KAAK;AAEzF,KAAI,OAAO,IAAI,OAAO,SAAS,EAAE;;AAGrC,IAAM,cAAc;AACpB,IAAM,aAAa;;;;;;;;;;;;GAWf,SAAS,aAAa,OAAO,MAAM;CACnC,MAAM,WAAW,KAAK,OAAO,MAAM,YAAY;AAC/C,KAAI,CAAC,WAAW,QAAQ,OAAO,SAC3B,QAAO,OAAO;AAElB,SAAQ,CAAC,QAAQ;AACjB,SAAO,QAAQ,IAAf;EACI,KAAK,KACD,QAAO;EACX,KAAK;AACD,YAAS;AACT;;AAER,QAAO,OAAO;;AAElB,IAAM,gBAAgB,MAAI,CAAC,KAAK;AAChC,SAAS,kBAAkB,OAAO,OAAO;CACrC,MAAM,MAAM,EAAE;CACd,MAAM,WAAW,SAAS,MAAM;CAChC,MAAM,OAAO,WAAW,OAAO,KAAK,MAAM,GAAG;CAC7C,MAAM,OAAO,SAAS,MAAM,GAAG,YAAY,SAAO,eAAe,MAAM,OAAO,MAAM,MAAM,OAAO,IAAI,SAAO,MAAM,cAAY;AAC9H,MAAK,MAAM,QAAQ,KACf,KAAI,QAAQ,aAAa,KAAK,KAAK,CAAC;AAExC,QAAO;;;;;;;;;GASP,SAAS,OAAO,OAAO;AACvB,QAAO,kBAAkB,OAAO;EAC5B,KAAK;EACL,OAAO;EACP,QAAQ;EACR,MAAM;EACT,CAAC;;;;;;;;GAQF,SAAS,cAAc,OAAO;AAC9B,QAAO,kBAAkB,OAAO;EAC5B;EACA;EACA;EACA;EACH,CAAC;;;;;;;;;GASF,SAAS,UAAU,OAAO;CAC1B,MAAM,MAAM,OAAO,MAAM;AACzB,KAAI,QAAQ,IAAI,OAAO,IAAI;AAC3B,KAAI,SAAS,IAAI,MAAM,IAAI;AAC3B,QAAO;;;;;;;;GAQP,SAAS,OAAO,SAAS,UAAU;AACnC,WAAU,WAAW,EAAE;AACvB,YAAW,YAAY,SAAS;CAChC,IAAI,OAAO,eAAe,QAAQ,MAAM,SAAS,KAAK;AACtD,KAAI,OAAO,SAAS,SAChB,QAAO,SAAS,MAAM,GAAG;CAE7B,IAAI,QAAQ,eAAe,QAAQ,OAAO,SAAS,MAAM;AACzD,KAAI,SAAS,EAAE,KAAK,OAAO,MAAM,WAAW,EAAE;AAC1C,UAAQ,KAAK,qCAAoC,QAAQ,KAAI;AAC7D,UAAQ;;CAEZ,MAAM,OAAO;EACT,QAAQ,eAAe,QAAQ,QAAQ,SAAS,OAAO;EACvD,YAAY,aAAa,eAAe,QAAQ,YAAY,SAAS,WAAW,EAAE,KAAK;EACvF;EACA;EACA,QAAQ,eAAe,QAAQ,QAAQ,SAAS,OAAO;EACvD,QAAQ;EACX;AACD,MAAK,SAAS,aAAa,KAAK;AAChC,QAAO;;;;;;;;;;;;GAYP,SAAS,QAAQ,QAAQ,SAAS,SAAO,MAAM;CAC/C,IAAI,YAAY;CAChB,IAAI,GAAG,MAAM;AACb,MAAI,IAAI,GAAG,OAAO,OAAO,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC3C,UAAQ,OAAO;AACf,MAAI,UAAU,OACV;AAEJ,MAAI,YAAY,UAAa,OAAO,UAAU,YAAY;AACtD,WAAQ,MAAM,QAAQ;AACtB,eAAY;;AAEhB,MAAIH,YAAU,UAAa,QAAQ,MAAM,EAAE;AACvC,WAAQ,MAAMA,UAAQ,MAAM;AAC5B,eAAY;;AAEhB,MAAI,UAAU,QAAW;AACrB,OAAI,QAAQ,CAAC,UACT,MAAK,YAAY;AAErB,UAAO;;;;;;;;;GASf,SAAS,UAAU,QAAQ,OAAO,aAAa;CAC/C,MAAM,EAAE,KAAM,QAAS;CACvB,MAAM,SAAS,YAAY,QAAQ,MAAM,OAAO,EAAE;CAClD,MAAM,YAAY,OAAO,QAAM,eAAe,UAAU,IAAI,IAAI,QAAQ;AACxE,QAAO;EACH,KAAK,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,CAAC;EACrC,KAAK,SAAS,KAAK,OAAO;EAC7B;;AAEL,SAAS,cAAc,eAAe,SAAS;AAC3C,QAAO,OAAO,OAAO,OAAO,OAAO,cAAc,EAAE,QAAQ;;;;;;;;;;;GAY3D,SAAS,gBAAgB,QAAQ,WAAW,CAC5C,GACH,EAAE,YAAY,UAAU,kBAAgB,OAAO,IAAI;CAChD,MAAM,kBAAkB,cAAc;AACtC,KAAI,OAAO,aAAa,YACpB,YAAW,SAAS,aAAa,OAAO;CAE5C,MAAM,QAAQ;GACT,OAAO,cAAc;EACtB,YAAY;EACZ,SAAS;EACT,aAAa;EACb,WAAW;EACX,YAAY;EACZ,WAAW,UAAQ,gBAAgB,CAC3B,OACA,GAAG,OACN,EAAE,UAAU,iBAAiB,SAAS;EAC9C;AACD,QAAO,IAAI,MAAM,OAAO;EAGpB,eAAgB,QAAQ,MAAM;AAC1B,UAAO,OAAO;AACd,UAAO,OAAO;AACd,UAAO,OAAO,GAAG;AACjB,UAAO;;EAIX,IAAK,QAAQ,MAAM;AACf,UAAO,QAAQ,QAAQ,YAAU,qBAAqB,MAAM,UAAU,QAAQ,OAAO,CAAC;;EAK1F,yBAA0B,QAAQ,MAAM;AACpC,UAAO,QAAQ,yBAAyB,OAAO,QAAQ,IAAI,KAAK;;EAIpE,iBAAkB;AACd,UAAO,QAAQ,eAAe,OAAO,GAAG;;EAI5C,IAAK,QAAQ,MAAM;AACf,UAAO,qBAAqB,OAAO,CAAC,SAAS,KAAK;;EAItD,QAAS,QAAQ;AACb,UAAO,qBAAqB,OAAO;;EAIvC,IAAK,QAAQ,MAAM,OAAO;GACtB,MAAM,UAAU,OAAO,aAAa,OAAO,WAAW,WAAW;AACjE,UAAO,QAAQ,QAAQ,QAAQ;AAC/B,UAAO,OAAO;AACd,UAAO;;EAEd,CAAC;;;;;;;;;GASF,SAAS,eAAe,OAAO,SAAS,UAAU,oBAAoB;CACtE,MAAM,QAAQ;EACV,YAAY;EACZ,QAAQ;EACR,UAAU;EACV,WAAW;EACX,wBAAQ,IAAI,KAAK;EACjB,cAAc,aAAa,OAAO,mBAAmB;EACrD,aAAa,QAAM,eAAe,OAAO,KAAK,UAAU,mBAAmB;EAC3E,WAAW,UAAQ,eAAe,MAAM,SAAS,MAAM,EAAE,SAAS,UAAU,mBAAmB;EAClG;AACD,QAAO,IAAI,MAAM,OAAO;EAGpB,eAAgB,QAAQ,MAAM;AAC1B,UAAO,OAAO;AACd,UAAO,MAAM;AACb,UAAO;;EAIX,IAAK,QAAQ,MAAM,UAAU;AACzB,UAAO,QAAQ,QAAQ,YAAU,oBAAoB,QAAQ,MAAM,SAAS,CAAC;;EAKjF,yBAA0B,QAAQ,MAAM;AACpC,UAAO,OAAO,aAAa,UAAU,QAAQ,IAAI,OAAO,KAAK,GAAG;IAC5D,YAAY;IACZ,cAAc;IACjB,GAAG,SAAY,QAAQ,yBAAyB,OAAO,KAAK;;EAIjE,iBAAkB;AACd,UAAO,QAAQ,eAAe,MAAM;;EAIxC,IAAK,QAAQ,MAAM;AACf,UAAO,QAAQ,IAAI,OAAO,KAAK;;EAInC,UAAW;AACP,UAAO,QAAQ,QAAQ,MAAM;;EAIjC,IAAK,QAAQ,MAAM,OAAO;AACtB,SAAM,QAAQ;AACd,UAAO,OAAO;AACd,UAAO;;EAEd,CAAC;;;;GAIF,SAAS,aAAa,OAAO,aAAW;CACxC,YAAY;CACZ,WAAW;CACd,EAAE;CACC,MAAM,EAAE,cAAaI,WAAS,YAAa,aAAYA,WAAS,WAAY,WAAUA,WAAS,YAAa;AAC5G,QAAO;EACH,SAAS;EACT,YAAY;EACZ,WAAW;EACX,cAAc,WAAW,YAAY,GAAG,oBAAkB;EAC1D,aAAa,WAAW,WAAW,GAAG,mBAAiB;EAC1D;;AAEL,IAAM,WAAW,QAAQ,SAAO,SAAS,SAAS,YAAY,KAAK,GAAG;AACtE,IAAM,oBAAoB,MAAM,UAAQ,SAAS,MAAM,IAAI,SAAS,eAAe,OAAO,eAAe,MAAM,KAAK,QAAQ,MAAM,gBAAgB;AAClJ,SAAS,QAAQ,QAAQ,MAAM,WAAS;AACpC,KAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,KAAK,IAAI,SAAS,cAC/D,QAAO,OAAO;CAElB,MAAM,QAAQC,WAAS;AAEvB,QAAO,QAAQ;AACf,QAAO;;AAEX,SAAS,oBAAoB,QAAQ,MAAM,UAAU;CACjD,MAAM,EAAE,QAAS,UAAW,WAAY,cAAcC,kBAAiB;CACvE,IAAI,QAAQ,OAAO;AAEnB,KAAI,WAAW,MAAM,IAAIA,cAAY,aAAa,KAAK,CACnD,SAAQ,mBAAmB,MAAM,OAAO,QAAQ,SAAS;AAE7D,KAAI,QAAQ,MAAM,IAAI,MAAM,OACxB,SAAQ,cAAc,MAAM,OAAO,QAAQA,cAAY,YAAY;AAEvE,KAAI,iBAAiB,MAAM,MAAM,CAE7B,SAAQ,eAAe,OAAO,UAAU,aAAa,UAAU,OAAOA,cAAY;AAEtF,QAAO;;AAEX,SAAS,mBAAmB,MAAM,UAAU,QAAQ,UAAU;CAC1D,MAAM,EAAE,QAAS,UAAW,WAAY,WAAY;AACpD,KAAI,OAAO,IAAI,KAAK,CAChB,OAAM,IAAI,MAAM,yBAAyB,MAAM,KAAK,OAAO,CAAC,KAAK,KAAK,GAAG,OAAO,KAAK;AAEzF,QAAO,IAAI,KAAK;CAChB,IAAI,QAAQ,SAAS,UAAU,aAAa,SAAS;AACrD,QAAO,OAAO,KAAK;AACnB,KAAI,iBAAiB,MAAM,MAAM,CAE7B,SAAQ,kBAAkB,OAAO,SAAS,QAAQ,MAAM,MAAM;AAElE,QAAO;;AAEX,SAAS,cAAc,MAAM,OAAO,QAAQ,aAAa;CACrD,MAAM,EAAE,QAAS,UAAW,WAAY,cAAcA,kBAAiB;AACvE,KAAI,OAAO,SAAS,UAAU,eAAe,YAAY,KAAK,CAC1D,QAAO,MAAM,SAAS,QAAQ,MAAM;UAC7B,SAAS,MAAM,GAAG,EAAE;EAE3B,MAAM,MAAM;EACZ,MAAM,SAAS,OAAO,QAAQ,QAAQ,MAAI,MAAM,IAAI;AACpD,UAAQ,EAAE;AACV,OAAK,MAAM,QAAQ,KAAI;GACnB,MAAM,WAAW,kBAAkB,QAAQ,QAAQ,MAAM,KAAK;AAC9D,SAAM,KAAK,eAAe,UAAU,UAAU,aAAa,UAAU,OAAOA,cAAY,CAAC;;;AAGjG,QAAO;;AAEX,SAAS,gBAAgB,UAAU,MAAM,OAAO;AAC5C,QAAO,WAAW,SAAS,GAAG,SAAS,MAAM,MAAM,GAAG;;AAE1D,IAAM,YAAY,KAAK,WAAS,QAAQ,OAAO,SAAS,OAAO,QAAQ,WAAW,iBAAiB,QAAQ,IAAI,GAAG;AAClH,SAAS,UAAU,OAAK,cAAc,KAAK,gBAAgB,OAAO;AAC9D,MAAK,MAAM,UAAU,cAAa;EAC9B,MAAM,QAAQ,SAAS,KAAK,OAAO;AACnC,MAAI,OAAO;AACP,SAAI,IAAI,MAAM;GACd,MAAM,WAAW,gBAAgB,MAAM,WAAW,KAAK,MAAM;AAC7D,OAAI,OAAO,aAAa,eAAe,aAAa,OAAO,aAAa,eAGpE,QAAO;aAEJ,UAAU,SAAS,OAAO,mBAAmB,eAAe,QAAQ,eAG3E,QAAO;;AAGf,QAAO;;AAEX,SAAS,kBAAkB,cAAc,UAAU,MAAM,OAAO;CAC5D,MAAM,aAAa,SAAS;CAC5B,MAAM,WAAW,gBAAgB,SAAS,WAAW,MAAM,MAAM;CACjE,MAAM,YAAY,CACd,GAAG,cACH,GAAG,WACN;CACD,MAAML,wBAAM,IAAI,KAAK;AACrB,OAAI,IAAI,MAAM;CACd,IAAI,MAAM,iBAAiBA,OAAK,WAAW,MAAM,YAAY,MAAM,MAAM;AACzE,KAAI,QAAQ,KACR,QAAO;AAEX,KAAI,OAAO,aAAa,eAAe,aAAa,MAAM;AACtD,QAAM,iBAAiBA,OAAK,WAAW,UAAU,KAAK,MAAM;AAC5D,MAAI,QAAQ,KACR,QAAO;;AAGf,QAAO,gBAAgB,MAAM,KAAKA,MAAI,EAAE,CACpC,GACH,EAAE,YAAY,gBAAc,aAAa,UAAU,MAAM,MAAM,CAAC;;AAErE,SAAS,iBAAiB,OAAK,WAAW,KAAK,UAAU,MAAM;AAC3D,QAAM,IACF,OAAM,UAAUA,OAAK,WAAW,KAAK,UAAU,KAAK;AAExD,QAAO;;AAEX,SAAS,aAAa,UAAU,MAAM,OAAO;CACzC,MAAM,SAAS,SAAS,YAAY;AACpC,KAAI,EAAE,QAAQ,QACV,QAAO,QAAQ,EAAE;CAErB,MAAM,SAAS,OAAO;AACtB,KAAI,QAAQ,OAAO,IAAI,SAAS,MAAM,CAElC,QAAO;AAEX,QAAO,UAAU,EAAE;;AAEvB,SAAS,qBAAqB,MAAM,UAAU,QAAQ,OAAO;CACzD,IAAI;AACJ,MAAK,MAAM,UAAU,UAAS;AAC1B,UAAQ,SAAS,QAAQ,QAAQ,KAAK,EAAE,OAAO;AAC/C,MAAI,OAAO,UAAU,YACjB,QAAO,iBAAiB,MAAM,MAAM,GAAG,kBAAkB,QAAQ,OAAO,MAAM,MAAM,GAAG;;;AAInG,SAAS,SAAS,KAAK,QAAQ;AAC3B,MAAK,MAAM,SAAS,QAAO;AACvB,MAAI,CAAC,MACD;EAEJ,MAAM,QAAQ,MAAM;AACpB,MAAI,OAAO,UAAU,YACjB,QAAO;;;AAInB,SAAS,qBAAqB,QAAQ;CAClC,IAAI,OAAO,OAAO;AAClB,KAAI,CAAC,KACD,QAAO,OAAO,QAAQ,yBAAyB,OAAO,QAAQ;AAElE,QAAO;;AAEX,SAAS,yBAAyB,QAAQ;CACtC,MAAMA,wBAAM,IAAI,KAAK;AACrB,MAAK,MAAM,SAAS,OAChB,MAAK,MAAM,OAAO,OAAO,KAAK,MAAM,CAAC,QAAQ,MAAI,CAAC,EAAE,WAAW,IAAI,CAAC,CAChE,OAAI,IAAI,IAAI;AAGpB,QAAO,MAAM,KAAKA,MAAI;;AAE1B,SAAS,4BAA4B,MAAM,MAAM,OAAO,OAAO;CAC3D,MAAM,EAAE,WAAY;CACpB,MAAM,EAAE,MAAK,QAAS,KAAK;CAC3B,MAAM,SAAS,IAAI,MAAM,MAAM;CAC/B,IAAI,GAAG,MAAMD,SAAO;AACpB,MAAI,IAAI,GAAG,OAAO,OAAO,IAAI,MAAM,EAAE,GAAE;AACnC,YAAQ,IAAI;AACZ,SAAO,KAAKA;AACZ,SAAO,KAAK,EACR,GAAG,OAAO,MAAM,iBAAiB,MAAM,IAAI,EAAEA,QAAM,EACtD;;AAEL,QAAO;;AAGX,IAAM,UAAU,OAAO,WAAW;AAClC,IAAM,YAAY,QAAQ,MAAI,IAAI,OAAO,UAAU,CAAC,OAAO,GAAG,QAAQ,OAAO;AAC7E,IAAM,gBAAgB,cAAY,cAAc,MAAM,MAAM;AAC5D,SAAS,YAAY,YAAY,aAAa,YAAY,GAAG;CAIzD,MAAM,WAAW,WAAW,OAAO,cAAc;CACjD,MAAM,UAAU;CAChB,MAAM,OAAO,WAAW,OAAO,cAAc;CAC7C,MAAM,MAAM,sBAAsB,SAAS,SAAS;CACpD,MAAM,MAAM,sBAAsB,MAAM,QAAQ;CAChD,IAAI,MAAM,OAAO,MAAM;CACvB,IAAI,MAAM,OAAO,MAAM;AAEvB,OAAM,MAAM,IAAI,GAAG,IAAI;AACvB,OAAM,MAAM,IAAI,GAAG,IAAI;CACvB,MAAM,KAAK,IAAI;CACf,MAAM,KAAK,IAAI;AACf,QAAO;EACH,UAAU;GACN,GAAG,QAAQ,IAAI,MAAM,KAAK,IAAI,SAAS;GACvC,GAAG,QAAQ,IAAI,MAAM,KAAK,IAAI,SAAS;GAC1C;EACD,MAAM;GACF,GAAG,QAAQ,IAAI,MAAM,KAAK,IAAI,SAAS;GACvC,GAAG,QAAQ,IAAI,MAAM,KAAK,IAAI,SAAS;GAC1C;EACJ;;;;GAID,SAAS,eAAe,QAAQ,QAAQ,IAAI;CAC5C,MAAM,YAAY,OAAO;CACzB,IAAI,QAAQ,OAAO,MAAM,kBAAkB;CAC3C,IAAI,aAAa,SAAS,QAAQ,EAAE;AACpC,MAAI,IAAI,IAAI,GAAG,IAAI,YAAY,GAAG,EAAE,GAAE;AAClC,iBAAe;AACf,eAAa,SAAS,QAAQ,IAAI,EAAE;AACpC,MAAI,CAAC,gBAAgB,CAAC,WAClB;AAEJ,MAAI,aAAa,OAAO,IAAI,GAAG,QAAQ,EAAE;AACrC,MAAG,KAAK,GAAG,IAAI,KAAK;AACpB;;AAEJ,WAAS,GAAG,KAAK,OAAO;AACxB,UAAQ,GAAG,IAAI,KAAK,OAAO;AAC3B,qBAAmB,KAAK,IAAI,QAAQ,EAAE,GAAG,KAAK,IAAI,OAAO,EAAE;AAC3D,MAAI,oBAAoB,EACpB;AAEJ,SAAO,IAAI,KAAK,KAAK,iBAAiB;AACtC,KAAG,KAAK,SAAS,OAAO,OAAO;AAC/B,KAAG,IAAI,KAAK,QAAQ,OAAO,OAAO;;;AAG1C,SAAS,gBAAgB,QAAQ,IAAI,YAAY,KAAK;CAClD,MAAM,YAAY,aAAa,UAAU;CACzC,MAAM,YAAY,OAAO;CACzB,IAAI,OAAO,aAAa;CACxB,IAAI,aAAa,SAAS,QAAQ,EAAE;AACpC,MAAI,IAAI,IAAI,GAAG,IAAI,WAAW,EAAE,GAAE;AAC9B,gBAAc;AACd,iBAAe;AACf,eAAa,SAAS,QAAQ,IAAI,EAAE;AACpC,MAAI,CAAC,aACD;EAEJ,MAAM,SAAS,aAAa;EAC5B,MAAM,SAAS,aAAa;AAC5B,MAAI,aAAa;AACb,YAAS,SAAS,YAAY,cAAc;AAC5C,gBAAa,MAAM,eAAe,SAAS;AAC3C,gBAAa,MAAM,eAAe,SAAS,QAAQ,GAAG;;AAE1D,MAAI,YAAY;AACZ,YAAS,WAAW,aAAa,UAAU;AAC3C,gBAAa,MAAM,eAAe,SAAS;AAC3C,gBAAa,MAAM,eAAe,SAAS,QAAQ,GAAG;;;;;;;;;GAS9D,SAAS,oBAAoB,QAAQ,YAAY,KAAK;CACtD,MAAM,YAAY,aAAa,UAAU;CACzC,MAAM,YAAY,OAAO;CACzB,MAAM,SAAS,MAAM,UAAU,CAAC,KAAK,EAAE;CACvC,MAAM,KAAK,MAAM,UAAU;CAE3B,IAAI,GAAG,aAAa;CACpB,IAAI,aAAa,SAAS,QAAQ,EAAE;AACpC,MAAI,IAAI,GAAG,IAAI,WAAW,EAAE,GAAE;AAC1B,gBAAc;AACd,iBAAe;AACf,eAAa,SAAS,QAAQ,IAAI,EAAE;AACpC,MAAI,CAAC,aACD;AAEJ,MAAI,YAAY;GACZ,MAAM,aAAa,WAAW,aAAa,aAAa;AAExD,UAAO,KAAK,eAAe,KAAK,WAAW,aAAa,aAAa,cAAc,aAAa;;AAEpG,KAAG,KAAK,CAAC,cAAc,OAAO,KAAK,CAAC,aAAa,OAAO,IAAI,KAAK,KAAK,OAAO,IAAI,GAAG,KAAK,KAAK,OAAO,GAAG,GAAG,KAAK,OAAO,IAAI,KAAK,OAAO,MAAM;;AAEjJ,gBAAe,QAAQ,QAAQ,GAAG;AAClC,iBAAgB,QAAQ,IAAI,UAAU;;AAE1C,SAAS,gBAAgB,IAAI,KAAK,KAAK;AACnC,QAAO,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,EAAE,IAAI;;AAE3C,SAAS,gBAAgB,QAAQ,MAAM;CACnC,IAAI,GAAG,MAAM,OAAO,QAAQ;CAC5B,IAAI,aAAa,eAAe,OAAO,IAAI,KAAK;AAChD,MAAI,IAAI,GAAG,OAAO,OAAO,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC3C,eAAa;AACb,WAAS;AACT,eAAa,IAAI,OAAO,KAAK,eAAe,OAAO,IAAI,IAAI,KAAK;AAChE,MAAI,CAAC,OACD;AAEJ,UAAQ,OAAO;AACf,MAAI,YAAY;AACZ,SAAM,OAAO,gBAAgB,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM;AAC/D,SAAM,OAAO,gBAAgB,MAAM,MAAM,KAAK,KAAK,KAAK,OAAO;;AAEnE,MAAI,YAAY;AACZ,SAAM,OAAO,gBAAgB,MAAM,MAAM,KAAK,MAAM,KAAK,MAAM;AAC/D,SAAM,OAAO,gBAAgB,MAAM,MAAM,KAAK,KAAK,KAAK,OAAO;;;;;;GAMvE,SAAS,2BAA2B,QAAQ,SAAS,MAAM,MAAM,WAAW;CAC5E,IAAI,GAAG,MAAM,OAAO;AAEpB,KAAI,QAAQ,SACR,UAAS,OAAO,QAAQ,OAAK,CAAC,GAAG,KAAK;AAE1C,KAAI,QAAQ,2BAA2B,WACnC,qBAAoB,QAAQ,UAAU;MACnC;EACH,IAAI,OAAO,OAAO,OAAO,OAAO,SAAS,KAAK,OAAO;AACrD,OAAI,IAAI,GAAG,OAAO,OAAO,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC3C,WAAQ,OAAO;AACf,mBAAgB,YAAY,MAAM,OAAO,OAAO,KAAK,IAAI,IAAI,GAAG,QAAQ,OAAO,IAAI,GAAG,GAAG,OAAO,QAAQ,QAAQ;AAChH,SAAM,OAAO,cAAc,SAAS;AACpC,SAAM,OAAO,cAAc,SAAS;AACpC,SAAM,OAAO,cAAc,KAAK;AAChC,SAAM,OAAO,cAAc,KAAK;AAChC,UAAO;;;AAGf,KAAI,QAAQ,gBACR,iBAAgB,QAAQ,KAAK;;;;GAMjC,SAAS,kBAAkB;AAC3B,QAAO,OAAO,WAAW,eAAe,OAAO,aAAa;;;;GAI5D,SAAS,eAAe,SAAS;CACjC,IAAI,SAAS,QAAQ;AACrB,KAAI,UAAU,OAAO,UAAU,KAAK,sBAChC,UAAS,OAAO;AAEpB,QAAO;;;;;GAKP,SAAS,cAAc,YAAY,MAAM,gBAAgB;CACzD,IAAI;AACJ,KAAI,OAAO,eAAe,UAAU;AAChC,kBAAgB,SAAS,YAAY,GAAG;AACxC,MAAI,WAAW,QAAQ,IAAI,KAAK,GAE5B,iBAAgB,gBAAgB,MAAM,KAAK,WAAW;OAG1D,iBAAgB;AAEpB,QAAO;;AAEX,IAAM,oBAAoB,YAAU,QAAQ,cAAc,YAAY,iBAAiB,SAAS,KAAK;AACrG,SAAS,SAAS,IAAI,UAAU;AAC5B,QAAO,iBAAiB,GAAG,CAAC,iBAAiB,SAAS;;AAE1D,IAAM,YAAY;CACd;CACA;CACA;CACA;CACH;AACD,SAAS,mBAAmB,QAAQ,OAAO,QAAQ;CAC/C,MAAM,SAAS,EAAE;AACjB,UAAS,SAAS,MAAM,SAAS;AACjC,MAAI,IAAI,IAAI,GAAG,IAAI,GAAG,KAAI;EACtB,MAAM,MAAM,UAAU;AACtB,SAAO,OAAO,WAAW,OAAO,QAAQ,MAAM,MAAM,QAAQ,IAAI;;AAEpE,QAAO,QAAQ,OAAO,OAAO,OAAO;AACpC,QAAO,SAAS,OAAO,MAAM,OAAO;AACpC,QAAO;;AAEX,IAAM,gBAAgB,GAAG,GAAG,YAAU,IAAI,KAAK,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO;;;;;GAKzE,SAAS,kBAAkB,GAAG,QAAQ;CACtC,MAAM,UAAU,EAAE;CAClB,MAAM,SAAS,WAAW,QAAQ,SAAS,QAAQ,KAAK;CACxD,MAAM,EAAE,SAAU,YAAa;CAC/B,IAAI,MAAM;CACV,IAAI,GAAG;AACP,KAAI,aAAa,SAAS,SAAS,EAAE,OAAO,EAAE;AAC1C,MAAI;AACJ,MAAI;QACD;EACH,MAAM,OAAO,OAAO,uBAAuB;AAC3C,MAAI,OAAO,UAAU,KAAK;AAC1B,MAAI,OAAO,UAAU,KAAK;AAC1B,QAAM;;AAEV,QAAO;EACH;EACA;EACA;EACH;;;;;;;GAOD,SAAS,oBAAoB,OAAO,OAAO;AAC3C,KAAI,YAAY,MACZ,QAAO;CAEX,MAAM,EAAE,QAAS,4BAA6B;CAC9C,MAAM,QAAQ,iBAAiB,OAAO;CACtC,MAAM,YAAY,MAAM,cAAc;CACtC,MAAM,WAAW,mBAAmB,OAAO,UAAU;CACrD,MAAM,UAAU,mBAAmB,OAAO,UAAU,QAAQ;CAC5D,MAAM,EAAE,GAAI,GAAI,QAAS,kBAAkB,OAAO,OAAO;CACzD,MAAM,UAAU,SAAS,QAAQ,OAAO,QAAQ;CAChD,MAAM,UAAU,SAAS,OAAO,OAAO,QAAQ;CAC/C,IAAI,EAAE,OAAQ,WAAY;AAC1B,KAAI,WAAW;AACX,WAAS,SAAS,QAAQ,QAAQ;AAClC,YAAU,SAAS,SAAS,QAAQ;;AAExC,QAAO;EACH,GAAG,KAAK,OAAO,IAAI,WAAW,QAAQ,OAAO,QAAQ,wBAAwB;EAC7E,GAAG,KAAK,OAAO,IAAI,WAAW,SAAS,OAAO,SAAS,wBAAwB;EAClF;;AAEL,SAAS,iBAAiB,QAAQ,OAAO,QAAQ;CAC7C,IAAI,UAAU;AACd,KAAI,UAAU,UAAa,WAAW,QAAW;EAC7C,MAAM,YAAY,UAAU,eAAe,OAAO;AAClD,MAAI,CAAC,WAAW;AACZ,WAAQ,OAAO;AACf,YAAS,OAAO;SACb;GACH,MAAM,OAAO,UAAU,uBAAuB;GAC9C,MAAM,iBAAiB,iBAAiB,UAAU;GAClD,MAAM,kBAAkB,mBAAmB,gBAAgB,UAAU,QAAQ;GAC7E,MAAM,mBAAmB,mBAAmB,gBAAgB,UAAU;AACtE,WAAQ,KAAK,QAAQ,iBAAiB,QAAQ,gBAAgB;AAC9D,YAAS,KAAK,SAAS,iBAAiB,SAAS,gBAAgB;AACjE,cAAW,cAAc,eAAe,UAAU,WAAW,cAAc;AAC3E,eAAY,cAAc,eAAe,WAAW,WAAW,eAAe;;;AAGtF,QAAO;EACH;EACA;EACA,UAAU,YAAY;EACtB,WAAW,aAAa;EAC3B;;AAEL,IAAM,UAAU,MAAI,KAAK,MAAM,IAAI,GAAG,GAAG;AAEzC,SAAS,eAAe,QAAQ,SAAS,UAAU,aAAa;CAC5D,MAAM,QAAQ,iBAAiB,OAAO;CACtC,MAAM,UAAU,mBAAmB,OAAO,SAAS;CACnD,MAAM,WAAW,cAAc,MAAM,UAAU,QAAQ,cAAc,IAAI;CACzE,MAAM,YAAY,cAAc,MAAM,WAAW,QAAQ,eAAe,IAAI;CAC5E,MAAM,gBAAgB,iBAAiB,QAAQ,SAAS,SAAS;CACjE,IAAI,EAAE,OAAQ,WAAY;AAC1B,KAAI,MAAM,cAAc,eAAe;EACnC,MAAM,UAAU,mBAAmB,OAAO,UAAU,QAAQ;EAC5D,MAAM,WAAW,mBAAmB,OAAO,UAAU;AACrD,WAAS,SAAS,QAAQ,QAAQ;AAClC,YAAU,SAAS,SAAS,QAAQ;;AAExC,SAAQ,KAAK,IAAI,GAAG,QAAQ,QAAQ,MAAM;AAC1C,UAAS,KAAK,IAAI,GAAG,cAAc,QAAQ,cAAc,SAAS,QAAQ,OAAO;AACjF,SAAQ,OAAO,KAAK,IAAI,OAAO,UAAU,cAAc,SAAS,CAAC;AACjE,UAAS,OAAO,KAAK,IAAI,QAAQ,WAAW,cAAc,UAAU,CAAC;AACrE,KAAI,SAAS,CAAC,OAGV,UAAS,OAAO,QAAQ,EAAE;AAG9B,MADuB,YAAY,UAAa,aAAa,WACvC,eAAe,cAAc,UAAU,SAAS,cAAc,QAAQ;AACxF,WAAS,cAAc;AACvB,UAAQ,OAAO,KAAK,MAAM,SAAS,YAAY,CAAC;;AAEpD,QAAO;EACH;EACA;EACH;;;;;;;GAOD,SAAS,YAAY,OAAO,YAAY,YAAY;CACpD,MAAM,aAAa,cAAc;CACjC,MAAM,eAAe,KAAK,MAAM,MAAM,SAAS,WAAW;CAC1D,MAAM,cAAc,KAAK,MAAM,MAAM,QAAQ,WAAW;AACxD,OAAM,SAAS,KAAK,MAAM,MAAM,OAAO;AACvC,OAAM,QAAQ,KAAK,MAAM,MAAM,MAAM;CACrC,MAAM,SAAS,MAAM;AAIrB,KAAI,OAAO,UAAU,cAAc,CAAC,OAAO,MAAM,UAAU,CAAC,OAAO,MAAM,QAAQ;AAC7E,SAAO,MAAM,SAAS,GAAG,MAAM,OAAO;AACtC,SAAO,MAAM,QAAQ,GAAG,MAAM,MAAM;;AAExC,KAAI,MAAM,4BAA4B,cAAc,OAAO,WAAW,gBAAgB,OAAO,UAAU,aAAa;AAChH,QAAM,0BAA0B;AAChC,SAAO,SAAS;AAChB,SAAO,QAAQ;AACf,QAAM,IAAI,aAAa,YAAY,GAAG,GAAG,YAAY,GAAG,EAAE;AAC1D,SAAO;;AAEX,QAAO;;;;;;GAMP,IAAM,+BAA+B,WAAW;CAChD,IAAI,mBAAmB;AACvB,KAAI;EACA,MAAM,UAAU,EACZ,IAAI,UAAW;AACX,sBAAmB;AACnB,UAAO;KAEd;AACD,MAAI,iBAAiB,EAAE;AACnB,UAAO,iBAAiB,QAAQ,MAAM,QAAQ;AAC9C,UAAO,oBAAoB,QAAQ,MAAM,QAAQ;;UAEhD,GAAG;AAGZ,QAAO;GACR;;;;;;;;;GASC,SAAS,aAAa,SAAS,UAAU;CACzC,MAAM,QAAQ,SAAS,SAAS,SAAS;CACzC,MAAM,UAAU,SAAS,MAAM,MAAM,oBAAoB;AACzD,QAAO,UAAU,CAAC,QAAQ,KAAK;;;;GAK/B,SAAS,aAAa,IAAI,IAAI,GAAG,MAAM;AACvC,QAAO;EACH,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,GAAG;EACzB,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,GAAG;EAC5B;;;;GAID,SAAS,sBAAsB,IAAI,IAAI,GAAG,MAAM;AAChD,QAAO;EACH,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,GAAG;EACzB,GAAG,SAAS,WAAW,IAAI,KAAM,GAAG,IAAI,GAAG,IAAI,SAAS,UAAU,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG;EAC7G;;;;GAID,SAAS,qBAAqB,IAAI,IAAI,GAAG,MAAM;CAC/C,MAAM,MAAM;EACR,GAAG,GAAG;EACN,GAAG,GAAG;EACT;CACD,MAAM,MAAM;EACR,GAAG,GAAG;EACN,GAAG,GAAG;EACT;CACD,MAAM,IAAI,aAAa,IAAI,KAAK,EAAE;CAClC,MAAM,IAAI,aAAa,KAAK,KAAK,EAAE;CACnC,MAAM,IAAI,aAAa,KAAK,IAAI,EAAE;CAClC,MAAM,IAAI,aAAa,GAAG,GAAG,EAAE;CAC/B,MAAM,IAAI,aAAa,GAAG,GAAG,EAAE;AAC/B,QAAO,aAAa,GAAG,GAAG,EAAE;;AAGhC,IAAM,wBAAwB,SAAS,OAAO,OAAO;AACjD,QAAO;EACH,EAAG,GAAG;AACF,UAAO,QAAQ,QAAQ,QAAQ;;EAEnC,SAAU,GAAG;AACT,WAAQ;;EAEZ,UAAW,OAAO;AACd,OAAI,UAAU,SACV,QAAO;AAEX,UAAO,UAAU,UAAU,SAAS;;EAExC,MAAO,GAAG,OAAO;AACb,UAAO,IAAI;;EAEf,WAAY,GAAG,WAAW;AACtB,UAAO,IAAI;;EAElB;;AAEL,IAAM,wBAAwB,WAAW;AACrC,QAAO;EACH,EAAG,GAAG;AACF,UAAO;;EAEX,SAAU,GAAG;EACb,UAAW,OAAO;AACd,UAAO;;EAEX,MAAO,GAAG,OAAO;AACb,UAAO,IAAI;;EAEf,WAAY,GAAG,YAAY;AACvB,UAAO;;EAEd;;AAEL,SAAS,cAAc,KAAK,OAAO,OAAO;AACtC,QAAO,MAAM,sBAAsB,OAAO,MAAM,GAAG,uBAAuB;;AAE9E,SAAS,sBAAsB,KAAK,WAAW;CAC3C,IAAI,OAAO;AACX,KAAI,cAAc,SAAS,cAAc,OAAO;AAC5C,UAAQ,IAAI,OAAO;AACnB,aAAW,CACP,MAAM,iBAAiB,YAAY,EACnC,MAAM,oBAAoB,YAAY,CACzC;AACD,QAAM,YAAY,aAAa,WAAW,YAAY;AACtD,MAAI,oBAAoB;;;AAGhC,SAAS,qBAAqB,KAAK,UAAU;AACzC,KAAI,aAAa,QAAW;AACxB,SAAO,IAAI;AACX,MAAI,OAAO,MAAM,YAAY,aAAa,SAAS,IAAI,SAAS,GAAG;;;AAI3E,SAAS,WAAW,UAAU;AAC1B,KAAI,aAAa,QACb,QAAO;EACH,SAAS;EACT,SAAS;EACT,WAAW;EACd;AAEL,QAAO;EACH,SAAS;EACT,UAAU,GAAG,MAAI,IAAI;EACrB,YAAY,MAAI;EACnB;;AAEL,SAAS,iBAAiB,EAAE,OAAQ,KAAM,OAAQ,MAAO,SAAU;AAC/D,QAAO;EACH,OAAO,QAAQ;EACf,KAAK,MAAM;EACX,MAAM,SAAS,MAAM,QAAQ,KAAK,UAAU;EAC5C;EACH;;AAEL,SAAS,WAAW,SAAS,QAAQ,QAAQ;CACzC,MAAM,EAAE,UAAW,OAAO,YAAa,KAAK,aAAc;CAC1D,MAAM,EAAE,SAAU,cAAe,WAAW,SAAS;CACrD,MAAM,QAAQ,OAAO;CACrB,IAAI,EAAE,OAAQ,KAAM,SAAU;CAC9B,IAAI,GAAG;AACP,KAAI,MAAM;AACN,WAAS;AACT,SAAO;AACP,OAAI,IAAI,GAAG,OAAO,OAAO,IAAI,MAAM,EAAE,GAAE;AACnC,OAAI,CAAC,QAAQ,UAAU,OAAO,QAAQ,OAAO,UAAU,EAAE,YAAY,SAAS,CAC1E;AAEJ;AACA;;AAEJ,WAAS;AACT,SAAO;;AAEX,KAAI,MAAM,MACN,QAAO;AAEX,QAAO;EACH;EACA;EACA;EACA,OAAO,QAAQ;EAClB;;AAEJ,SAAS,cAAc,SAAS,QAAQ,QAAQ;AAC7C,KAAI,CAAC,OACD,QAAO,CACH,QACH;CAEL,MAAM,EAAE,UAAW,OAAO,YAAa,KAAK,aAAc;CAC1D,MAAM,QAAQ,OAAO;CACrB,MAAM,EAAE,SAAU,SAAU,cAAe,WAAW,SAAS;CAC/D,MAAM,EAAE,OAAQ,KAAM,MAAO,UAAW,WAAW,SAAS,QAAQ,OAAO;CAC3E,MAAM,SAAS,EAAE;CACjB,IAAI,SAAS;CACb,IAAI,WAAW;CACf,IAAI,OAAO,OAAO;CAClB,MAAM,sBAAoB,QAAQ,YAAY,WAAW,MAAM,IAAI,QAAQ,YAAY,UAAU,KAAK;CACtG,MAAM,oBAAkB,QAAQ,UAAU,MAAM,KAAK,KAAK,QAAQ,UAAU,WAAW,MAAM;CAC7F,MAAM,oBAAkB,UAAU,eAAe;CACjD,MAAM,mBAAiB,CAAC,UAAU,aAAa;AAC/C,MAAI,IAAI,IAAI,OAAO,OAAO,OAAO,KAAK,KAAK,EAAE,GAAE;AAC3C,UAAQ,OAAO,IAAI;AACnB,MAAI,MAAM,KACN;AAEJ,UAAQ,UAAU,MAAM,UAAU;AAClC,MAAI,UAAU,UACV;AAEJ,WAAS,QAAQ,OAAO,YAAY,SAAS;AAC7C,MAAI,aAAa,QAAQ,aAAa,CAClC,YAAW,QAAQ,OAAO,WAAW,KAAK,IAAI,IAAI;AAEtD,MAAI,aAAa,QAAQ,YAAY,EAAE;AACnC,UAAO,KAAK,iBAAiB;IACzB,OAAO;IACP,KAAK;IACL;IACA;IACA;IACH,CAAC,CAAC;AACH,cAAW;;AAEf,SAAO;AACP,cAAY;;AAEhB,KAAI,aAAa,KACb,QAAO,KAAK,iBAAiB;EACzB,OAAO;EACP;EACA;EACA;EACA;EACH,CAAC,CAAC;AAEP,QAAO;;AAEV,SAAS,eAAe,MAAM,QAAQ;CACnC,MAAM,SAAS,EAAE;CACjB,MAAM,WAAW,KAAK;AACtB,MAAI,IAAI,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAI;EACpC,MAAM,MAAM,cAAc,SAAS,IAAI,KAAK,QAAQ,OAAO;AAC3D,MAAI,IAAI,OACJ,QAAO,KAAK,GAAG,IAAI;;AAG3B,QAAO;;AAEV,SAAS,gBAAgB,QAAQ,OAAO,MAAM,UAAU;CACrD,IAAI,QAAQ;CACZ,IAAI,MAAM,QAAQ;AAClB,KAAI,QAAQ,CAAC,SACT,QAAM,QAAQ,SAAS,CAAC,OAAO,OAAO,KAClC;AAGR,QAAM,QAAQ,SAAS,OAAO,OAAO,KACjC;AAEJ,UAAS;AACT,KAAI,KACA,QAAO;AAEX,QAAM,MAAM,SAAS,OAAO,MAAM,OAAO,KACrC;AAEJ,QAAO;AACP,QAAO;EACH;EACA;EACH;;AAEJ,SAAS,cAAc,QAAQ,OAAO,KAAK,MAAM;CAC9C,MAAM,QAAQ,OAAO;CACrB,MAAM,SAAS,EAAE;CACjB,IAAI,OAAO;CACX,IAAI,OAAO,OAAO;CAClB,IAAI;AACJ,MAAI,MAAM,QAAQ,GAAG,OAAO,KAAK,EAAE,KAAI;EACnC,MAAM,MAAM,OAAO,MAAM;AACzB,MAAI,IAAI,QAAQ,IAAI,MAChB;OAAI,CAAC,KAAK,MAAM;AACZ,WAAO;AACP,WAAO,KAAK;KACR,OAAO,QAAQ;KACf,MAAM,MAAM,KAAK;KACjB;KACH,CAAC;AACF,YAAQ,OAAO,IAAI,OAAO,MAAM;;SAEjC;AACH,UAAO;AACP,OAAI,KAAK,KACL,SAAQ;;AAGhB,SAAO;;AAEX,KAAI,SAAS,KACT,QAAO,KAAK;EACR,OAAO,QAAQ;EACf,KAAK,OAAO;EACZ;EACH,CAAC;AAEN,QAAO;;AAEV,SAAS,iBAAiB,MAAM,gBAAgB;CAC7C,MAAM,SAAS,KAAK;CACpB,MAAM,WAAW,KAAK,QAAQ;CAC9B,MAAM,QAAQ,OAAO;AACrB,KAAI,CAAC,MACD,QAAO,EAAE;CAEb,MAAM,OAAO,CAAC,CAAC,KAAK;CACpB,MAAM,EAAE,OAAQ,QAAS,gBAAgB,QAAQ,OAAO,MAAM,SAAS;AACvE,KAAI,aAAa,KACb,QAAO,cAAc,MAAM,CACvB;EACI;EACA;EACA;EACH,CACJ,EAAE,QAAQ,eAAe;CAE9B,MAAM,MAAM,MAAM,QAAQ,MAAM,QAAQ;CACxC,MAAM,eAAe,CAAC,CAAC,KAAK,aAAa,UAAU,KAAK,QAAQ,QAAQ;AACxE,QAAO,cAAc,MAAM,cAAc,QAAQ,OAAO,KAAK,aAAa,EAAE,QAAQ,eAAe;;AAEtG,SAAS,cAAc,MAAM,UAAU,QAAQ,gBAAgB;AAC5D,KAAI,CAAC,kBAAkB,CAAC,eAAe,cAAc,CAAC,OAClD,QAAO;AAEX,QAAO,gBAAgB,MAAM,UAAU,QAAQ,eAAe;;AAEjE,SAAS,gBAAgB,MAAM,UAAU,QAAQ,gBAAgB;CAC9D,MAAM,eAAe,KAAK,OAAO,YAAY;CAC7C,MAAM,YAAY,UAAU,KAAK,QAAQ;CACzC,MAAM,EAAE,eAAe,cAAe,SAAS,EAAE,eAAiB;CAClE,MAAM,QAAQ,OAAO;CACrB,MAAM,SAAS,EAAE;CACjB,IAAI,YAAY;CAChB,IAAI,QAAQ,SAAS,GAAG;CACxB,IAAI,IAAI;CACR,SAAS,SAAS,GAAG,GAAG,GAAG,IAAI;EAC3B,MAAM,MAAM,WAAW,KAAK;AAC5B,MAAI,MAAM,EACN;AAEJ,OAAK;AACL,SAAM,OAAO,IAAI,OAAO,KACpB,MAAK;AAET,SAAM,OAAO,IAAI,OAAO,KACpB,MAAK;AAET,MAAI,IAAI,UAAU,IAAI,OAAO;AACzB,UAAO,KAAK;IACR,OAAO,IAAI;IACX,KAAK,IAAI;IACT,MAAM;IACN,OAAO;IACV,CAAC;AACF,eAAY;AACZ,WAAQ,IAAI;;;AAGpB,MAAK,MAAM,WAAW,UAAS;AAC3B,UAAQ,WAAW,QAAQ,QAAQ;EACnC,IAAI,OAAO,OAAO,QAAQ;EAC1B,IAAI;AACJ,OAAI,IAAI,QAAQ,GAAG,KAAK,QAAQ,KAAK,KAAI;GACrC,MAAM,KAAK,OAAO,IAAI;AACtB,WAAQ,UAAU,eAAe,WAAW,cAAc,cAAc;IACpE,MAAM;IACN,IAAI;IACJ,IAAI;IACJ,cAAc,IAAI,KAAK;IACvB,aAAa,IAAI;IACjB;IACH,CAAC,CAAC,CAAC;AACJ,OAAI,aAAa,OAAO,UAAU,CAC9B,UAAS,OAAO,IAAI,GAAG,QAAQ,MAAM,UAAU;AAEnD,UAAO;AACP,eAAY;;AAEhB,MAAI,QAAQ,IAAI,EACZ,UAAS,OAAO,IAAI,GAAG,QAAQ,MAAM,UAAU;;AAGvD,QAAO;;AAEX,SAAS,UAAU,SAAS;AACxB,QAAO;EACH,iBAAiB,QAAQ;EACzB,gBAAgB,QAAQ;EACxB,YAAY,QAAQ;EACpB,kBAAkB,QAAQ;EAC1B,iBAAiB,QAAQ;EACzB,aAAa,QAAQ;EACrB,aAAa,QAAQ;EACxB;;AAEL,SAAS,aAAa,OAAO,WAAW;AACpC,KAAI,CAAC,UACD,QAAO;CAEX,MAAM,QAAQ,EAAE;CAChB,MAAM,WAAW,SAAS,KAAK,OAAO;AAClC,MAAI,CAAC,oBAAoB,MAAM,CAC3B,QAAO;AAEX,MAAI,CAAC,MAAM,SAAS,MAAM,CACtB,OAAM,KAAK,MAAM;AAErB,SAAO,MAAM,QAAQ,MAAM;;AAE/B,QAAO,KAAK,UAAU,OAAO,SAAS,KAAK,KAAK,UAAU,WAAW,SAAS;;AAGlF,SAAS,eAAe,OAAO,WAAW,OAAO;AAC7C,QAAO,MAAM,QAAQ,OAAO,MAAM,SAAS,UAAU;;AAEzD,SAAS,eAAe,MAAM,WAAW;CACrC,MAAM,EAAE,QAAS,WAAY;AAC7B,KAAI,UAAU,OACV,QAAO;EACH,MAAM,eAAe,QAAQ,WAAW,OAAO;EAC/C,OAAO,eAAe,QAAQ,WAAW,QAAQ;EACjD,KAAK,eAAe,QAAQ,WAAW,MAAM;EAC7C,QAAQ,eAAe,QAAQ,WAAW,SAAS;EACtD;AAEL,QAAO;;AAEX,SAAS,mBAAmB,OAAO,MAAM;CACrC,MAAM,OAAO,KAAK;AAClB,KAAI,KAAK,SACL,QAAO;CAEX,MAAM,OAAO,eAAe,MAAM,MAAM,UAAU;AAClD,QAAO;EACH,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,QAAQ,KAAK,SAAS,OAAO,IAAI,KAAK;EAC3E,OAAO,KAAK,UAAU,QAAQ,MAAM,QAAQ,KAAK,SAAS,KAAK,UAAU,OAAO,IAAI,KAAK;EACzF,KAAK,KAAK,QAAQ,QAAQ,IAAI,KAAK,OAAO,KAAK,QAAQ,OAAO,IAAI,KAAK;EACvE,QAAQ,KAAK,WAAW,QAAQ,MAAM,SAAS,KAAK,UAAU,KAAK,WAAW,OAAO,IAAI,KAAK;EACjG;;;;;ACttFL,IAAM,WAAN,MAAe;CACX,cAAa;AACT,OAAK,WAAW;AAChB,OAAK,0BAAU,IAAI,KAAK;AACxB,OAAK,WAAW;AAChB,OAAK,YAAY;;CAExB,QAAQ,OAAO,OAAO,MAAM,MAAM;EAC3B,MAAM,YAAY,MAAM,UAAU;EAClC,MAAM,WAAW,MAAM;AACvB,YAAU,SAAS,OAAK,GAAG;GACnB;GACA,SAAS,MAAM;GACf;GACA,aAAa,KAAK,IAAI,OAAO,MAAM,OAAO,SAAS;GACtD,CAAC,CAAC;;CAEd,WAAW;AACJ,MAAI,KAAK,SACL;AAEJ,OAAK,WAAW;AAChB,OAAK,WAAW,iBAAiB,KAAK,cAAY;AAC9C,QAAK,SAAS;AACd,QAAK,WAAW;AAChB,OAAI,KAAK,SACL,MAAK,UAAU;IAErB;;CAET,QAAQ,OAAO,KAAK,KAAK,EAAE;EACpB,IAAI,YAAY;AAChB,OAAK,QAAQ,SAAS,OAAO,UAAQ;AACjC,OAAI,CAAC,MAAM,WAAW,CAAC,MAAM,MAAM,OAC/B;GAEJ,MAAM,QAAQ,MAAM;GACpB,IAAI,IAAI,MAAM,SAAS;GACvB,IAAIO,SAAO;GACX,IAAI;AACJ,UAAM,KAAK,GAAG,EAAE,GAAE;AACd,WAAO,MAAM;AACb,QAAI,KAAK,SAAS;AACd,SAAI,KAAK,SAAS,MAAM,SACpB,OAAM,WAAW,KAAK;AAE1B,UAAK,KAAK,KAAK;AACf,cAAO;WACJ;AACH,WAAM,KAAK,MAAM,MAAM,SAAS;AAChC,WAAM,KAAK;;;AAGnB,OAAIA,QAAM;AACN,UAAM,MAAM;AACZ,SAAK,QAAQ,OAAO,OAAO,MAAM,WAAW;;AAEhD,OAAI,CAAC,MAAM,QAAQ;AACf,UAAM,UAAU;AAChB,SAAK,QAAQ,OAAO,OAAO,MAAM,WAAW;AAC5C,UAAM,UAAU;;AAEpB,gBAAa,MAAM;IACrB;AACF,OAAK,YAAY;AACjB,MAAI,cAAc,EACd,MAAK,WAAW;;CAG3B,UAAU,OAAO;EACV,MAAM,SAAS,KAAK;EACpB,IAAI,QAAQ,OAAO,IAAI,MAAM;AAC7B,MAAI,CAAC,OAAO;AACR,WAAQ;IACJ,SAAS;IACT,SAAS;IACT,OAAO,EAAE;IACT,WAAW;KACP,UAAU,EAAE;KACZ,UAAU,EAAE;KACf;IACJ;AACD,UAAO,IAAI,OAAO,MAAM;;AAE5B,SAAO;;CAEd,OAAO,OAAO,OAAO,IAAI;AAClB,OAAK,UAAU,MAAM,CAAC,UAAU,OAAO,KAAK,GAAG;;CAEtD,IAAI,OAAO,OAAO;AACX,MAAI,CAAC,SAAS,CAAC,MAAM,OACjB;AAEJ,OAAK,UAAU,MAAM,CAAC,MAAM,KAAK,GAAG,MAAM;;CAEjD,IAAI,OAAO;AACJ,SAAO,KAAK,UAAU,MAAM,CAAC,MAAM,SAAS;;CAEnD,MAAM,OAAO;EACN,MAAM,QAAQ,KAAK,QAAQ,IAAI,MAAM;AACrC,MAAI,CAAC,MACD;AAEJ,QAAM,UAAU;AAChB,QAAM,QAAQ,KAAK,KAAK;AACxB,QAAM,WAAW,MAAM,MAAM,QAAQ,KAAK,QAAM,KAAK,IAAI,KAAK,IAAI,UAAU,EAAE,EAAE;AAChF,OAAK,UAAU;;CAEnB,QAAQ,OAAO;AACX,MAAI,CAAC,KAAK,SACN,QAAO;EAEX,MAAM,QAAQ,KAAK,QAAQ,IAAI,MAAM;AACrC,MAAI,CAAC,SAAS,CAAC,MAAM,WAAW,CAAC,MAAM,MAAM,OACzC,QAAO;AAEX,SAAO;;CAEd,KAAK,OAAO;EACL,MAAM,QAAQ,KAAK,QAAQ,IAAI,MAAM;AACrC,MAAI,CAAC,SAAS,CAAC,MAAM,MAAM,OACvB;EAEJ,MAAM,QAAQ,MAAM;EACpB,IAAI,IAAI,MAAM,SAAS;AACvB,SAAM,KAAK,GAAG,EAAE,EACZ,OAAM,GAAG,QAAQ;AAErB,QAAM,QAAQ,EAAE;AAChB,OAAK,QAAQ,OAAO,OAAO,KAAK,KAAK,EAAE,WAAW;;CAEzD,OAAO,OAAO;AACP,SAAO,KAAK,QAAQ,OAAO,MAAM;;;AAGzC,IAAI,2BAA2B,IAAI,UAAU;AAE7C,IAAM,cAAc;AACpB,IAAM,gBAAgB;CAClB,QAAS,QAAM,MAAI,QAAQ;AACvB,SAAO,SAAS,KAAMC,OAAKC;;CAElC,MAAO,QAAM,MAAI,QAAQ;EAClB,MAAM,KAAK,MAAMA,UAAQ,YAAY;EACrC,MAAM,KAAK,GAAG,SAAS,MAAMD,QAAM,YAAY;AAC/C,SAAO,MAAM,GAAG,QAAQ,GAAG,IAAI,IAAI,OAAO,CAAC,WAAW,GAAGA;;CAE7D,OAAQ,QAAM,MAAI,QAAQ;AACtB,SAAOC,UAAQD,OAAKC,UAAQ;;CAEnC;AACD,IAAM,YAAN,MAAgB;CACZ,YAAY,KAAK,QAAQ,MAAM,MAAG;EAC9B,MAAM,eAAe,OAAO;AAC5B,SAAK,QAAQ;GACT,IAAI;GACJD;GACA;GACA,IAAI;GACP,CAAC;EACF,MAAMC,SAAO,QAAQ;GACjB,IAAI;GACJ;GACAD;GACH,CAAC;AACF,OAAK,UAAU;AACf,OAAK,MAAM,IAAI,MAAM,cAAc,IAAI,QAAQ,OAAOC;AACtD,OAAK,UAAU,QAAQ,IAAI,WAAW,QAAQ;AAC9C,OAAK,SAAS,KAAK,MAAM,KAAK,KAAK,IAAI,IAAI,SAAS,GAAG;AACvD,OAAK,YAAY,KAAK,SAAS,KAAK,MAAM,IAAI,SAAS;AACvD,OAAK,QAAQ,CAAC,CAAC,IAAI;AACnB,OAAK,UAAU;AACf,OAAK,QAAQ;AACb,OAAK,QAAQA;AACb,OAAK,MAAMD;AACX,OAAK,YAAY;;CAErB,SAAS;AACL,SAAO,KAAK;;CAEhB,OAAO,KAAK,MAAI,MAAM;AAClB,MAAI,KAAK,SAAS;AACd,QAAK,QAAQ,MAAM;GACnB,MAAM,eAAe,KAAK,QAAQ,KAAK;GACvC,MAAM,UAAU,OAAO,KAAK;GAC5B,MAAM,SAAS,KAAK,YAAY;AAChC,QAAK,SAAS;AACd,QAAK,YAAY,KAAK,MAAM,KAAK,IAAI,QAAQ,IAAI,SAAS,CAAC;AAC3D,QAAK,UAAU;AACf,QAAK,QAAQ,CAAC,CAAC,IAAI;AACnB,QAAK,MAAM,QAAQ;IACf,IAAI;IACJA;IACA;IACA,IAAI;IACP,CAAC;AACF,QAAK,QAAQ,QAAQ;IACjB,IAAI;IACJ;IACAA;IACH,CAAC;;;CAGV,SAAS;AACL,MAAI,KAAK,SAAS;AACd,QAAK,KAAK,KAAK,KAAK,CAAC;AACrB,QAAK,UAAU;AACf,QAAK,QAAQ,MAAM;;;CAG3B,KAAK,MAAM;EACP,MAAM,UAAU,OAAO,KAAK;EAC5B,MAAM,WAAW,KAAK;EACtB,MAAM,OAAO,KAAK;EAClB,MAAMC,SAAO,KAAK;EAClB,MAAM,OAAO,KAAK;EAClB,MAAMD,OAAK,KAAK;EAChB,IAAI;AACJ,OAAK,UAAUC,WAASD,SAAO,QAAQ,UAAU;AACjD,MAAI,CAAC,KAAK,SAAS;AACf,QAAK,QAAQ,QAAQA;AACrB,QAAK,QAAQ,KAAK;AAClB;;AAEJ,MAAI,UAAU,GAAG;AACb,QAAK,QAAQ,QAAQC;AACrB;;AAEJ,WAAS,UAAU,WAAW;AAC9B,WAAS,QAAQ,SAAS,IAAI,IAAI,SAAS;AAC3C,WAAS,KAAK,QAAQ,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,OAAO,CAAC,CAAC;AACvD,OAAK,QAAQ,QAAQ,KAAK,IAAIA,QAAMD,MAAI,OAAO;;CAEnD,OAAO;EACH,MAAM,WAAW,KAAK,cAAc,KAAK,YAAY,EAAE;AACvD,SAAO,IAAI,SAAS,KAAK,QAAM;AAC3B,YAAS,KAAK;IACV;IACA;IACH,CAAC;IACJ;;CAEN,QAAQ,UAAU;EACd,MAAM,SAAS,WAAW,QAAQ;EAClC,MAAM,WAAW,KAAK,aAAa,EAAE;AACrC,OAAI,IAAI,IAAI,GAAG,IAAI,SAAS,QAAQ,IAChC,UAAS,GAAG,SAAS;;;AAKjC,IAAM,aAAN,MAAiB;CACb,YAAY,OAAO,QAAO;AACtB,OAAK,SAAS;AACd,OAAK,8BAAc,IAAI,KAAK;AAC5B,OAAK,UAAU,OAAO;;CAE1B,UAAU,QAAQ;AACd,MAAI,CAAC,SAAS,OAAO,CACjB;EAEJ,MAAM,mBAAmB,OAAO,KAAK,SAAS,UAAU;EACxD,MAAM,gBAAgB,KAAK;AAC3B,SAAO,oBAAoB,OAAO,CAAC,SAAS,QAAM;GAC9C,MAAM,MAAM,OAAO;AACnB,OAAI,CAAC,SAAS,IAAI,CACd;GAEJ,MAAM,WAAW,EAAE;AACnB,QAAK,MAAM,UAAU,iBACjB,UAAS,UAAU,IAAI;AAE3B,IAAC,QAAQ,IAAI,WAAW,IAAI,IAAI,cAAc,CAC1C,IACH,EAAE,SAAS,SAAO;AACf,QAAI,SAAS,OAAO,CAAC,cAAc,IAAI,KAAK,CACxC,eAAc,IAAI,MAAM,SAAS;KAEvC;IACJ;;CAET,gBAAgB,QAAQ,QAAQ;EACzB,MAAM,aAAa,OAAO;EAC1B,MAAM,UAAU,qBAAqB,QAAQ,WAAW;AACxD,MAAI,CAAC,QACD,QAAO,EAAE;EAEb,MAAM,aAAa,KAAK,kBAAkB,SAAS,WAAW;AAC9D,MAAI,WAAW,QACX,UAAS,OAAO,QAAQ,aAAa,WAAW,CAAC,WAAS;AACtD,UAAO,UAAU;WACd,GACL;AAEN,SAAO;;CAEd,kBAAkB,QAAQ,QAAQ;EAC3B,MAAM,gBAAgB,KAAK;EAC3B,MAAM,aAAa,EAAE;EACrB,MAAM,UAAU,OAAO,gBAAgB,OAAO,cAAc,EAAE;EAC9D,MAAM,QAAQ,OAAO,KAAK,OAAO;EACjC,MAAM,OAAO,KAAK,KAAK;EACvB,IAAI;AACJ,OAAI,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,EAAE,GAAE;GAClC,MAAM,OAAO,MAAM;AACnB,OAAI,KAAK,OAAO,EAAE,KAAK,IACnB;AAEJ,OAAI,SAAS,WAAW;AACpB,eAAW,KAAK,GAAG,KAAK,gBAAgB,QAAQ,OAAO,CAAC;AACxD;;GAEJ,MAAM,QAAQ,OAAO;GACrB,IAAI,YAAY,QAAQ;GACxB,MAAM,MAAM,cAAc,IAAI,KAAK;AACnC,OAAI,UACA,KAAI,OAAO,UAAU,QAAQ,EAAE;AAC3B,cAAU,OAAO,KAAK,OAAO,KAAK;AAClC;SAEA,WAAU,QAAQ;AAG1B,OAAI,CAAC,OAAO,CAAC,IAAI,UAAU;AACvB,WAAO,QAAQ;AACf;;AAEJ,WAAQ,QAAQ,YAAY,IAAI,UAAU,KAAK,QAAQ,MAAM,MAAM;AACnE,cAAW,KAAK,UAAU;;AAE9B,SAAO;;CAEd,OAAO,QAAQ,QAAQ;AAChB,MAAI,KAAK,YAAY,SAAS,GAAG;AAC7B,UAAO,OAAO,QAAQ,OAAO;AAC7B;;EAEJ,MAAM,aAAa,KAAK,kBAAkB,QAAQ,OAAO;AACzD,MAAI,WAAW,QAAQ;AACnB,YAAS,IAAI,KAAK,QAAQ,WAAW;AACrC,UAAO;;;;AAInB,SAAS,SAAS,YAAY,YAAY;CACtC,MAAM,UAAU,EAAE;CAClB,MAAM,OAAO,OAAO,KAAK,WAAW;AACpC,MAAI,IAAI,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAI;EAChC,MAAM,OAAO,WAAW,KAAK;AAC7B,MAAI,QAAQ,KAAK,QAAQ,CACrB,SAAQ,KAAK,KAAK,MAAM,CAAC;;AAGjC,QAAO,QAAQ,IAAI,QAAQ;;AAE/B,SAAS,qBAAqB,QAAQ,YAAY;AAC9C,KAAI,CAAC,WACD;CAEJ,IAAI,UAAU,OAAO;AACrB,KAAI,CAAC,SAAS;AACV,SAAO,UAAU;AACjB;;AAEJ,KAAI,QAAQ,QACR,QAAO,UAAU,UAAU,OAAO,OAAO,EAAE,EAAE,SAAS;EAClD,SAAS;EACT,aAAa,EAAE;EAClB,CAAC;AAEN,QAAO;;AAGX,SAAS,UAAU,OAAO,iBAAiB;CACvC,MAAM,OAAO,SAAS,MAAM,WAAW,EAAE;CACzC,MAAM,UAAU,KAAK;CACrB,MAAM,MAAM,KAAK,QAAQ,SAAY,kBAAkB;CACvD,MAAM,MAAM,KAAK,QAAQ,SAAY,kBAAkB;AACvD,QAAO;EACH,OAAO,UAAU,MAAM;EACvB,KAAK,UAAU,MAAM;EACxB;;AAEL,SAAS,YAAY,QAAQ,QAAQ,iBAAiB;AAClD,KAAI,oBAAoB,MACpB,QAAO;CAEX,MAAM,IAAI,UAAU,QAAQ,gBAAgB;CAC5C,MAAM,IAAI,UAAU,QAAQ,gBAAgB;AAC5C,QAAO;EACH,KAAK,EAAE;EACP,OAAO,EAAE;EACT,QAAQ,EAAE;EACV,MAAM,EAAE;EACX;;AAEL,SAAS,OAAO,OAAO;CACnB,IAAI,GAAG,GAAG,GAAG;AACb,KAAI,SAAS,MAAM,EAAE;AACjB,MAAI,MAAM;AACV,MAAI,MAAM;AACV,MAAI,MAAM;AACV,MAAI,MAAM;OAEV,KAAI,IAAI,IAAI,IAAI;AAEpB,QAAO;EACH,KAAK;EACL,OAAO;EACP,QAAQ;EACR,MAAM;EACN,UAAU,UAAU;EACvB;;AAEL,SAAS,wBAAwB,OAAO,eAAe;CACnD,MAAM,OAAO,EAAE;CACf,MAAM,WAAW,MAAM,uBAAuB,cAAc;CAC5D,IAAI,GAAG;AACP,MAAI,IAAI,GAAG,OAAO,SAAS,QAAQ,IAAI,MAAM,EAAE,EAC3C,MAAK,KAAK,SAAS,GAAG,MAAM;AAEhC,QAAO;;AAEX,SAAS,WAAW,OAAO,OAAO,SAAS,UAAU,EAAE,EAAE;CACrD,MAAM,OAAO,MAAM;CACnB,MAAM,aAAa,QAAQ,SAAS;CACpC,IAAI,GAAG,MAAM,cAAc;AAC3B,KAAI,UAAU,KACV;CAEJ,IAAI,QAAQ;AACZ,MAAI,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,EAAE,GAAE;AACzC,iBAAe,CAAC,KAAK;AACrB,MAAI,iBAAiB,SAAS;AAC1B,WAAQ;AACR,OAAI,QAAQ,IACR;AAEJ;;AAEJ,eAAa,MAAM,OAAO;AAC1B,MAAI,eAAe,WAAW,KAAK,cAAc,UAAU,KAAK,KAAK,MAAM,KAAK,KAAK,WAAW,EAC5F,UAAS;;AAGjB,KAAI,CAAC,SAAS,CAAC,QAAQ,IACnB,QAAO;AAEX,QAAO;;AAEX,SAAS,yBAAyB,MAAM,MAAM;CAC1C,MAAM,EAAE,QAAS,WAAY;CAC7B,MAAM,WAAW,OAAO,SAAS,MAAM,MAAM;CAC7C,MAAM,WAAW,OAAO,SAAS,MAAM,MAAM;CAC7C,MAAM,OAAO,OAAO,KAAK,KAAK;CAC9B,MAAM,QAAQ,IAAI,MAAM,KAAK,OAAO;CACpC,IAAI,GAAG,MAAM;AACb,MAAI,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,EAAE,GAAE;AACzC,QAAM,KAAK;AACX,QAAM,KAAK;IACN,WAAW;IACX,WAAW,KAAK;GACpB;;AAEL,QAAO;;AAEX,SAAS,UAAU,OAAO,MAAM;CAC5B,MAAM,UAAU,SAAS,MAAM,QAAQ;AACvC,QAAO,WAAW,YAAY,UAAa,KAAK,UAAU;;AAE9D,SAAS,YAAY,YAAY,YAAY,MAAM;AAC/C,QAAO,GAAG,WAAW,GAAG,GAAG,WAAW,GAAG,GAAG,KAAK,SAAS,KAAK;;AAEnE,SAAS,cAAc,OAAO;CAC1B,MAAM,EAAE,KAAM,KAAM,YAAa,eAAgB,MAAM,eAAe;AACtE,QAAO;EACH,KAAK,aAAa,MAAM,OAAO;EAC/B,KAAK,aAAa,MAAM,OAAO;EAClC;;AAEL,SAAS,iBAAiB,QAAQ,UAAU,YAAY;CACpD,MAAM,WAAW,OAAO,cAAc,OAAO,YAAY,EAAE;AAC3D,QAAO,SAAS,gBAAgB,SAAS,cAAc,EAAE;;AAE7D,SAAS,oBAAoB,OAAO,QAAQ,UAAU,MAAM;AACxD,MAAK,MAAM,QAAQ,OAAO,wBAAwB,KAAK,CAAC,SAAS,EAAC;EAC9D,MAAM,QAAQ,MAAM,KAAK;AACzB,MAAI,YAAY,QAAQ,KAAK,CAAC,YAAY,QAAQ,EAC9C,QAAO,KAAK;;AAGpB,QAAO;;AAEX,SAAS,aAAa,YAAY,QAAQ;CACtC,MAAM,EAAE,OAAQ,aAAa,SAAU;CACvC,MAAM,SAAS,MAAM,YAAY,MAAM,UAAU,EAAE;CACnD,MAAM,EAAE,QAAS,QAAS,OAAO,iBAAkB;CACnD,MAAM,QAAQ,OAAO;CACrB,MAAM,QAAQ,OAAO;CACrB,MAAM,MAAM,YAAY,QAAQ,QAAQ,KAAK;CAC7C,MAAM,OAAO,OAAO;CACpB,IAAI;AACJ,MAAI,IAAI,IAAI,GAAG,IAAI,MAAM,EAAE,GAAE;EACzB,MAAM,OAAO,OAAO;EACpB,MAAM,GAAG,QAAQE,UAAS,QAAQ,UAAW;EAC7C,MAAM,aAAa,KAAK,YAAY,KAAK,UAAU,EAAE;AACrD,UAAQ,WAAW,SAAS,iBAAiB,QAAQ,KAAKA,QAAM;AAChE,QAAM,gBAAgB;AACtB,QAAM,OAAO,oBAAoB,OAAO,QAAQ,MAAM,KAAK,KAAK;AAChE,QAAM,UAAU,oBAAoB,OAAO,QAAQ,OAAO,KAAK,KAAK;EACpE,MAAM,eAAe,MAAM,kBAAkB,MAAM,gBAAgB,EAAE;AACrE,eAAa,gBAAgB;;;AAGrC,SAAS,gBAAgB,OAAO,MAAM;CAClC,MAAMC,WAAS,MAAM;AACrB,QAAO,OAAO,KAAKA,SAAO,CAAC,QAAQ,QAAMA,SAAO,KAAK,SAAS,KAAK,CAAC,OAAO;;AAE/E,SAAS,qBAAqB,QAAQ,SAAO;AACzC,QAAO,cAAc,QAAQ;EACzB,QAAQ;EACR,SAAS;EACT,cAAcD;EACd;EACA,MAAM;EACN,MAAM;EACT,CAAC;;AAEN,SAAS,kBAAkB,QAAQ,SAAO,SAAS;AAC/C,QAAO,cAAc,QAAQ;EACzB,QAAQ;EACR,WAAWA;EACX,QAAQ;EACR,KAAK;EACL;EACA;EACA,MAAM;EACN,MAAM;EACT,CAAC;;AAEN,SAAS,YAAY,MAAM,OAAO;CAC9B,MAAM,eAAe,KAAK,WAAW;CACrC,MAAM,OAAO,KAAK,UAAU,KAAK,OAAO;AACxC,KAAI,CAAC,KACD;AAEJ,SAAQ,SAAS,KAAK;AACtB,MAAK,MAAM,UAAU,OAAM;EACvB,MAAM,SAAS,OAAO;AACtB,MAAI,CAAC,UAAU,OAAO,UAAU,UAAa,OAAO,MAAM,kBAAkB,OACxE;AAEJ,SAAO,OAAO,MAAM;AACpB,MAAI,OAAO,MAAM,kBAAkB,UAAa,OAAO,MAAM,cAAc,kBAAkB,OACzF,QAAO,OAAO,MAAM,cAAc;;;AAI9C,IAAM,sBAAsB,SAAO,SAAS,WAAW,SAAS;AAChE,IAAM,oBAAoB,QAAQ,WAAS,SAAS,SAAS,OAAO,OAAO,EAAE,EAAE,OAAO;AACtF,IAAM,eAAe,UAAU,MAAM,UAAQ,YAAY,CAAC,KAAK,UAAU,KAAK,YAAY;CAClF,MAAM,wBAAwB,OAAO,KAAK;CAC1C,QAAQ;CACX;AACL,IAAM,oBAAN,MAAwB;CACvB,OAAO,WAAW,EAAE;CACpB,OAAO,qBAAqB;CAC5B,OAAO,kBAAkB;CACzB,YAAY,OAAO,cAAa;AACzB,OAAK,QAAQ;AACb,OAAK,OAAO,MAAM;AAClB,OAAK,QAAQ;AACb,OAAK,kBAAkB,EAAE;AACzB,OAAK,cAAc,KAAK,SAAS;AACjC,OAAK,QAAQ,KAAK,YAAY;AAC9B,OAAK,UAAU;AACd,OAAK,WAAW;AACjB,OAAK,QAAQ;AACb,OAAK,cAAc;AACnB,OAAK,iBAAiB;AACtB,OAAK,aAAa;AAClB,OAAK,aAAa;AAClB,OAAK,sBAAsB;AAC3B,OAAK,qBAAqB;AAC1B,OAAK,WAAW;AAChB,OAAK,YAAY,EAAE;AACnB,OAAK,qBAAqB,IAAI,OAAO;AACrC,OAAK,kBAAkB,IAAI,OAAO;AAClC,OAAK,YAAY;;CAErB,aAAa;EACT,MAAM,OAAO,KAAK;AAClB,OAAK,WAAW;AAChB,OAAK,YAAY;AACjB,OAAK,WAAW,UAAU,KAAK,QAAQ,KAAK;AAC5C,OAAK,aAAa;AAClB,MAAI,KAAK,QAAQ,QAAQ,CAAC,KAAK,MAAM,gBAAgB,SAAS,CAC1D,SAAQ,KAAK,qKAAqK;;CAG1L,YAAY,cAAc;AACtB,MAAI,KAAK,UAAU,aACf,aAAY,KAAK,YAAY;AAEjC,OAAK,QAAQ;;CAEjB,aAAa;EACT,MAAM,QAAQ,KAAK;EACnB,MAAM,OAAO,KAAK;EAClB,MAAM,UAAU,KAAK,YAAY;EACjC,MAAM,YAAY,MAAM,GAAG,GAAG,MAAI,SAAS,MAAM,IAAI,SAAS,MAAM,IAAI;EACxE,MAAM,MAAM,KAAK,UAAU,eAAe,QAAQ,SAAS,gBAAgB,OAAO,IAAI,CAAC;EACvF,MAAM,MAAM,KAAK,UAAU,eAAe,QAAQ,SAAS,gBAAgB,OAAO,IAAI,CAAC;EACvF,MAAM,MAAM,KAAK,UAAU,eAAe,QAAQ,SAAS,gBAAgB,OAAO,IAAI,CAAC;EACvF,MAAM,YAAY,KAAK;EACvB,MAAM,MAAM,KAAK,UAAU,SAAS,WAAW,KAAK,KAAK,IAAI;EAC7D,MAAM,MAAM,KAAK,UAAU,SAAS,WAAW,KAAK,KAAK,IAAI;AAC7D,OAAK,SAAS,KAAK,cAAc,IAAI;AACrC,OAAK,SAAS,KAAK,cAAc,IAAI;AACrC,OAAK,SAAS,KAAK,cAAc,IAAI;AACrC,OAAK,SAAS,KAAK,cAAc,IAAI;AACrC,OAAK,SAAS,KAAK,cAAc,IAAI;;CAEzC,aAAa;AACT,SAAO,KAAK,MAAM,KAAK,SAAS,KAAK;;CAEzC,UAAU;AACN,SAAO,KAAK,MAAM,eAAe,KAAK,MAAM;;CAEnD,cAAc,SAAS;AAChB,SAAO,KAAK,MAAM,OAAO;;CAEhC,eAAe,OAAO;EACf,MAAM,OAAO,KAAK;AAClB,SAAO,UAAU,KAAK,SAAS,KAAK,SAAS,KAAK;;CAEtD,QAAQ;AACJ,OAAK,QAAQ,QAAQ;;CAE5B,WAAW;EACJ,MAAM,OAAO,KAAK;AAClB,MAAI,KAAK,MACL,qBAAoB,KAAK,OAAO,KAAK;AAEzC,MAAI,KAAK,SACL,aAAY,KAAK;;CAG5B,aAAa;EACN,MAAM,UAAU,KAAK,YAAY;EACjC,MAAM,OAAO,QAAQ,SAAS,QAAQ,OAAO,EAAE;EAC/C,MAAM,QAAQ,KAAK;AACnB,MAAI,SAAS,KAAK,EAAE;GAChB,MAAM,OAAO,KAAK;AAClB,QAAK,QAAQ,yBAAyB,MAAM,KAAK;aAC1C,UAAU,MAAM;AACvB,OAAI,OAAO;AACP,wBAAoB,OAAO,KAAK;IAChC,MAAM,OAAO,KAAK;AAClB,gBAAY,KAAK;AACjB,SAAK,UAAU,EAAE;;AAErB,OAAI,QAAQ,OAAO,aAAa,KAAK,CACjC,mBAAkB,MAAM,KAAK;AAEjC,QAAK,YAAY,EAAE;AACnB,QAAK,QAAQ;;;CAGrB,cAAc;EACV,MAAM,OAAO,KAAK;AAClB,OAAK,YAAY;AACjB,MAAI,KAAK,mBACL,MAAK,UAAU,IAAI,KAAK,oBAAoB;;CAGpD,sBAAsB,kBAAkB;EACpC,MAAM,OAAO,KAAK;EAClB,MAAM,UAAU,KAAK,YAAY;EACjC,IAAI,eAAe;AACnB,OAAK,YAAY;EACjB,MAAM,aAAa,KAAK;AACxB,OAAK,WAAW,UAAU,KAAK,QAAQ,KAAK;AAC5C,MAAI,KAAK,UAAU,QAAQ,OAAO;AAC9B,kBAAe;AACf,eAAY,KAAK;AACjB,QAAK,QAAQ,QAAQ;;AAEzB,OAAK,gBAAgB,iBAAiB;AACtC,MAAI,gBAAgB,eAAe,KAAK,UAAU;AAC9C,gBAAa,MAAM,KAAK,QAAQ;AAChC,QAAK,WAAW,UAAU,KAAK,QAAQ,KAAK;;;CAGvD,YAAY;EACL,MAAM,SAAS,KAAK,MAAM;EAC1B,MAAM,YAAY,OAAO,iBAAiB,KAAK,MAAM;EACrD,MAAM,SAAS,OAAO,gBAAgB,KAAK,YAAY,EAAE,WAAW,KAAK;AACzE,OAAK,UAAU,OAAO,eAAe,QAAQ,KAAK,YAAY,CAAC;AAC/D,OAAK,WAAW,KAAK,QAAQ;AAC7B,OAAK,kBAAkB,EAAE;;CAEhC,MAAM,OAAO,OAAO;EACb,MAAM,EAAE,aAAa,MAAO,OAAO,SAAU;EAC7C,MAAM,EAAE,QAAS,aAAc;EAC/B,MAAM,QAAQ,OAAO;EACrB,IAAI,SAAS,UAAU,KAAK,UAAU,KAAK,SAAS,OAAO,KAAK;EAChE,IAAI,OAAO,QAAQ,KAAK,KAAK,QAAQ,QAAQ;EAC7C,IAAI,GAAG,KAAK;AACZ,MAAI,KAAK,aAAa,OAAO;AACzB,QAAK,UAAU;AACf,QAAK,UAAU;AACf,YAAS;SACN;AACH,OAAI,QAAQ,KAAK,OAAO,CACpB,UAAS,KAAK,eAAe,MAAM,MAAM,OAAO,MAAM;YAC/C,SAAS,KAAK,OAAO,CAC5B,UAAS,KAAK,gBAAgB,MAAM,MAAM,OAAO,MAAM;OAEvD,UAAS,KAAK,mBAAmB,MAAM,MAAM,OAAO,MAAM;GAE9D,MAAM,mCAAiC,IAAI,WAAW,QAAQ,QAAQ,IAAI,SAAS,KAAK;AACxF,QAAI,IAAI,GAAG,IAAI,OAAO,EAAE,GAAE;AACtB,SAAK,QAAQ,IAAI,SAAS,MAAM,OAAO;AACvC,QAAI,QAAQ;AACR,SAAI,4BAA4B,CAC5B,UAAS;AAEb,YAAO;;;AAGf,QAAK,UAAU;;AAEnB,MAAI,SACA,cAAa,MAAM,OAAO;;CAGrC,mBAAmB,MAAM,MAAM,OAAO,OAAO;EACtC,MAAM,EAAE,QAAS,WAAY;EAC7B,MAAM,QAAQ,OAAO;EACrB,MAAM,QAAQ,OAAO;EACrB,MAAM,SAAS,OAAO,WAAW;EACjC,MAAM,cAAc,WAAW;EAC/B,MAAM,SAAS,IAAI,MAAM,MAAM;EAC/B,IAAI,GAAG,MAAMA;AACb,OAAI,IAAI,GAAG,OAAO,OAAO,IAAI,MAAM,EAAE,GAAE;AACnC,aAAQ,IAAI;AACZ,UAAO,KAAK;KACP,QAAQ,eAAe,OAAO,MAAM,OAAOA,UAAQA,QAAM;KACzD,QAAQ,OAAO,MAAM,KAAKA,UAAQA,QAAM;IAC5C;;AAEL,SAAO;;CAEd,eAAe,MAAM,MAAM,OAAO,OAAO;EAClC,MAAM,EAAE,QAAS,WAAY;EAC7B,MAAM,SAAS,IAAI,MAAM,MAAM;EAC/B,IAAI,GAAG,MAAMA,SAAO;AACpB,OAAI,IAAI,GAAG,OAAO,OAAO,IAAI,MAAM,EAAE,GAAE;AACnC,aAAQ,IAAI;AACZ,UAAO,KAAKA;AACZ,UAAO,KAAK;IACR,GAAG,OAAO,MAAM,KAAK,IAAIA,QAAM;IAC/B,GAAG,OAAO,MAAM,KAAK,IAAIA,QAAM;IAClC;;AAEL,SAAO;;CAEd,gBAAgB,MAAM,MAAM,OAAO,OAAO;EACnC,MAAM,EAAE,QAAS,WAAY;EAC7B,MAAM,EAAE,WAAU,KAAM,WAAU,QAAS,KAAK;EAChD,MAAM,SAAS,IAAI,MAAM,MAAM;EAC/B,IAAI,GAAG,MAAMA,SAAO;AACpB,OAAI,IAAI,GAAG,OAAO,OAAO,IAAI,MAAM,EAAE,GAAE;AACnC,aAAQ,IAAI;AACZ,UAAO,KAAKA;AACZ,UAAO,KAAK;IACR,GAAG,OAAO,MAAM,iBAAiB,MAAM,SAAS,EAAEA,QAAM;IACxD,GAAG,OAAO,MAAM,iBAAiB,MAAM,SAAS,EAAEA,QAAM;IAC3D;;AAEL,SAAO;;CAEd,UAAU,SAAO;AACV,SAAO,KAAK,YAAY,QAAQA;;CAEvC,eAAe,SAAO;AACf,SAAO,KAAK,YAAY,KAAKA;;CAEpC,WAAW,OAAO,QAAQ,MAAM;EACzB,MAAM,QAAQ,KAAK;EACnB,MAAM,OAAO,KAAK;EAClB,MAAM,QAAQ,OAAO,MAAM;EAC3B,MAAM,QAAQ;GACV,MAAM,wBAAwB,OAAO,KAAK;GAC1C,QAAQ,OAAO,QAAQ,MAAM,MAAM;GACtC;AACD,SAAO,WAAW,OAAO,OAAO,KAAK,OAAO,EACxC,MACH,CAAC;;CAET,sBAAsB,OAAO,OAAO,QAAQ,OAAO;EAC5C,MAAM,cAAc,OAAO,MAAM;EACjC,IAAI,QAAQ,gBAAgB,OAAO,MAAM;EACzC,MAAM,SAAS,SAAS,OAAO,QAAQ,MAAM;AAC7C,MAAI,SAAS,QAAQ;AACjB,SAAM,SAAS;AACf,WAAQ,WAAW,OAAO,aAAa,KAAK,YAAY,MAAM;;AAElE,QAAM,MAAM,KAAK,IAAI,MAAM,KAAK,MAAM;AACtC,QAAM,MAAM,KAAK,IAAI,MAAM,KAAK,MAAM;;CAE7C,UAAU,OAAO,UAAU;EACpB,MAAM,OAAO,KAAK;EAClB,MAAM,UAAU,KAAK;EACrB,MAAM,SAAS,KAAK,WAAW,UAAU,KAAK;EAC9C,MAAM,OAAO,QAAQ;EACrB,MAAM,aAAa,KAAK,eAAe,MAAM;EAC7C,MAAM,QAAQ,YAAY,UAAU,MAAM,KAAK,MAAM;EACrD,MAAM,QAAQ;GACV,KAAK,OAAO;GACZ,KAAK,OAAO;GACf;EACD,MAAM,EAAE,KAAK,UAAW,KAAK,aAAc,cAAc,WAAW;EACpE,IAAI,GAAG;EACP,SAAS,QAAQ;AACb,YAAS,QAAQ;GACjB,MAAM,aAAa,OAAO,WAAW;AACrC,UAAO,CAAC,eAAe,OAAO,MAAM,MAAM,IAAI,WAAW,cAAc,WAAW;;AAEtF,OAAI,IAAI,GAAG,IAAI,MAAM,EAAE,GAAE;AACrB,OAAI,OAAO,CACP;AAEJ,QAAK,sBAAsB,OAAO,OAAO,QAAQ,MAAM;AACvD,OAAI,OACA;;AAGR,MAAI,OACA,MAAI,IAAI,OAAO,GAAG,KAAK,GAAG,EAAE,GAAE;AAC1B,OAAI,OAAO,CACP;AAEJ,QAAK,sBAAsB,OAAO,OAAO,QAAQ,MAAM;AACvD;;AAGR,SAAO;;CAEX,mBAAmB,OAAO;EACtB,MAAM,SAAS,KAAK,YAAY;EAChC,MAAM,SAAS,EAAE;EACjB,IAAI,GAAG,MAAM;AACb,OAAI,IAAI,GAAG,OAAO,OAAO,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC3C,WAAQ,OAAO,GAAG,MAAM;AACxB,OAAI,eAAe,MAAM,CACrB,QAAO,KAAK,MAAM;;AAG1B,SAAO;;CAEd,iBAAiB;AACV,SAAO;;CAEd,iBAAiB,SAAO;EACjB,MAAM,OAAO,KAAK;EAClB,MAAM,SAAS,KAAK;EACpB,MAAM,SAAS,KAAK;EACpB,MAAM,SAAS,KAAK,UAAUA,QAAM;AACpC,SAAO;GACH,OAAO,SAAS,KAAK,OAAO,iBAAiB,OAAO,OAAO,MAAM,GAAG;GACpE,OAAO,SAAS,KAAK,OAAO,iBAAiB,OAAO,OAAO,MAAM,GAAG;GACvE;;CAER,QAAQ,MAAM;EACP,MAAM,OAAO,KAAK;AAClB,OAAK,OAAO,QAAQ,UAAU;AAC9B,OAAK,QAAQ,OAAO,eAAe,KAAK,QAAQ,MAAM,YAAY,KAAK,QAAQ,KAAK,QAAQ,KAAK,gBAAgB,CAAC,CAAC,CAAC;;CAE3H,OAAO,MAAM;CACV,OAAO;EACH,MAAM,MAAM,KAAK;EACjB,MAAM,QAAQ,KAAK;EACnB,MAAM,OAAO,KAAK;EAClB,MAAME,aAAW,KAAK,QAAQ,EAAE;EAChC,MAAM,OAAO,MAAM;EACnB,MAAM,SAAS,EAAE;EACjB,MAAM,QAAQ,KAAK,cAAc;EACjC,MAAM,QAAQ,KAAK,cAAcA,WAAS,SAAS;EACnD,MAAM,0BAA0B,KAAK,QAAQ;EAC7C,IAAI;AACJ,MAAI,KAAK,QACL,MAAK,QAAQ,KAAK,KAAK,MAAM,OAAO,MAAM;AAE9C,OAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,EAAE,GAAE;GAClC,MAAM,UAAUA,WAAS;AACzB,OAAI,QAAQ,OACR;AAEJ,OAAI,QAAQ,UAAU,wBAClB,QAAO,KAAK,QAAQ;OAEpB,SAAQ,KAAK,KAAK,KAAK;;AAG/B,OAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,EAC5B,QAAO,GAAG,KAAK,KAAK,KAAK;;CAGpC,SAAS,SAAO,QAAQ;EACjB,MAAM,OAAO,SAAS,WAAW;AACjC,SAAOF,YAAU,UAAa,KAAK,YAAY,UAAU,KAAK,6BAA6B,KAAK,GAAG,KAAK,0BAA0BA,WAAS,GAAG,KAAK;;CAE1J,WAAW,SAAO,QAAQ,MAAM;EACzB,MAAM,UAAU,KAAK,YAAY;EACjC,IAAI;AACJ,MAAIA,WAAS,KAAKA,UAAQ,KAAK,YAAY,KAAK,QAAQ;GACpD,MAAM,UAAU,KAAK,YAAY,KAAKA;AACtC,aAAU,QAAQ,aAAa,QAAQ,WAAW,kBAAkB,KAAK,YAAY,EAAEA,SAAO,QAAQ;AACtG,WAAQ,SAAS,KAAK,UAAUA,QAAM;AACtC,WAAQ,MAAM,QAAQ,KAAKA;AAC3B,WAAQ,QAAQ,QAAQ,YAAYA;SACjC;AACH,aAAU,KAAK,aAAa,KAAK,WAAW,qBAAqB,KAAK,MAAM,YAAY,EAAE,KAAK,MAAM;AACrG,WAAQ,UAAU;AAClB,WAAQ,QAAQ,QAAQ,eAAe,KAAK;;AAEhD,UAAQ,SAAS,CAAC,CAAC;AACnB,UAAQ,OAAO;AACf,SAAO;;CAEd,6BAA6B,MAAM;AAC5B,SAAO,KAAK,uBAAuB,KAAK,mBAAmB,IAAI,KAAK;;CAE3E,0BAA0B,SAAO,MAAM;AAChC,SAAO,KAAK,uBAAuB,KAAK,gBAAgB,IAAI,MAAMA,QAAM;;CAE/E,uBAAuB,aAAa,OAAO,WAAW,SAAO;EACtD,MAAM,SAAS,SAAS;EACxB,MAAM,QAAQ,KAAK;EACnB,MAAM,WAAW,cAAc,MAAM;EACrC,MAAM,SAAS,MAAM;EACrB,MAAM,UAAU,KAAK,uBAAuB,QAAQA,QAAM;AAC1D,MAAI,OACA,QAAO,iBAAiB,QAAQ,QAAQ;EAE5C,MAAM,SAAS,KAAK,MAAM;EAC1B,MAAM,YAAY,OAAO,wBAAwB,KAAK,OAAO,YAAY;EACzE,MAAM,WAAW,SAAS;GACtB,GAAG,YAAY;GACf;GACA;GACA;GACH,GAAG,CACA,aACA,GACH;EACD,MAAM,SAAS,OAAO,gBAAgB,KAAK,YAAY,EAAE,UAAU;EACnE,MAAMG,UAAQ,OAAO,KAAK,SAAS,SAAS,aAAa;EACzD,MAAM,gBAAc,KAAK,WAAWH,SAAO,QAAQ,KAAK;EACxD,MAAM,SAAS,OAAO,oBAAoB,QAAQG,SAAO,SAAS,SAAS;AAC3E,MAAI,OAAO,SAAS;AAChB,UAAO,UAAU;AACjB,SAAM,YAAY,OAAO,OAAO,iBAAiB,QAAQ,QAAQ,CAAC;;AAEtE,SAAO;;CAEd,mBAAmB,SAAO,YAAY,QAAQ;EACvC,MAAM,QAAQ,KAAK;EACnB,MAAM,QAAQ,KAAK;EACnB,MAAM,WAAW,aAAa;EAC9B,MAAM,SAAS,MAAM;AACrB,MAAI,OACA,QAAO;EAEX,IAAI;AACJ,MAAI,MAAM,QAAQ,cAAc,OAAO;GACnC,MAAM,SAAS,KAAK,MAAM;GAC1B,MAAM,YAAY,OAAO,0BAA0B,KAAK,OAAO,WAAW;GAC1E,MAAM,SAAS,OAAO,gBAAgB,KAAK,YAAY,EAAE,UAAU;AACnE,aAAU,OAAO,eAAe,QAAQ,KAAK,WAAWH,SAAO,QAAQ,WAAW,CAAC;;EAEvF,MAAM,aAAa,IAAI,WAAW,OAAO,WAAW,QAAQ,WAAW;AACvE,MAAI,WAAW,QAAQ,WACnB,OAAM,YAAY,OAAO,OAAO,WAAW;AAE/C,SAAO;;CAEd,iBAAiB,SAAS;AACnB,MAAI,CAAC,QAAQ,QACT;AAEJ,SAAO,KAAK,mBAAmB,KAAK,iBAAiB,OAAO,OAAO,EAAE,EAAE,QAAQ;;CAEtF,eAAe,MAAM,eAAe;AAC7B,SAAO,CAAC,iBAAiB,mBAAmB,KAAK,IAAI,KAAK,MAAM;;CAEvE,kBAAkB,OAAO,MAAM;EACxB,MAAM,YAAY,KAAK,0BAA0B,OAAO,KAAK;EAC7D,MAAM,0BAA0B,KAAK;EACrC,MAAM,gBAAgB,KAAK,iBAAiB,UAAU;EACtD,MAAM,iBAAiB,KAAK,eAAe,MAAM,cAAc,IAAI,kBAAkB;AACrF,OAAK,oBAAoB,eAAe,MAAM,UAAU;AACxD,SAAO;GACH;GACA;GACH;;CAER,cAAc,SAAS,SAAO,YAAY,MAAM;AACzC,MAAI,mBAAmB,KAAK,CACxB,QAAO,OAAO,SAAS,WAAW;MAElC,MAAK,mBAAmBA,SAAO,KAAK,CAAC,OAAO,SAAS,WAAW;;CAG3E,oBAAoB,eAAe,MAAM,YAAY;AAC9C,MAAI,iBAAiB,CAAC,mBAAmB,KAAK,CAC1C,MAAK,mBAAmB,QAAW,KAAK,CAAC,OAAO,eAAe,WAAW;;CAGrF,UAAU,SAAS,SAAO,MAAM,QAAQ;AACjC,UAAQ,SAAS;EACjB,MAAM,UAAU,KAAK,SAASA,SAAO,OAAO;AAC5C,OAAK,mBAAmBA,SAAO,MAAM,OAAO,CAAC,OAAO,SAAS,EACzD,SAAS,CAAC,UAAU,KAAK,iBAAiB,QAAQ,IAAI,SACzD,CAAC;;CAEN,iBAAiB,SAAS,cAAc,SAAO;AAC3C,OAAK,UAAU,SAASA,SAAO,UAAU,MAAM;;CAEnD,cAAc,SAAS,cAAc,SAAO;AACxC,OAAK,UAAU,SAASA,SAAO,UAAU,KAAK;;CAErD,2BAA2B;EACpB,MAAM,UAAU,KAAK,YAAY;AACjC,MAAI,QACA,MAAK,UAAU,SAAS,QAAW,UAAU,MAAM;;CAG9D,wBAAwB;EACjB,MAAM,UAAU,KAAK,YAAY;AACjC,MAAI,QACA,MAAK,UAAU,SAAS,QAAW,UAAU,KAAK;;CAG7D,gBAAgB,kBAAkB;EAC3B,MAAM,OAAO,KAAK;EAClB,MAAME,aAAW,KAAK,YAAY;AAClC,OAAK,MAAM,CAAC,QAAQ,MAAM,SAAS,KAAK,UACpC,MAAK,QAAQ,MAAM,KAAK;AAE5B,OAAK,YAAY,EAAE;EACnB,MAAM,UAAUA,WAAS;EACzB,MAAM,UAAU,KAAK;EACrB,MAAM,QAAQ,KAAK,IAAI,SAAS,QAAQ;AACxC,MAAI,MACA,MAAK,MAAM,GAAG,MAAM;AAExB,MAAI,UAAU,QACV,MAAK,gBAAgB,SAAS,UAAU,SAAS,iBAAiB;WAC3D,UAAU,QACjB,MAAK,gBAAgB,SAAS,UAAU,QAAQ;;CAG3D,gBAAgB,OAAO,OAAO,mBAAmB,MAAM;EAChD,MAAM,OAAO,KAAK;EAClB,MAAM,OAAO,KAAK;EAClB,MAAM,MAAM,QAAQ;EACpB,IAAI;EACJ,MAAM,QAAQ,QAAM;AAChB,OAAI,UAAU;AACd,QAAI,IAAI,IAAI,SAAS,GAAG,KAAK,KAAK,IAC9B,KAAI,KAAK,IAAI,IAAI;;AAGzB,OAAK,KAAK;AACV,OAAI,IAAI,OAAO,IAAI,KAAK,EAAE,EACtB,MAAK,KAAK,IAAI,KAAK,iBAAiB;AAExC,MAAI,KAAK,SACL,MAAK,KAAK,QAAQ;AAEtB,OAAK,MAAM,OAAO,MAAM;AACxB,MAAI,iBACA,MAAK,eAAe,MAAM,OAAO,OAAO,QAAQ;;CAGxD,eAAe,SAAS,OAAO,OAAO,MAAM;CAC/C,gBAAgB,OAAO,OAAO;EACvB,MAAM,OAAO,KAAK;AAClB,MAAI,KAAK,UAAU;GACf,MAAM,UAAU,KAAK,QAAQ,OAAO,OAAO,MAAM;AACjD,OAAI,KAAK,SACL,aAAY,MAAM,QAAQ;;AAGlC,OAAK,KAAK,OAAO,OAAO,MAAM;;CAErC,MAAM,MAAM;AACL,MAAI,KAAK,SACL,MAAK,UAAU,KAAK,KAAK;OACtB;GACH,MAAM,CAAC,QAAQ,MAAM,QAAQ;AAC7B,QAAK,QAAQ,MAAM,KAAK;;AAE5B,OAAK,MAAM,aAAa,KAAK,CACzB,KAAK,OACL,GAAG,KACN,CAAC;;CAEN,cAAc;EACV,MAAM,QAAQ,UAAU;AACxB,OAAK,MAAM;GACP;GACA,KAAK,YAAY,CAAC,KAAK,SAAS;GAChC;GACH,CAAC;;CAEN,aAAa;AACT,OAAK,MAAM;GACP;GACA,KAAK,YAAY,KAAK,SAAS;GAC/B;GACH,CAAC;;CAEN,eAAe;AACX,OAAK,MAAM;GACP;GACA;GACA;GACH,CAAC;;CAEN,cAAc,OAAO,OAAO;AACxB,MAAI,MACA,MAAK,MAAM;GACP;GACA;GACA;GACH,CAAC;EAEN,MAAM,WAAW,UAAU,SAAS;AACpC,MAAI,SACA,MAAK,MAAM;GACP;GACA;GACA;GACH,CAAC;;CAGV,iBAAiB;AACb,OAAK,MAAM;GACP;GACA;GACA,UAAU;GACb,CAAC;;;AAIV,SAAS,kBAAkB,OAAO,MAAM;AACpC,KAAI,CAAC,MAAM,OAAO,MAAM;EACpB,MAAM,eAAe,MAAM,wBAAwB,KAAK;EACxD,IAAI,SAAS,EAAE;AACf,OAAI,IAAI,IAAI,GAAG,OAAO,aAAa,QAAQ,IAAI,MAAM,IACjD,UAAS,OAAO,OAAO,aAAa,GAAG,WAAW,mBAAmB,MAAM,CAAC;AAEhF,QAAM,OAAO,OAAO,aAAa,OAAO,MAAM,GAAG,MAAI,IAAI,EAAE,CAAC;;AAEhE,QAAO,MAAM,OAAO;;AAEvB,SAAS,qBAAqB,MAAM;CACjC,MAAM,QAAQ,KAAK;CACnB,MAAM,SAAS,kBAAkB,OAAO,KAAK,KAAK;CAClD,IAAI,MAAM,MAAM;CAChB,IAAI,GAAG,MAAM,MAAM;CACnB,MAAM,yBAAuB;AACzB,MAAI,SAAS,SAAS,SAAS,OAC3B;AAEJ,MAAI,QAAQ,KAAK,CACb,OAAM,KAAK,IAAI,KAAK,KAAK,IAAI,OAAO,KAAK,IAAI,IAAI;AAErD,SAAO;;AAEX,MAAI,IAAI,GAAG,OAAO,OAAO,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC3C,SAAO,MAAM,iBAAiB,OAAO,GAAG;AACxC,oBAAkB;;AAEtB,QAAO;AACP,MAAI,IAAI,GAAG,OAAO,MAAM,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;AAChD,SAAO,MAAM,gBAAgB,EAAE;AAC/B,oBAAkB;;AAEtB,QAAO;;AAEV,SAAS,yBAAyB,SAAO,OAAO,SAAS,YAAY;CAClE,MAAM,YAAY,QAAQ;CAC1B,IAAI,MAAM;AACV,KAAI,cAAc,UAAU,EAAE;AAC1B,SAAO,MAAM,MAAM,QAAQ;AAC3B,UAAQ,QAAQ;QACb;AACH,SAAO,YAAY;AACnB,UAAQ;;AAEZ,QAAO;EACH,OAAO,OAAO;EACd;EACA,OAAO,MAAM,OAAOF,WAAS,OAAO;EACvC;;AAEJ,SAAS,0BAA0B,SAAO,OAAO,SAAS,YAAY;CACnE,MAAM,SAAS,MAAM;CACrB,MAAM,OAAO,OAAOA;CACpB,IAAI,OAAOA,UAAQ,IAAI,OAAOA,UAAQ,KAAK;CAC3C,IAAI,OAAOA,UAAQ,OAAO,SAAS,IAAI,OAAOA,UAAQ,KAAK;CAC3D,MAAM,UAAU,QAAQ;AACxB,KAAI,SAAS,KACT,QAAO,QAAQ,SAAS,OAAO,MAAM,MAAM,MAAM,QAAQ,OAAO;AAEpE,KAAI,SAAS,KACT,QAAO,OAAO,OAAO;CAEzB,MAAM,QAAQ,QAAQ,OAAO,KAAK,IAAI,MAAM,KAAK,IAAI,IAAI;AAEzD,QAAO;EACH,OAFS,KAAK,IAAI,OAAO,KAAK,GAAG,IAAI,UAEvB;EACd,OAAO,QAAQ;EACf;EACH;;AAEL,SAAS,cAAc,OAAO,MAAM,QAAQ,GAAG;CAC3C,MAAM,aAAa,OAAO,MAAM,MAAM,IAAI,EAAE;CAC5C,MAAM,WAAW,OAAO,MAAM,MAAM,IAAI,EAAE;CAC1C,MAAM,MAAM,KAAK,IAAI,YAAY,SAAS;CAC1C,MAAM,MAAM,KAAK,IAAI,YAAY,SAAS;CAC1C,IAAI,WAAW;CACf,IAAI,SAAS;AACb,KAAI,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,EAAE;AAC/B,aAAW;AACX,WAAS;;AAEb,MAAK,OAAO,QAAQ;AACpB,MAAK,UAAU;EACX;EACA;EACA,OAAO;EACP,KAAK;EACL;EACA;EACH;;AAEL,SAAS,WAAW,OAAO,MAAM,QAAQ,GAAG;AACxC,KAAI,QAAQ,MAAM,CACd,eAAc,OAAO,MAAM,QAAQ,EAAE;KAErC,MAAK,OAAO,QAAQ,OAAO,MAAM,OAAO,EAAE;AAE9C,QAAO;;AAEX,SAAS,sBAAsB,MAAM,MAAM,OAAO,OAAO;CACrD,MAAM,SAAS,KAAK;CACpB,MAAM,SAAS,KAAK;CACpB,MAAM,SAAS,OAAO,WAAW;CACjC,MAAM,cAAc,WAAW;CAC/B,MAAM,SAAS,EAAE;CACjB,IAAI,GAAG,MAAM,MAAM;AACnB,MAAI,IAAI,OAAO,OAAO,QAAQ,OAAO,IAAI,MAAM,EAAE,GAAE;AAC/C,UAAQ,KAAK;AACb,SAAO,EAAE;AACT,OAAK,OAAO,QAAQ,eAAe,OAAO,MAAM,OAAO,IAAI,EAAE;AAC7D,SAAO,KAAK,WAAW,OAAO,MAAM,QAAQ,EAAE,CAAC;;AAEnD,QAAO;;AAEX,SAAS,WAAW,QAAQ;AACxB,QAAO,UAAU,OAAO,aAAa,UAAa,OAAO,WAAW;;AAExE,SAAS,QAAQ,MAAM,QAAQ,YAAY;AACvC,KAAI,SAAS,EACT,QAAO,KAAK,KAAK;AAErB,SAAQ,OAAO,cAAc,GAAG,IAAI,OAAO,OAAO,OAAO,aAAa,IAAI;;AAE9E,SAAS,YAAY,YAAY;CAC7B,IAAI,SAAS,OAAO,KAAK,KAAK;AAC9B,KAAI,WAAW,YAAY;AACvB,YAAU,WAAW,OAAO,WAAW;AACvC,UAAQ;AACR,QAAM;QACH;AACH,YAAU,WAAW,OAAO,WAAW;AACvC,UAAQ;AACR,QAAM;;AAEV,KAAI,SAAS;AACT,QAAM;AACN,WAAS;QACN;AACH,QAAM;AACN,WAAS;;AAEb,QAAO;EACH;EACA;EACA;EACA;EACA;EACH;;AAEL,SAAS,iBAAiB,YAAY,SAAS,OAAO,SAAO;CACzD,IAAI,OAAO,QAAQ;CACnB,MAAM,MAAM,EAAE;AACd,KAAI,CAAC,MAAM;AACP,aAAW,gBAAgB;AAC3B;;AAEJ,KAAI,SAAS,MAAM;AACf,aAAW,gBAAgB;GACvB,KAAK;GACL,OAAO;GACP,QAAQ;GACR,MAAM;GACT;AACD;;CAEJ,MAAM,EAAE,OAAQ,KAAM,SAAU,KAAM,WAAY,YAAY,WAAW;AACzE,KAAI,SAAS,YAAY,OAAO;AAC5B,aAAW,qBAAqB;AAChC,OAAK,MAAM,QAAQ,OAAOA,QACtB,QAAO;YACC,MAAM,WAAW,OAAOA,QAChC,QAAO;OACJ;AACH,OAAI,UAAU,QAAQ,OAAO,KAAK,QAAQ,IAAI;AAC9C,UAAO;;;AAGf,KAAI,UAAU,MAAM,OAAO,KAAK,QAAQ,IAAI;AAC5C,YAAW,gBAAgB;;AAE/B,SAAS,UAAU,MAAM,GAAG,GAAG,SAAS;AACpC,KAAI,SAAS;AACT,SAAO,KAAK,MAAM,GAAG,EAAE;AACvB,SAAO,SAAS,MAAM,GAAG,EAAE;OAE3B,QAAO,SAAS,MAAM,GAAG,EAAE;AAE/B,QAAO;;AAEX,SAAS,KAAK,MAAM,IAAI,IAAI;AACxB,QAAO,SAAS,KAAK,KAAK,SAAS,KAAK,KAAK;;AAEjD,SAAS,SAAS,GAAG,OAAO,KAAK;AAC7B,QAAO,MAAM,UAAU,QAAQ,MAAM,QAAQ,MAAM;;AAEvD,SAAS,iBAAiB,YAAY,EAAE,iBAAkB,OAAO;AAC7D,YAAW,gBAAgB,kBAAkB,SAAS,UAAU,IAAI,MAAO,IAAI;;AAEnF,IAAM,gBAAN,cAA4B,kBAAkB;CAC1C,OAAO,KAAK;CACf,OAAO,WAAW;EACX,oBAAoB;EACpB,iBAAiB;EACjB,oBAAoB;EACpB,eAAe;EACf,SAAS;EACT,YAAY,EACR,SAAS;GACL,MAAM;GACN,YAAY;IACR;IACA;IACA;IACA;IACA;IACH;GACJ,EACJ;EACJ;CACJ,OAAO,YAAY,EACZ,QAAQ;EACJ,SAAS;GACL,MAAM;GACN,QAAQ;GACR,MAAM,EACF,QAAQ,MACX;GACJ;EACD,SAAS;GACL,MAAM;GACN,aAAa;GAChB;EACJ,EACJ;CACJ,mBAAmB,MAAM,MAAM,OAAO,OAAO;AACtC,SAAO,sBAAsB,MAAM,MAAM,OAAO,MAAM;;CAE7D,eAAe,MAAM,MAAM,OAAO,OAAO;AAClC,SAAO,sBAAsB,MAAM,MAAM,OAAO,MAAM;;CAE7D,gBAAgB,MAAM,MAAM,OAAO,OAAO;EACnC,MAAM,EAAE,QAAS,WAAY;EAC7B,MAAM,EAAE,WAAU,KAAM,WAAU,QAAS,KAAK;EAChD,MAAM,WAAW,OAAO,SAAS,MAAM,WAAW;EAClD,MAAM,WAAW,OAAO,SAAS,MAAM,WAAW;EAClD,MAAM,SAAS,EAAE;EACjB,IAAI,GAAG,MAAM,MAAM;AACnB,OAAI,IAAI,OAAO,OAAO,QAAQ,OAAO,IAAI,MAAM,EAAE,GAAE;AAC/C,SAAM,KAAK;AACX,UAAO,EAAE;AACT,QAAK,OAAO,QAAQ,OAAO,MAAM,iBAAiB,KAAK,SAAS,EAAE,EAAE;AACpE,UAAO,KAAK,WAAW,iBAAiB,KAAK,SAAS,EAAE,MAAM,QAAQ,EAAE,CAAC;;AAE7E,SAAO;;CAEd,sBAAsB,OAAO,OAAO,QAAQ,OAAO;AAC5C,QAAM,sBAAsB,OAAO,OAAO,QAAQ,MAAM;EACxD,MAAM,SAAS,OAAO;AACtB,MAAI,UAAU,UAAU,KAAK,YAAY,QAAQ;AAC7C,SAAM,MAAM,KAAK,IAAI,MAAM,KAAK,OAAO,IAAI;AAC3C,SAAM,MAAM,KAAK,IAAI,MAAM,KAAK,OAAO,IAAI;;;CAGtD,iBAAiB;AACV,SAAO;;CAEd,iBAAiB,SAAO;EAEjB,MAAM,EAAE,QAAS,WADJ,KAAK;EAElB,MAAM,SAAS,KAAK,UAAUA,QAAM;EACpC,MAAM,SAAS,OAAO;EACtB,MAAM,QAAQ,WAAW,OAAO,GAAG,MAAM,OAAO,QAAQ,OAAO,OAAO,MAAM,MAAM,KAAK,OAAO,iBAAiB,OAAO,OAAO,MAAM;AACnI,SAAO;GACH,OAAO,KAAK,OAAO,iBAAiB,OAAO,OAAO,MAAM;GACxD;GACH;;CAEL,aAAa;AACT,OAAK,sBAAsB;AAC3B,QAAM,YAAY;EAClB,MAAM,OAAO,KAAK;AAClB,OAAK,QAAQ,KAAK,YAAY,CAAC;;CAEnC,OAAO,MAAM;EACT,MAAM,OAAO,KAAK;AAClB,OAAK,eAAe,KAAK,MAAM,GAAG,KAAK,KAAK,QAAQ,KAAK;;CAE7D,eAAe,MAAM,OAAO,OAAO,MAAM;EACrC,MAAM,QAAQ,SAAS;EACvB,MAAM,EAAE,gBAAQ,aAAa,EAAE,aAAe;EAC9C,MAAM,OAAO,OAAO,cAAc;EAClC,MAAM,aAAa,OAAO,cAAc;EACxC,MAAM,QAAQ,KAAK,WAAW;EAC9B,MAAM,EAAE,eAAgB,mBAAoB,KAAK,kBAAkB,OAAO,KAAK;AAC/E,OAAI,IAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,KAAI;GACtC,MAAM,SAAS,KAAK,UAAU,EAAE;GAChC,MAAM,UAAU,SAAS,cAAc,OAAO,OAAO,MAAM,GAAG;IAC1D;IACA,MAAM;IACT,GAAG,KAAK,yBAAyB,EAAE;GACpC,MAAM,UAAU,KAAK,yBAAyB,GAAG,MAAM;GACvD,MAAM,SAAS,OAAO,WAAW,EAAE,EAAE,OAAO;GAC5C,MAAM,aAAa;IACf;IACA,MAAM,QAAQ;IACd,oBAAoB,CAAC,SAAS,WAAW,OAAO,QAAQ,IAAIA,YAAU,MAAM,QAAQA,YAAU,MAAM;IACpG,GAAG,aAAa,QAAQ,OAAO,QAAQ;IACvC,GAAG,aAAa,QAAQ,SAAS,QAAQ;IACzC,QAAQ,aAAa,QAAQ,OAAO,KAAK,IAAI,QAAQ,KAAK;IAC1D,OAAO,aAAa,KAAK,IAAI,QAAQ,KAAK,GAAG,QAAQ;IACxD;AACD,OAAI,eACA,YAAW,UAAU,iBAAiB,KAAK,0BAA0B,GAAG,KAAK,GAAG,SAAS,WAAW,KAAK;GAE7G,MAAM,UAAU,WAAW,WAAW,KAAK,GAAG;AAC9C,oBAAiB,YAAY,SAAS,OAAOA,QAAM;AACnD,oBAAiB,YAAY,SAAS,MAAM,MAAM;AAClD,QAAK,cAAc,KAAK,IAAI,GAAG,YAAY,KAAK;;;CAG3D,WAAW,MAAM,WAAW;EACrB,MAAM,EAAE,WAAY,KAAK;EACzB,MAAM,WAAW,OAAO,wBAAwB,KAAK,MAAM,CAAC,QAAQ,SAAO,KAAK,WAAW,QAAQ,QAAQ;EAC3G,MAAM,UAAU,OAAO,QAAQ;EAC/B,MAAM,SAAS,EAAE;EACjB,MAAM,gBAAgB,KAAK,YAAY,WAAW,UAAU,UAAU;EACtE,MAAM,cAAc,iBAAiB,cAAc,OAAO;EAC1D,MAAM,YAAY,SAAO;GACrB,MAAM,SAAS,KAAK,QAAQ,MAAM,SAAO,KAAK,OAAO,UAAU,YAAY;GAC3E,MAAM,MAAM,UAAU,OAAO,KAAK,OAAO;AACzC,OAAI,cAAc,IAAI,IAAI,MAAM,IAAI,CAChC,QAAO;;AAGf,OAAK,MAAM,QAAQ,UAAS;AACxB,OAAI,cAAc,UAAa,SAAS,KAAK,CACzC;AAEJ,OAAI,YAAY,SAAS,OAAO,QAAQ,KAAK,MAAM,KAAK,MAAM,YAAY,UAAa,KAAK,UAAU,OAClG,QAAO,KAAK,KAAK,MAAM;AAE3B,OAAI,KAAK,UAAU,KACf;;AAGR,MAAI,CAAC,OAAO,OACR,QAAO,KAAK,OAAU;AAE1B,SAAO;;CAEd,eAAe,SAAO;AACf,SAAO,KAAK,WAAW,QAAWA,QAAM,CAAC;;CAE7C,gBAAgB;AACZ,SAAO,KAAK,UAAU,CAAC;;CAE3B,8BAA8B;EAC1B,MAAMC,WAAS,KAAK,MAAM;EAC1B,MAAM,eAAe,KAAK,MAAM,QAAQ;AACxC,SAAO,OAAO,KAAKA,SAAO,CAAC,QAAQ,QAAMA,SAAO,KAAK,SAAS,aAAa,CAAC,OAAO;;CAEvF,WAAW;EACP,MAAM,OAAO,EAAE;EACf,MAAM,mBAAmB,KAAK,6BAA6B;AAC3D,OAAK,MAAM,WAAW,KAAK,MAAM,KAAK,SAClC,MAAK,eAAe,KAAK,MAAM,QAAQ,cAAc,MAAM,QAAQ,UAAU,QAAQ,SAAS,iBAAiB,IAAI;AAEvH,SAAO,OAAO,KAAK,KAAK;;CAE/B,eAAe,cAAc,MAAM,WAAW;EACvC,MAAM,SAAS,KAAK,WAAW,cAAc,UAAU;EACvD,MAAMD,UAAQ,SAAS,SAAY,OAAO,QAAQ,KAAK,GAAG;AAC1D,SAAOA,YAAU,KAAK,OAAO,SAAS,IAAIA;;CAEjD,YAAY;EACL,MAAM,OAAO,KAAK;EAClB,MAAM,OAAO,KAAK;EAClB,MAAM,SAAS,KAAK;EACpB,MAAM,SAAS,EAAE;EACjB,IAAI,GAAG;AACP,OAAI,IAAI,GAAG,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,EAAE,EAC5C,QAAO,KAAK,OAAO,iBAAiB,KAAK,UAAU,EAAE,CAAC,OAAO,OAAO,EAAE,CAAC;EAE3E,MAAM,eAAe,KAAK;AAE1B,SAAO;GACH,KAFQ,gBAAgB,qBAAqB,KAAK;GAGlD;GACA,OAAO,OAAO;GACd,KAAK,OAAO;GACZ,YAAY,KAAK,gBAAgB;GACjC,OAAO;GACP,SAAS,KAAK;GACd,OAAO,eAAe,IAAI,KAAK,qBAAqB,KAAK;GAC5D;;CAER,yBAAyB,SAAO;EACzB,MAAM,EAAE,aAAa,EAAE,QAAS,UAAW,OAAO,gBAAkB,SAAS,EAAE,MAAM,WAAY,mBAAqB;EACtH,MAAM,aAAa,aAAa;EAChC,MAAM,SAAS,KAAK,UAAUA,QAAM;EACpC,MAAM,SAAS,OAAO;EACtB,MAAM,WAAW,WAAW,OAAO;EACnC,IAAI,QAAQ,OAAO,OAAO;EAC1B,IAAI,QAAQ;EACZ,IAAI,SAAS,WAAW,KAAK,WAAW,QAAQ,QAAQ,SAAS,GAAG;EACpE,IAAI,MAAM;AACV,MAAI,WAAW,OAAO;AAClB,WAAQ,SAAS;AACjB,YAAS;;AAEb,MAAI,UAAU;AACV,WAAQ,OAAO;AACf,YAAS,OAAO,SAAS,OAAO;AAChC,OAAI,UAAU,KAAK,KAAK,MAAM,KAAK,KAAK,OAAO,OAAO,CAClD,SAAQ;AAEZ,YAAS;;EAEb,MAAM,aAAa,CAAC,cAAc,UAAU,IAAI,CAAC,WAAW,YAAY;EACxE,IAAI,OAAO,OAAO,iBAAiB,WAAW;AAC9C,MAAI,KAAK,MAAM,kBAAkBA,QAAM,CACnC,QAAO,OAAO,iBAAiB,QAAQ,OAAO;MAE9C,QAAO;AAEX,SAAO,OAAO;AACd,MAAI,KAAK,IAAI,KAAK,GAAG,cAAc;AAC/B,UAAO,QAAQ,MAAM,QAAQ,WAAW,GAAG;AAC3C,OAAI,UAAU,WACV,SAAQ,OAAO;GAEnB,MAAM,aAAa,OAAO,mBAAmB,EAAE;GAC/C,MAAM,WAAW,OAAO,mBAAmB,EAAE;GAC7C,MAAM,MAAM,KAAK,IAAI,YAAY,SAAS;GAC1C,MAAM,MAAM,KAAK,IAAI,YAAY,SAAS;AAC1C,UAAO,KAAK,IAAI,KAAK,IAAI,MAAM,IAAI,EAAE,IAAI;AACzC,UAAO,OAAO;AACd,OAAI,YAAY,CAAC,SACb,QAAO,QAAQ,OAAO,MAAM,cAAc,gBAAgB,OAAO,iBAAiB,KAAK,GAAG,OAAO,iBAAiB,KAAK;;AAG/H,MAAI,SAAS,OAAO,iBAAiB,WAAW,EAAE;GAC9C,MAAM,WAAW,KAAK,KAAK,GAAG,OAAO,qBAAqB,WAAW,GAAG;AACxE,WAAQ;AACR,WAAQ;;AAEZ,SAAO;GACH;GACA;GACA;GACA,QAAQ,OAAO,OAAO;GACzB;;CAER,yBAAyB,SAAO,OAAO;EAChC,MAAM,QAAQ,MAAM;EACpB,MAAM,UAAU,KAAK;EACrB,MAAM,WAAW,QAAQ;EACzB,MAAM,kBAAkB,eAAe,QAAQ,iBAAiB,SAAS;EACzE,IAAI,QAAQ;EACZ,MAAM,YAAY,KAAK,eAAe;AACtC,MAAI,MAAM,SAAS;GACf,MAAM,aAAa,WAAW,KAAK,eAAeA,QAAM,GAAG,MAAM;GACjE,MAAM,QAAQ,QAAQ,iBAAiB,SAAS,0BAA0BA,SAAO,OAAO,SAAS,aAAa,UAAU,GAAG,yBAAyBA,SAAO,OAAO,SAAS,aAAa,UAAU;GAClM,MAAM,SAAS,KAAK,MAAM,QAAQ,cAAc,MAAM,KAAK,YAAY,CAAC,UAAU,KAAK,YAAY,CAAC;GACpG,MAAM,aAAa,KAAK,UAAU,CAAC,QAAQ,eAAe,QAAQ,KAAK,6BAA6B,CAAC,CAAC;GACtG,MAAM,aAAa,KAAK,eAAe,KAAK,OAAO,KAAK,YAAY,OAAO,WAAWA,UAAQ,OAAU,GAAG;AAC3G,YAAS,MAAM,QAAQ,MAAM,QAAQ,aAAa,MAAM,QAAQ;AAChE,UAAO,KAAK,IAAI,iBAAiB,MAAM,QAAQ,MAAM,MAAM;SACxD;AACH,YAAS,MAAM,iBAAiB,KAAK,UAAUA,QAAM,CAAC,MAAM,OAAOA,QAAM;AACzE,UAAO,KAAK,IAAI,iBAAiB,MAAM,MAAM,MAAM,MAAM;;AAE7D,SAAO;GACH,MAAM,SAAS,OAAO;GACtB,MAAM,SAAS,OAAO;GACtB;GACA;GACH;;CAEL,OAAO;EACH,MAAM,OAAO,KAAK;EAClB,MAAM,SAAS,KAAK;EACpB,MAAM,QAAQ,KAAK;EACnB,MAAM,OAAO,MAAM;EACnB,IAAI,IAAI;AACR,SAAM,IAAI,MAAM,EAAE,EACd,KAAI,KAAK,UAAU,EAAE,CAAC,OAAO,UAAU,QAAQ,CAAC,MAAM,GAAG,OACrD,OAAM,GAAG,KAAK,KAAK,KAAK;;;AAMxC,IAAM,mBAAN,cAA+B,kBAAkB;CAC7C,OAAO,KAAK;CACf,OAAO,WAAW;EACX,oBAAoB;EACpB,iBAAiB;EACjB,YAAY,EACR,SAAS;GACL,MAAM;GACN,YAAY;IACR;IACA;IACA;IACA;IACH;GACJ,EACJ;EACJ;CACJ,OAAO,YAAY,EACZ,QAAQ;EACJ,GAAG,EACC,MAAM,UACT;EACD,GAAG,EACC,MAAM,UACT;EACJ,EACJ;CACD,aAAa;AACT,OAAK,sBAAsB;AAC3B,QAAM,YAAY;;CAEzB,mBAAmB,MAAM,MAAM,OAAO,OAAO;EACtC,MAAM,SAAS,MAAM,mBAAmB,MAAM,MAAM,OAAO,MAAM;AACjE,OAAI,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,IAC9B,QAAO,GAAG,UAAU,KAAK,0BAA0B,IAAI,MAAM,CAAC;AAElE,SAAO;;CAEd,eAAe,MAAM,MAAM,OAAO,OAAO;EAClC,MAAM,SAAS,MAAM,eAAe,MAAM,MAAM,OAAO,MAAM;AAC7D,OAAI,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAI;GAClC,MAAM,OAAO,KAAK,QAAQ;AAC1B,UAAO,GAAG,UAAU,eAAe,KAAK,IAAI,KAAK,0BAA0B,IAAI,MAAM,CAAC,OAAO;;AAEjG,SAAO;;CAEd,gBAAgB,MAAM,MAAM,OAAO,OAAO;EACnC,MAAM,SAAS,MAAM,gBAAgB,MAAM,MAAM,OAAO,MAAM;AAC9D,OAAI,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAI;GAClC,MAAM,OAAO,KAAK,QAAQ;AAC1B,UAAO,GAAG,UAAU,eAAe,QAAQ,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,0BAA0B,IAAI,MAAM,CAAC,OAAO;;AAEnH,SAAO;;CAEd,iBAAiB;EACV,MAAM,OAAO,KAAK,YAAY;EAC9B,IAAI,MAAM;AACV,OAAI,IAAI,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,EAAE,EACnC,OAAM,KAAK,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,0BAA0B,EAAE,CAAC,GAAG,EAAE;AAE5E,SAAO,MAAM,KAAK;;CAEzB,iBAAiB,SAAO;EACjB,MAAM,OAAO,KAAK;EAClB,MAAM,SAAS,KAAK,MAAM,KAAK,UAAU,EAAE;EAC3C,MAAM,EAAE,QAAS,WAAY;EAC7B,MAAM,SAAS,KAAK,UAAUA,QAAM;EACpC,MAAM,IAAI,OAAO,iBAAiB,OAAO,EAAE;EAC3C,MAAM,IAAI,OAAO,iBAAiB,OAAO,EAAE;EAC3C,MAAM,IAAI,OAAO;AACjB,SAAO;GACH,OAAO,OAAOA,YAAU;GACxB,OAAO,MAAM,IAAI,OAAO,KAAK,IAAI,OAAO,IAAI,MAAM;GACrD;;CAEL,OAAO,MAAM;EACT,MAAM,SAAS,KAAK,YAAY;AAChC,OAAK,eAAe,QAAQ,GAAG,OAAO,QAAQ,KAAK;;CAEvD,eAAe,QAAQ,OAAO,OAAO,MAAM;EACvC,MAAM,QAAQ,SAAS;EACvB,MAAM,EAAE,QAAS,WAAY,KAAK;EAClC,MAAM,EAAE,eAAgB,mBAAoB,KAAK,kBAAkB,OAAO,KAAK;EAC/E,MAAM,QAAQ,OAAO;EACrB,MAAM,QAAQ,OAAO;AACrB,OAAI,IAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,KAAI;GACtC,MAAM,QAAQ,OAAO;GACrB,MAAM,SAAS,CAAC,SAAS,KAAK,UAAU,EAAE;GAC1C,MAAM,aAAa,EAAE;GACrB,MAAM,SAAS,WAAW,SAAS,QAAQ,OAAO,mBAAmB,GAAI,GAAG,OAAO,iBAAiB,OAAO,OAAO;GAClH,MAAM,SAAS,WAAW,SAAS,QAAQ,OAAO,cAAc,GAAG,OAAO,iBAAiB,OAAO,OAAO;AACzG,cAAW,OAAO,MAAM,OAAO,IAAI,MAAM,OAAO;AAChD,OAAI,gBAAgB;AAChB,eAAW,UAAU,iBAAiB,KAAK,0BAA0B,GAAG,MAAM,SAAS,WAAW,KAAK;AACvG,QAAI,MACA,YAAW,QAAQ,SAAS;;AAGpC,QAAK,cAAc,OAAO,GAAG,YAAY,KAAK;;;CAGzD,0BAA0B,SAAO,MAAM;EAChC,MAAM,SAAS,KAAK,UAAUA,QAAM;EACpC,IAAI,SAAS,MAAM,0BAA0BA,SAAO,KAAK;AACzD,MAAI,OAAO,QACP,UAAS,OAAO,OAAO,EAAE,EAAE,QAAQ,EAC/B,SAAS,OACZ,CAAC;EAEN,MAAM,SAAS,OAAO;AACtB,MAAI,SAAS,SACT,QAAO,SAAS;AAEpB,SAAO,UAAU,eAAe,UAAU,OAAO,SAAS,OAAO;AACjE,SAAO;;;AAIf,SAAS,kBAAkB,UAAU,eAAe,QAAQ;CACxD,IAAI,SAAS;CACb,IAAI,SAAS;CACb,IAAI,UAAU;CACd,IAAI,UAAU;AACd,KAAI,gBAAgB,KAAK;EACrB,MAAM,aAAa;EACnB,MAAM,WAAW,aAAa;EAC9B,MAAM,SAAS,KAAK,IAAI,WAAW;EACnC,MAAM,SAAS,KAAK,IAAI,WAAW;EACnC,MAAM,OAAO,KAAK,IAAI,SAAS;EAC/B,MAAM,OAAO,KAAK,IAAI,SAAS;EAC/B,MAAM,WAAW,OAAO,GAAG,MAAI,cAAc,OAAO,YAAY,UAAU,KAAK,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,QAAQ,GAAG,IAAI,OAAO;EAC5H,MAAM,WAAW,OAAO,GAAG,MAAI,cAAc,OAAO,YAAY,UAAU,KAAK,GAAG,KAAK,KAAK,IAAI,GAAG,IAAI,QAAQ,GAAG,IAAI,OAAO;EAC7H,MAAM,OAAO,QAAQ,GAAG,QAAQ,KAAK;EACrC,MAAM,OAAO,QAAQ,SAAS,QAAQ,KAAK;EAC3C,MAAM,OAAO,QAAQ,IAAI,QAAQ,KAAK;EACtC,MAAM,OAAO,QAAQ,KAAK,SAAS,QAAQ,KAAK;AAChD,YAAU,OAAO,QAAQ;AACzB,YAAU,OAAO,QAAQ;AACzB,YAAU,EAAE,OAAO,QAAQ;AAC3B,YAAU,EAAE,OAAO,QAAQ;;AAE/B,QAAO;EACH;EACA;EACA;EACA;EACH;;AAEL,IAAM,qBAAN,cAAiC,kBAAkB;CAC/C,OAAO,KAAK;CACf,OAAO,WAAW;EACX,oBAAoB;EACpB,iBAAiB;EACjB,WAAW;GACP,eAAe;GACf,cAAc;GACjB;EACD,YAAY,EACR,SAAS;GACL,MAAM;GACN,YAAY;IACR;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACH;GACJ,EACJ;EACD,QAAQ;EACR,UAAU;EACV,eAAe;EACf,QAAQ;EACR,SAAS;EACT,WAAW;EACd;CACD,OAAO,cAAc;EACjB,cAAc,SAAO,SAAS;EAC9B,aAAa,SAAO,SAAS,aAAa,CAAC,KAAK,WAAW,aAAa,IAAI,CAAC,KAAK,WAAW,kBAAkB;EAClH;CACJ,OAAO,YAAY;EACZ,aAAa;EACb,SAAS,EACL,QAAQ;GACJ,QAAQ,EACJ,eAAgB,OAAO;IACnB,MAAM,OAAO,MAAM;AACnB,QAAI,KAAK,OAAO,UAAU,KAAK,SAAS,QAAQ;KAC5C,MAAM,EAAE,QAAQ,EAAE,YAAa,qBAAc,MAAM,OAAO;AAC1D,YAAO,KAAK,OAAO,KAAK,OAAO,MAAI;MAE/B,MAAM,QADO,MAAM,eAAe,EAAE,CACjB,WAAW,SAAS,EAAE;AACzC,aAAO;OACH,MAAM;OACN,WAAW,MAAM;OACjB,aAAa,MAAM;OACnB,WAAWI;OACX,WAAW,MAAM;OACL;OACZ,QAAQ,CAAC,MAAM,kBAAkB,EAAE;OACnC,OAAO;OACV;OACH;;AAEN,WAAO,EAAE;MAEhB;GACD,QAAS,GAAG,YAAY,QAAQ;AAC5B,WAAO,MAAM,qBAAqB,WAAW,MAAM;AACnD,WAAO,MAAM,QAAQ;;GAE5B,EACJ;EACJ;CACD,YAAY,OAAO,cAAa;AAC5B,QAAM,OAAO,aAAa;AAC1B,OAAK,sBAAsB;AAC3B,OAAK,cAAc;AACnB,OAAK,cAAc;AACnB,OAAK,UAAU;AACf,OAAK,UAAU;;CAEnB,aAAa;CAChB,MAAM,OAAO,OAAO;EACb,MAAM,OAAO,KAAK,YAAY,CAAC;EAC/B,MAAM,OAAO,KAAK;AAClB,MAAI,KAAK,aAAa,MAClB,MAAK,UAAU;OACZ;GACH,IAAI,UAAU,QAAI,CAAC,KAAKC;AACxB,OAAI,SAAS,KAAK,OAAO,EAAE;IACvB,MAAM,EAAE,MAAK,YAAa,KAAK;AAC/B,cAAU,QAAI,CAAC,iBAAiB,KAAKA,MAAI,IAAI;;GAEjD,IAAI,GAAG;AACP,QAAI,IAAI,OAAO,OAAO,QAAQ,OAAO,IAAI,MAAM,EAAE,EAC7C,MAAK,QAAQ,KAAK,OAAO,EAAE;;;CAI1C,eAAe;AACR,SAAO,UAAU,KAAK,QAAQ,WAAW,GAAG;;CAEnD,oBAAoB;AACb,SAAO,UAAU,KAAK,QAAQ,cAAc;;CAEnD,sBAAsB;EACf,IAAI,MAAM;EACV,IAAI,MAAM,CAAC;AACX,OAAI,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,KAAK,SAAS,QAAQ,EAAE,EAClD,KAAI,KAAK,MAAM,iBAAiB,EAAE,IAAI,KAAK,MAAM,eAAe,EAAE,CAAC,SAAS,KAAK,OAAO;GACpF,MAAM,aAAa,KAAK,MAAM,eAAe,EAAE,CAAC;GAChD,MAAM,WAAW,WAAW,cAAc;GAC1C,MAAM,gBAAgB,WAAW,mBAAmB;AACpD,SAAM,KAAK,IAAI,KAAK,SAAS;AAC7B,SAAM,KAAK,IAAI,KAAK,WAAW,cAAc;;AAGrD,SAAO;GACH,UAAU;GACV,eAAe,MAAM;GACxB;;CAER,OAAO,MAAM;EAEN,MAAM,EAAE,cADM,KAAK;EAEnB,MAAM,OAAO,KAAK;EAClB,MAAM,OAAO,KAAK;EAClB,MAAM,UAAU,KAAK,mBAAmB,GAAG,KAAK,aAAa,KAAK,GAAG,KAAK,QAAQ;EAClF,MAAM,UAAU,KAAK,KAAK,KAAK,IAAI,UAAU,OAAO,UAAU,OAAO,GAAG,WAAW,GAAG,EAAE;EACxF,MAAM,SAAS,KAAK,IAAI,aAAa,KAAK,QAAQ,QAAQ,QAAQ,EAAE,EAAE;EACtE,MAAM,cAAc,KAAK,eAAe,KAAK,MAAM;EACnD,MAAM,EAAE,eAAgB,aAAc,KAAK,qBAAqB;EAChE,MAAM,EAAE,QAAS,QAAS,SAAU,YAAa,kBAAkB,UAAU,eAAe,OAAO;EACnG,MAAM,YAAY,UAAU,QAAQ,WAAW;EAC/C,MAAM,aAAa,UAAU,SAAS,WAAW;EACjD,MAAM,YAAY,KAAK,IAAI,KAAK,IAAI,UAAU,UAAU,GAAG,GAAG,EAAE;EAChE,MAAM,cAAc,YAAY,KAAK,QAAQ,QAAQ,UAAU;EAC/D,MAAM,cAAc,KAAK,IAAI,cAAc,QAAQ,EAAE;EACrD,MAAM,gBAAgB,cAAc,eAAe,KAAK,+BAA+B;AACvF,OAAK,UAAU,UAAU;AACzB,OAAK,UAAU,UAAU;AACzB,OAAK,QAAQ,KAAK,gBAAgB;AAClC,OAAK,cAAc,cAAc,eAAe,KAAK,qBAAqB,KAAK,MAAM;AACrF,OAAK,cAAc,KAAK,IAAI,KAAK,cAAc,eAAe,aAAa,EAAE;AAC7E,OAAK,eAAe,MAAM,GAAG,KAAK,QAAQ,KAAK;;CAEtD,eAAe,GAAG,OAAO;EAClB,MAAM,OAAO,KAAK;EAClB,MAAM,OAAO,KAAK;EAClB,MAAM,gBAAgB,KAAK,mBAAmB;AAC9C,MAAI,SAAS,KAAK,UAAU,iBAAiB,CAAC,KAAK,MAAM,kBAAkB,EAAE,IAAI,KAAK,QAAQ,OAAO,QAAQ,KAAK,KAAK,GAAG,OACtH,QAAO;AAEX,SAAO,KAAK,uBAAuB,KAAK,QAAQ,KAAK,gBAAgB,IAAI;;CAE7E,eAAe,MAAM,OAAO,OAAO,MAAM;EACrC,MAAM,QAAQ,SAAS;EACvB,MAAM,QAAQ,KAAK;EACnB,MAAM,YAAY,MAAM;EAExB,MAAM,gBADO,MAAM,QACQ;EAC3B,MAAM,WAAW,UAAU,OAAO,UAAU,SAAS;EACrD,MAAM,WAAW,UAAU,MAAM,UAAU,UAAU;EACrD,MAAM,eAAe,SAAS,cAAc;EAC5C,MAAM,cAAc,eAAe,IAAI,KAAK;EAC5C,MAAM,cAAc,eAAe,IAAI,KAAK;EAC5C,MAAM,EAAE,eAAgB,mBAAoB,KAAK,kBAAkB,OAAO,KAAK;EAC/E,IAAI,aAAa,KAAK,cAAc;EACpC,IAAI;AACJ,OAAI,IAAI,GAAG,IAAI,OAAO,EAAE,EACpB,eAAc,KAAK,eAAe,GAAG,MAAM;AAE/C,OAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,EAAE,GAAE;GAClC,MAAM,gBAAgB,KAAK,eAAe,GAAG,MAAM;GACnD,MAAM,MAAM,KAAK;GACjB,MAAM,aAAa;IACf,GAAG,UAAU,KAAK;IAClB,GAAG,UAAU,KAAK;IAClB;IACA,UAAU,aAAa;IACvB;IACA;IACA;IACH;AACD,OAAI,eACA,YAAW,UAAU,iBAAiB,KAAK,0BAA0B,GAAG,IAAI,SAAS,WAAW,KAAK;AAEzG,iBAAc;AACd,QAAK,cAAc,KAAK,GAAG,YAAY,KAAK;;;CAGpD,iBAAiB;EACb,MAAM,OAAO,KAAK;EAClB,MAAM,WAAW,KAAK;EACtB,IAAI,QAAQ;EACZ,IAAI;AACJ,OAAI,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAI;GAChC,MAAM,QAAQ,KAAK,QAAQ;AAC3B,OAAI,UAAU,QAAQ,CAAC,MAAM,MAAM,IAAI,KAAK,MAAM,kBAAkB,EAAE,IAAI,CAAC,SAAS,GAAG,OACnF,UAAS,KAAK,IAAI,MAAM;;AAGhC,SAAO;;CAEX,uBAAuB,OAAO;EAC1B,MAAM,QAAQ,KAAK,YAAY;AAC/B,MAAI,QAAQ,KAAK,CAAC,MAAM,MAAM,CAC1B,QAAO,OAAO,KAAK,IAAI,MAAM,GAAG;AAEpC,SAAO;;CAEX,iBAAiB,SAAO;EACpB,MAAM,OAAO,KAAK;EAClB,MAAM,QAAQ,KAAK;EACnB,MAAM,SAAS,MAAM,KAAK,UAAU,EAAE;EACtC,MAAM,QAAQ,aAAa,KAAK,QAAQL,UAAQ,MAAM,QAAQ,OAAO;AACrE,SAAO;GACH,OAAO,OAAOA,YAAU;GACxB;GACH;;CAEL,kBAAkB,MAAM;EACpB,IAAI,MAAM;EACV,MAAM,QAAQ,KAAK;EACnB,IAAI,GAAG,MAAM,MAAM,YAAY;AAC/B,MAAI,CAAC,MACD;QAAI,IAAI,GAAG,OAAO,MAAM,KAAK,SAAS,QAAQ,IAAI,MAAM,EAAE,EACtD,KAAI,MAAM,iBAAiB,EAAE,EAAE;AAC3B,WAAO,MAAM,eAAe,EAAE;AAC9B,WAAO,KAAK;AACZ,iBAAa,KAAK;AAClB;;;AAIZ,MAAI,CAAC,KACD,QAAO;AAEX,OAAI,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,EAAE,GAAE;AACzC,aAAU,WAAW,0BAA0B,EAAE;AACjD,OAAI,QAAQ,gBAAgB,QACxB,OAAM,KAAK,IAAI,KAAK,QAAQ,eAAe,GAAG,QAAQ,oBAAoB,EAAE;;AAGpF,SAAO;;CAEX,aAAa,MAAM;EACf,IAAI,MAAM;AACV,OAAI,IAAI,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,EAAE,GAAE;GAC7C,MAAM,UAAU,KAAK,0BAA0B,EAAE;AACjD,SAAM,KAAK,IAAI,KAAK,QAAQ,UAAU,GAAG,QAAQ,eAAe,EAAE;;AAEtE,SAAO;;CAEd,qBAAqB,cAAc;EAC5B,IAAI,mBAAmB;AACvB,OAAI,IAAI,IAAI,GAAG,IAAI,cAAc,EAAE,EAC/B,KAAI,KAAK,MAAM,iBAAiB,EAAE,CAC9B,qBAAoB,KAAK,eAAe,EAAE;AAGlD,SAAO;;CAEd,eAAe,cAAc;AACtB,SAAO,KAAK,IAAI,eAAe,KAAK,MAAM,KAAK,SAAS,cAAc,QAAQ,EAAE,EAAE,EAAE;;CAE3F,gCAAgC;AACzB,SAAO,KAAK,qBAAqB,KAAK,MAAM,KAAK,SAAS,OAAO,IAAI;;;AAI7E,IAAM,iBAAN,cAA6B,kBAAkB;CAC3C,OAAO,KAAK;CACf,OAAO,WAAW;EACX,oBAAoB;EACpB,iBAAiB;EACjB,UAAU;EACV,UAAU;EACb;CACJ,OAAO,YAAY,EACZ,QAAQ;EACJ,SAAS,EACL,MAAM,YACT;EACD,SAAS,EACL,MAAM,UACT;EACJ,EACJ;CACD,aAAa;AACT,OAAK,sBAAsB;AAC3B,OAAK,qBAAqB;AAC1B,QAAM,YAAY;;CAEtB,OAAO,MAAM;EACT,MAAM,OAAO,KAAK;EAClB,MAAM,EAAE,SAAS,MAAO,MAAM,SAAS,EAAE,EAAG,aAAc;EAC1D,MAAM,qBAAqB,KAAK,MAAM;EACtC,IAAI,EAAE,OAAQ,UAAW,iCAAiC,MAAM,QAAQ,mBAAmB;AAC3F,OAAK,aAAa;AAClB,OAAK,aAAa;AAClB,MAAI,oBAAoB,KAAK,EAAE;AAC3B,WAAQ;AACR,WAAQ,OAAO;;AAEnB,OAAK,SAAS,KAAK;AACnB,OAAK,gBAAgB,KAAK;AAC1B,OAAK,aAAa,CAAC,CAAC,SAAS;AAC7B,OAAK,SAAS;EACd,MAAM,UAAU,KAAK,6BAA6B,KAAK;AACvD,MAAI,CAAC,KAAK,QAAQ,SACd,SAAQ,cAAc;AAE1B,UAAQ,UAAU,KAAK,QAAQ;AAC/B,OAAK,cAAc,MAAM,QAAW;GAChC,UAAU,CAAC;GACX;GACH,EAAE,KAAK;AACR,OAAK,eAAe,QAAQ,OAAO,OAAO,KAAK;;CAEnD,eAAe,QAAQ,OAAO,OAAO,MAAM;EACvC,MAAM,QAAQ,SAAS;EACvB,MAAM,EAAE,QAAS,QAAS,UAAW,aAAc,KAAK;EACxD,MAAM,EAAE,eAAgB,mBAAoB,KAAK,kBAAkB,OAAO,KAAK;EAC/E,MAAM,QAAQ,OAAO;EACrB,MAAM,QAAQ,OAAO;EACrB,MAAM,EAAE,UAAW,YAAa,KAAK;EACrC,MAAM,eAAe,SAAS,SAAS,GAAG,WAAW,OAAO;EAC5D,MAAM,eAAe,KAAK,MAAM,uBAAuB,SAAS,SAAS;EACzE,MAAM,MAAM,QAAQ;EACpB,MAAM,cAAc,OAAO;EAC3B,IAAI,aAAa,QAAQ,KAAK,KAAK,UAAU,QAAQ,EAAE;AACvD,OAAI,IAAI,IAAI,GAAG,IAAI,aAAa,EAAE,GAAE;GAChC,MAAM,QAAQ,OAAO;GACrB,MAAM,aAAa,eAAe,QAAQ,EAAE;AAC5C,OAAI,IAAI,SAAS,KAAK,KAAK;AACvB,eAAW,OAAO;AAClB;;GAEJ,MAAM,SAAS,KAAK,UAAU,EAAE;GAChC,MAAM,WAAW,cAAc,OAAO,OAAO;GAC7C,MAAM,SAAS,WAAW,SAAS,OAAO,iBAAiB,OAAO,QAAQ,EAAE;GAC5E,MAAM,SAAS,WAAW,SAAS,SAAS,WAAW,OAAO,cAAc,GAAG,OAAO,iBAAiB,WAAW,KAAK,WAAW,QAAQ,QAAQ,SAAS,GAAG,OAAO,QAAQ,EAAE;AAC/K,cAAW,OAAO,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI;AACpD,cAAW,OAAO,IAAI,KAAK,KAAK,IAAI,OAAO,SAAS,WAAW,OAAO,GAAG;AACzE,OAAI,SAAS;AACT,eAAW,SAAS;AACpB,eAAW,MAAM,SAAS,KAAK;;AAEnC,OAAI,eACA,YAAW,UAAU,iBAAiB,KAAK,0BAA0B,GAAG,MAAM,SAAS,WAAW,KAAK;AAE3G,OAAI,CAAC,aACD,MAAK,cAAc,OAAO,GAAG,YAAY,KAAK;AAElD,gBAAa;;;CAGxB,iBAAiB;EACV,MAAM,OAAO,KAAK;EAClB,MAAM,UAAU,KAAK;EACrB,MAAM,SAAS,QAAQ,WAAW,QAAQ,QAAQ,eAAe;EACjE,MAAM,OAAO,KAAK,QAAQ,EAAE;AAC5B,MAAI,CAAC,KAAK,OACN,QAAO;EAEX,MAAM,aAAa,KAAK,GAAG,KAAK,KAAK,0BAA0B,EAAE,CAAC;EAClE,MAAM,YAAY,KAAK,KAAK,SAAS,GAAG,KAAK,KAAK,0BAA0B,KAAK,SAAS,EAAE,CAAC;AAC7F,SAAO,KAAK,IAAI,QAAQ,YAAY,UAAU,GAAG;;CAErD,OAAO;EACH,MAAM,OAAO,KAAK;AAClB,OAAK,QAAQ,oBAAoB,KAAK,MAAM,WAAW,KAAK,OAAO,KAAK;AACxE,QAAM,MAAM;;;AAIpB,IAAM,sBAAN,cAAkC,kBAAkB;CAChD,OAAO,KAAK;CACf,OAAO,WAAW;EACX,iBAAiB;EACjB,WAAW;GACP,eAAe;GACf,cAAc;GACjB;EACD,YAAY,EACR,SAAS;GACL,MAAM;GACN,YAAY;IACR;IACA;IACA;IACA;IACA;IACA;IACH;GACJ,EACJ;EACD,WAAW;EACX,YAAY;EACf;CACJ,OAAO,YAAY;EACZ,aAAa;EACb,SAAS,EACL,QAAQ;GACJ,QAAQ,EACJ,eAAgB,OAAO;IACnB,MAAM,OAAO,MAAM;AACnB,QAAI,KAAK,OAAO,UAAU,KAAK,SAAS,QAAQ;KAC5C,MAAM,EAAE,QAAQ,EAAE,YAAa,qBAAc,MAAM,OAAO;AAC1D,YAAO,KAAK,OAAO,KAAK,OAAO,MAAI;MAE/B,MAAM,QADO,MAAM,eAAe,EAAE,CACjB,WAAW,SAAS,EAAE;AACzC,aAAO;OACH,MAAM;OACN,WAAW,MAAM;OACjB,aAAa,MAAM;OACnB,WAAWI;OACX,WAAW,MAAM;OACL;OACZ,QAAQ,CAAC,MAAM,kBAAkB,EAAE;OACnC,OAAO;OACV;OACH;;AAEN,WAAO,EAAE;MAEhB;GACD,QAAS,GAAG,YAAY,QAAQ;AAC5B,WAAO,MAAM,qBAAqB,WAAW,MAAM;AACnD,WAAO,MAAM,QAAQ;;GAE5B,EACJ;EACD,QAAQ,EACJ,GAAG;GACC,MAAM;GACN,YAAY,EACR,SAAS,OACZ;GACD,aAAa;GACb,MAAM,EACF,UAAU,MACb;GACD,aAAa,EACT,SAAS,OACZ;GACD,YAAY;GACf,EACJ;EACJ;CACD,YAAY,OAAO,cAAa;AAC5B,QAAM,OAAO,aAAa;AAC1B,OAAK,cAAc;AACnB,OAAK,cAAc;;CAEvB,iBAAiB,SAAO;EACpB,MAAM,OAAO,KAAK;EAClB,MAAM,QAAQ,KAAK;EACnB,MAAM,SAAS,MAAM,KAAK,UAAU,EAAE;EACtC,MAAM,QAAQ,aAAa,KAAK,QAAQJ,SAAO,GAAG,MAAM,QAAQ,OAAO;AACvE,SAAO;GACH,OAAO,OAAOA,YAAU;GACxB;GACH;;CAEL,gBAAgB,MAAM,MAAM,OAAO,OAAO;AACtC,SAAO,4BAA4B,KAAK,KAAK,CAAC,MAAM,MAAM,OAAO,MAAM;;CAE3E,OAAO,MAAM;EACT,MAAM,OAAO,KAAK,YAAY;AAC9B,OAAK,eAAe;AACpB,OAAK,eAAe,MAAM,GAAG,KAAK,QAAQ,KAAK;;CAEtD,YAAY;EACL,MAAM,OAAO,KAAK;EAClB,MAAM,QAAQ;GACV,KAAK,OAAO;GACZ,KAAK,OAAO;GACf;AACD,OAAK,KAAK,SAAS,SAAS,YAAQ;GAChC,MAAM,SAAS,KAAK,UAAUA,QAAM,CAAC;AACrC,OAAI,CAAC,MAAM,OAAO,IAAI,KAAK,MAAM,kBAAkBA,QAAM,EAAE;AACvD,QAAI,SAAS,MAAM,IACf,OAAM,MAAM;AAEhB,QAAI,SAAS,MAAM,IACf,OAAM,MAAM;;IAGtB;AACF,SAAO;;CAEd,gBAAgB;EACT,MAAM,QAAQ,KAAK;EACnB,MAAM,YAAY,MAAM;EACxB,MAAM,OAAO,MAAM;EACnB,MAAM,UAAU,KAAK,IAAI,UAAU,QAAQ,UAAU,MAAM,UAAU,SAAS,UAAU,IAAI;EAC5F,MAAM,cAAc,KAAK,IAAI,UAAU,GAAG,EAAE;EAC5C,MAAM,cAAc,KAAK,IAAI,KAAK,mBAAmB,cAAc,MAAM,KAAK,mBAAmB,GAAG,EAAE;EACtG,MAAM,gBAAgB,cAAc,eAAe,MAAM,wBAAwB;AACjF,OAAK,cAAc,cAAc,eAAe,KAAK;AACrD,OAAK,cAAc,KAAK,cAAc;;CAE1C,eAAe,MAAM,OAAO,OAAO,MAAM;EACrC,MAAM,QAAQ,SAAS;EACvB,MAAM,QAAQ,KAAK;EAEnB,MAAM,gBADO,MAAM,QACQ;EAC3B,MAAM,QAAQ,KAAK,YAAY;EAC/B,MAAM,UAAU,MAAM;EACtB,MAAM,UAAU,MAAM;EACtB,MAAM,oBAAoB,MAAM,cAAc,EAAE,GAAG,KAAM;EACzD,IAAI,QAAQ;EACZ,IAAI;EACJ,MAAM,eAAe,MAAM,KAAK,sBAAsB;AACtD,OAAI,IAAI,GAAG,IAAI,OAAO,EAAE,EACpB,UAAS,KAAK,cAAc,GAAG,MAAM,aAAa;AAEtD,OAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,KAAI;GAClC,MAAM,MAAM,KAAK;GACjB,IAAI,aAAa;GACjB,IAAI,WAAW,QAAQ,KAAK,cAAc,GAAG,MAAM,aAAa;GAChE,IAAI,cAAc,MAAM,kBAAkB,EAAE,GAAG,MAAM,8BAA8B,KAAK,UAAU,EAAE,CAAC,EAAE,GAAG;AAC1G,WAAQ;AACR,OAAI,OAAO;AACP,QAAI,cAAc,aACd,eAAc;AAElB,QAAI,cAAc,cACd,cAAa,WAAW;;GAGhC,MAAM,aAAa;IACf,GAAG;IACH,GAAG;IACH,aAAa;IACb;IACA;IACA;IACA,SAAS,KAAK,0BAA0B,GAAG,IAAI,SAAS,WAAW,KAAK;IAC3E;AACD,QAAK,cAAc,KAAK,GAAG,YAAY,KAAK;;;CAGpD,uBAAuB;EACnB,MAAM,OAAO,KAAK;EAClB,IAAI,QAAQ;AACZ,OAAK,KAAK,SAAS,SAAS,YAAQ;AAChC,OAAI,CAAC,MAAM,KAAK,UAAUA,QAAM,CAAC,EAAE,IAAI,KAAK,MAAM,kBAAkBA,QAAM,CACtE;IAEN;AACF,SAAO;;CAEd,cAAc,SAAO,MAAM,cAAc;AAClC,SAAO,KAAK,MAAM,kBAAkBA,QAAM,GAAG,UAAU,KAAK,0BAA0BA,SAAO,KAAK,CAAC,SAAS,aAAa,GAAG;;;AAIpI,IAAM,gBAAN,cAA4B,mBAAmB;CAC3C,OAAO,KAAK;CACf,OAAO,WAAW;EACX,QAAQ;EACR,UAAU;EACV,eAAe;EACf,QAAQ;EACX;;AAGL,IAAM,kBAAN,cAA8B,kBAAkB;CAC5C,OAAO,KAAK;CACf,OAAO,WAAW;EACX,oBAAoB;EACpB,iBAAiB;EACjB,WAAW;EACX,UAAU;EACV,UAAU,EACN,MAAM,EACF,MAAM,SACT,EACJ;EACJ;CACJ,OAAO,YAAY;EACZ,aAAa;EACb,QAAQ,EACJ,GAAG,EACC,MAAM,gBACT,EACJ;EACJ;CACJ,iBAAiB,SAAO;EACjB,MAAM,SAAS,KAAK,YAAY;EAChC,MAAM,SAAS,KAAK,UAAUA,QAAM;AACpC,SAAO;GACH,OAAO,OAAO,WAAW,CAACA;GAC1B,OAAO,KAAK,OAAO,iBAAiB,OAAO,OAAO,MAAM;GAC3D;;CAEL,gBAAgB,MAAM,MAAM,OAAO,OAAO;AACtC,SAAO,4BAA4B,KAAK,KAAK,CAAC,MAAM,MAAM,OAAO,MAAM;;CAE3E,OAAO,MAAM;EACT,MAAM,OAAO,KAAK;EAClB,MAAM,OAAO,KAAK;EAClB,MAAM,SAAS,KAAK,QAAQ,EAAE;EAC9B,MAAM,SAAS,KAAK,OAAO,WAAW;AACtC,OAAK,SAAS;AACd,MAAI,SAAS,UAAU;GACnB,MAAM,UAAU,KAAK,6BAA6B,KAAK;AACvD,OAAI,CAAC,KAAK,QAAQ,SACd,SAAQ,cAAc;GAE1B,MAAM,aAAa;IACf,OAAO;IACP,WAAW,OAAO,WAAW,OAAO;IACpC;IACH;AACD,QAAK,cAAc,MAAM,QAAW,YAAY,KAAK;;AAEzD,OAAK,eAAe,QAAQ,GAAG,OAAO,QAAQ,KAAK;;CAEvD,eAAe,QAAQ,OAAO,OAAO,MAAM;EACvC,MAAM,QAAQ,KAAK,YAAY;EAC/B,MAAM,QAAQ,SAAS;AACvB,OAAI,IAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,KAAI;GACtC,MAAM,QAAQ,OAAO;GACrB,MAAM,UAAU,KAAK,0BAA0B,GAAG,MAAM,SAAS,WAAW,KAAK;GACjF,MAAM,gBAAgB,MAAM,yBAAyB,GAAG,KAAK,UAAU,EAAE,CAAC,EAAE;GAC5E,MAAM,IAAI,QAAQ,MAAM,UAAU,cAAc;GAChD,MAAM,IAAI,QAAQ,MAAM,UAAU,cAAc;GAChD,MAAM,aAAa;IACf;IACA;IACA,OAAO,cAAc;IACrB,MAAM,MAAM,EAAE,IAAI,MAAM,EAAE;IAC1B;IACH;AACD,QAAK,cAAc,OAAO,GAAG,YAAY,KAAK;;;;AAK1D,IAAM,oBAAN,cAAgC,kBAAkB;CAC9C,OAAO,KAAK;CACf,OAAO,WAAW;EACX,oBAAoB;EACpB,iBAAiB;EACjB,UAAU;EACV,MAAM;EACT;CACJ,OAAO,YAAY;EACZ,aAAa,EACT,MAAM,SACT;EACD,QAAQ;GACJ,GAAG,EACC,MAAM,UACT;GACD,GAAG,EACC,MAAM,UACT;GACJ;EACJ;CACJ,iBAAiB,SAAO;EACjB,MAAM,OAAO,KAAK;EAClB,MAAM,SAAS,KAAK,MAAM,KAAK,UAAU,EAAE;EAC3C,MAAM,EAAE,QAAS,WAAY;EAC7B,MAAM,SAAS,KAAK,UAAUA,QAAM;EACpC,MAAM,IAAI,OAAO,iBAAiB,OAAO,EAAE;EAC3C,MAAM,IAAI,OAAO,iBAAiB,OAAO,EAAE;AAC3C,SAAO;GACH,OAAO,OAAOA,YAAU;GACxB,OAAO,MAAM,IAAI,OAAO,IAAI;GAC/B;;CAEL,OAAO,MAAM;EACT,MAAM,OAAO,KAAK;EAClB,MAAM,EAAE,MAAM,SAAS,EAAE,KAAM;EAC/B,MAAM,qBAAqB,KAAK,MAAM;EACtC,IAAI,EAAE,OAAQ,UAAW,iCAAiC,MAAM,QAAQ,mBAAmB;AAC3F,OAAK,aAAa;AAClB,OAAK,aAAa;AAClB,MAAI,oBAAoB,KAAK,EAAE;AAC3B,WAAQ;AACR,WAAQ,OAAO;;AAEnB,MAAI,KAAK,QAAQ,UAAU;AACvB,OAAI,CAAC,KAAK,mBACN,MAAK,aAAa;GAEtB,MAAM,EAAE,SAAS,MAAO,aAAc;AACtC,QAAK,SAAS,KAAK;AACnB,QAAK,gBAAgB,KAAK;AAC1B,QAAK,aAAa,CAAC,CAAC,SAAS;AAC7B,QAAK,SAAS;GACd,MAAM,UAAU,KAAK,6BAA6B,KAAK;AACvD,WAAQ,UAAU,KAAK,QAAQ;AAC/B,QAAK,cAAc,MAAM,QAAW;IAChC,UAAU,CAAC;IACX;IACH,EAAE,KAAK;aACD,KAAK,oBAAoB;AAChC,UAAO,KAAK;AACZ,QAAK,qBAAqB;;AAE9B,OAAK,eAAe,QAAQ,OAAO,OAAO,KAAK;;CAEnD,cAAc;EACV,MAAM,EAAE,aAAc,KAAK;AAC3B,MAAI,CAAC,KAAK,sBAAsB,SAC5B,MAAK,qBAAqB,KAAK,MAAM,SAAS,WAAW,OAAO;AAEpE,QAAM,aAAa;;CAEvB,eAAe,QAAQ,OAAO,OAAO,MAAM;EACvC,MAAM,QAAQ,SAAS;EACvB,MAAM,EAAE,QAAS,QAAS,UAAW,aAAc,KAAK;EACxD,MAAM,YAAY,KAAK,0BAA0B,OAAO,KAAK;EAC7D,MAAM,gBAAgB,KAAK,iBAAiB,UAAU;EACtD,MAAM,iBAAiB,KAAK,eAAe,MAAM,cAAc;EAC/D,MAAM,QAAQ,OAAO;EACrB,MAAM,QAAQ,OAAO;EACrB,MAAM,EAAE,UAAW,YAAa,KAAK;EACrC,MAAM,eAAe,SAAS,SAAS,GAAG,WAAW,OAAO;EAC5D,MAAM,eAAe,KAAK,MAAM,uBAAuB,SAAS,SAAS;EACzE,IAAI,aAAa,QAAQ,KAAK,KAAK,UAAU,QAAQ,EAAE;AACvD,OAAI,IAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,EAAE,GAAE;GACtC,MAAM,QAAQ,OAAO;GACrB,MAAM,SAAS,KAAK,UAAU,EAAE;GAChC,MAAM,aAAa,eAAe,QAAQ,EAAE;GAC5C,MAAM,WAAW,cAAc,OAAO,OAAO;GAC7C,MAAM,SAAS,WAAW,SAAS,OAAO,iBAAiB,OAAO,QAAQ,EAAE;GAC5E,MAAM,SAAS,WAAW,SAAS,SAAS,WAAW,OAAO,cAAc,GAAG,OAAO,iBAAiB,WAAW,KAAK,WAAW,QAAQ,QAAQ,SAAS,GAAG,OAAO,QAAQ,EAAE;AAC/K,cAAW,OAAO,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI;AACpD,cAAW,OAAO,IAAI,KAAK,KAAK,IAAI,OAAO,SAAS,WAAW,OAAO,GAAG;AACzE,OAAI,SAAS;AACT,eAAW,SAAS;AACpB,eAAW,MAAM,SAAS,KAAK;;AAEnC,OAAI,eACA,YAAW,UAAU,iBAAiB,KAAK,0BAA0B,GAAG,MAAM,SAAS,WAAW,KAAK;AAE3G,OAAI,CAAC,aACD,MAAK,cAAc,OAAO,GAAG,YAAY,KAAK;AAElD,gBAAa;;AAEjB,OAAK,oBAAoB,eAAe,MAAM,UAAU;;CAE/D,iBAAiB;EACV,MAAM,OAAO,KAAK;EAClB,MAAM,OAAO,KAAK,QAAQ,EAAE;AAC5B,MAAI,CAAC,KAAK,QAAQ,UAAU;GACxB,IAAI,MAAM;AACV,QAAI,IAAI,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,EAAE,EACnC,OAAM,KAAK,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,0BAA0B,EAAE,CAAC,GAAG,EAAE;AAE5E,UAAO,MAAM,KAAK;;EAEtB,MAAM,UAAU,KAAK;EACrB,MAAM,SAAS,QAAQ,WAAW,QAAQ,QAAQ,eAAe;AACjE,MAAI,CAAC,KAAK,OACN,QAAO;EAEX,MAAM,aAAa,KAAK,GAAG,KAAK,KAAK,0BAA0B,EAAE,CAAC;EAClE,MAAM,YAAY,KAAK,KAAK,SAAS,GAAG,KAAK,KAAK,0BAA0B,KAAK,SAAS,EAAE,CAAC;AAC7F,SAAO,KAAK,IAAI,QAAQ,YAAY,UAAU,GAAG;;;AAIzD,IAAI,cAA2B,uBAAO,OAAO;CAC7C,WAAW;CACI;CACG;CACE;CACJ;CACD;CACM;CACJ;CACE;CAClB,CAAC;;;;;GAME,SAAS,WAAW;AACpB,OAAM,IAAI,MAAM,kFAAkF;;;;;;;GAOlG,IAAM,kBAAN,MAAM,gBAAgB;;;;;;;;;;IAUpB,OAAO,SAAS,SAAS;AACvB,SAAO,OAAO,gBAAgB,WAAW,QAAQ;;CAErD;CACA,YAAY,SAAQ;AAChB,OAAK,UAAU,WAAW,EAAE;;CAGhC,OAAO;CACP,UAAU;AACN,SAAO,UAAU;;CAErB,QAAQ;AACJ,SAAO,UAAU;;CAErB,SAAS;AACL,SAAO,UAAU;;CAErB,MAAM;AACF,SAAO,UAAU;;CAErB,OAAO;AACH,SAAO,UAAU;;CAErB,UAAU;AACN,SAAO,UAAU;;CAErB,QAAQ;AACJ,SAAO,UAAU;;;AAGzB,IAAI,WAAW,EACX,OAAO,iBACV;AAED,SAAS,aAAa,SAAS,MAAM,OAAO,WAAW;CACnD,MAAM,EAAE,YAAa,MAAO,YAAa;CACzC,MAAM,SAAS,WAAW,YAAY;CACtC,MAAM,WAAW,QAAQ,UAAU,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,WAAW,OAAO;AACvG,KAAI,UAAU,SAAS,OAAO,QAAQ,SAAS,OAAO,WAAW,KAAK,QAAQ;EAC1E,MAAM,eAAe,OAAO,iBAAiB,gBAAgB;AAC7D,MAAI,CAAC,WAAW;GACZ,MAAM,SAAS,aAAa,MAAM,MAAM,MAAM;AAC9C,OAAI,UAAU;IACV,MAAM,EAAE,WAAY,WAAW;IAC/B,MAAM,EAAE,YAAa;IACrB,MAAM,sBAAsB,QAAQ,MAAM,GAAG,OAAO,KAAK,EAAE,CAAC,SAAS,CAAC,WAAW,UAAQ,CAAC,cAAc,MAAM,OAAO,MAAM,CAAC;AAC5H,WAAO,MAAM,KAAK,IAAI,GAAG,oBAAoB;IAC7C,MAAM,sBAAsB,QAAQ,MAAM,OAAO,GAAG,CAAC,WAAW,UAAQ,CAAC,cAAc,MAAM,OAAO,MAAM,CAAC;AAC3G,WAAO,MAAM,KAAK,IAAI,GAAG,oBAAoB;;AAEjD,UAAO;aACA,WAAW,gBAAgB;GAClC,MAAM,KAAK,KAAK;GAChB,MAAM,QAAQ,OAAO,GAAG,aAAa,cAAc,GAAG,SAAS,KAAK;AACpE,OAAI,OAAO;IACP,MAAM,QAAQ,aAAa,MAAM,MAAM,QAAQ,MAAM;IACrD,MAAM,MAAM,aAAa,MAAM,MAAM,QAAQ,MAAM;AACnD,WAAO;KACH,IAAI,MAAM;KACV,IAAI,IAAI;KACX;;;;AAIb,QAAO;EACH,IAAI;EACJ,IAAI,KAAK,SAAS;EACrB;;AAEJ,SAAS,yBAAyB,OAAO,MAAM,UAAU,SAAS,WAAW;CAC1E,MAAM,WAAW,MAAM,8BAA8B;CACrD,MAAM,QAAQ,SAAS;AACvB,MAAI,IAAI,IAAI,GAAG,OAAO,SAAS,QAAQ,IAAI,MAAM,EAAE,GAAE;EACjD,MAAM,EAAE,gBAAQ,SAAU,SAAS;EACnC,MAAM,EAAE,IAAK,OAAQ,aAAa,SAAS,IAAI,MAAM,OAAO,UAAU;AACtE,OAAI,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE,GAAE;GACzB,MAAM,UAAU,KAAK;AACrB,OAAI,CAAC,QAAQ,KACT,SAAQ,SAASA,SAAO,EAAE;;;;AAKzC,SAAS,yBAAyB,MAAM;CACrC,MAAM,OAAO,KAAK,QAAQ,IAAI,KAAK;CACnC,MAAM,OAAO,KAAK,QAAQ,IAAI,KAAK;AACnC,QAAO,SAAS,KAAK,KAAK;EACtB,MAAM,SAAS,OAAO,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG;EAChD,MAAM,SAAS,OAAO,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE,GAAG;AAChD,SAAO,KAAK,KAAK,KAAK,IAAI,QAAQ,EAAE,GAAG,KAAK,IAAI,QAAQ,EAAE,CAAC;;;AAGlE,SAAS,kBAAkB,OAAO,UAAU,MAAM,kBAAkB,kBAAkB;CACnF,MAAM,QAAQ,EAAE;AAChB,KAAI,CAAC,oBAAoB,CAAC,MAAM,cAAc,SAAS,CACnD,QAAO;CAEX,MAAM,iBAAiB,SAAS,SAAS,cAAc,SAAO;AAC1D,MAAI,CAAC,oBAAoB,CAAC,eAAe,SAAS,MAAM,WAAW,EAAE,CACjE;AAEJ,MAAI,QAAQ,QAAQ,SAAS,GAAG,SAAS,GAAG,iBAAiB,CACzD,OAAM,KAAK;GACP;GACA;GACA;GACH,CAAC;;AAGV,0BAAyB,OAAO,MAAM,UAAU,gBAAgB,KAAK;AACrE,QAAO;;AAEV,SAAS,sBAAsB,OAAO,UAAU,MAAM,kBAAkB;CACrE,IAAI,QAAQ,EAAE;CACd,SAAS,eAAe,SAAS,cAAc,SAAO;EAClD,MAAM,EAAE,YAAa,aAAc,QAAQ,SAAS,CAChD,cACA,WACH,EAAE,iBAAiB;EACpB,MAAM,EAAE,UAAW,kBAAkB,SAAS;GAC1C,GAAG,SAAS;GACZ,GAAG,SAAS;GACf,CAAC;AACF,MAAI,cAAc,OAAO,YAAY,SAAS,CAC1C,OAAM,KAAK;GACP;GACA;GACA;GACH,CAAC;;AAGV,0BAAyB,OAAO,MAAM,UAAU,eAAe;AAC/D,QAAO;;AAEV,SAAS,yBAAyB,OAAO,UAAU,MAAM,WAAW,kBAAkB,kBAAkB;CACrG,IAAI,QAAQ,EAAE;CACd,MAAM,iBAAiB,yBAAyB,KAAK;CACrD,IAAI,cAAc,OAAO;CACzB,SAAS,eAAe,SAAS,cAAc,SAAO;EAClD,MAAMM,YAAU,QAAQ,QAAQ,SAAS,GAAG,SAAS,GAAG,iBAAiB;AACzE,MAAI,aAAa,CAACA,UACd;EAEJ,MAAM,SAAS,QAAQ,eAAe,iBAAiB;AAEvD,MAAI,EADgB,CAAC,CAAC,oBAAoB,MAAM,cAAc,OAAO,KACjD,CAACA,UACjB;EAEJ,MAAM,WAAW,eAAe,UAAU,OAAO;AACjD,MAAI,WAAW,aAAa;AACxB,WAAQ,CACJ;IACI;IACA;IACA;IACH,CACJ;AACD,iBAAc;aACP,aAAa,YACpB,OAAM,KAAK;GACP;GACA;GACA;GACH,CAAC;;AAGV,0BAAyB,OAAO,MAAM,UAAU,eAAe;AAC/D,QAAO;;AAEV,SAAS,gBAAgB,OAAO,UAAU,MAAM,WAAW,kBAAkB,kBAAkB;AAC5F,KAAI,CAAC,oBAAoB,CAAC,MAAM,cAAc,SAAS,CACnD,QAAO,EAAE;AAEb,QAAO,SAAS,OAAO,CAAC,YAAY,sBAAsB,OAAO,UAAU,MAAM,iBAAiB,GAAG,yBAAyB,OAAO,UAAU,MAAM,WAAW,kBAAkB,iBAAiB;;AAEtM,SAAS,aAAa,OAAO,UAAU,MAAM,WAAW,kBAAkB;CACvE,MAAM,QAAQ,EAAE;CAChB,MAAM,cAAc,SAAS,MAAM,aAAa;CAChD,IAAI,iBAAiB;AACrB,0BAAyB,OAAO,MAAM,WAAW,SAAS,cAAc,YAAQ;AAC5E,MAAI,QAAQ,gBAAgB,QAAQ,aAAa,SAAS,OAAO,iBAAiB,EAAE;AAChF,SAAM,KAAK;IACP;IACA;IACA;IACH,CAAC;AACF,oBAAiB,kBAAkB,QAAQ,QAAQ,SAAS,GAAG,SAAS,GAAG,iBAAiB;;GAElG;AACF,KAAI,aAAa,CAAC,eACd,QAAO,EAAE;AAEb,QAAO;;AAEV,IAAI,cAAc;CACf;CACA,OAAO;EACV,MAAO,OAAO,GAAG,SAAS,kBAAkB;GACjC,MAAM,WAAW,oBAAoB,GAAG,MAAM;GAC9C,MAAM,OAAO,QAAQ,QAAQ;GAC7B,MAAM,mBAAmB,QAAQ,oBAAoB;GACrD,MAAM,QAAQ,QAAQ,YAAY,kBAAkB,OAAO,UAAU,MAAM,kBAAkB,iBAAiB,GAAG,gBAAgB,OAAO,UAAU,MAAM,OAAO,kBAAkB,iBAAiB;GAClM,MAAMJ,aAAW,EAAE;AACnB,OAAI,CAAC,MAAM,OACP,QAAO,EAAE;AAEb,SAAM,8BAA8B,CAAC,SAAS,SAAO;IACjD,MAAMF,UAAQ,MAAM,GAAG;IACvB,MAAM,UAAU,KAAK,KAAKA;AAC1B,QAAI,WAAW,CAAC,QAAQ,KACpB,YAAS,KAAK;KACV;KACA,cAAc,KAAK;KACnB;KACH,CAAC;KAER;AACF,UAAOE;;EAElB,QAAS,OAAO,GAAG,SAAS,kBAAkB;GACnC,MAAM,WAAW,oBAAoB,GAAG,MAAM;GAC9C,MAAM,OAAO,QAAQ,QAAQ;GAC7B,MAAM,mBAAmB,QAAQ,oBAAoB;GACrD,IAAI,QAAQ,QAAQ,YAAY,kBAAkB,OAAO,UAAU,MAAM,kBAAkB,iBAAiB,GAAG,gBAAgB,OAAO,UAAU,MAAM,OAAO,kBAAkB,iBAAiB;AAChM,OAAI,MAAM,SAAS,GAAG;IAClB,MAAM,eAAe,MAAM,GAAG;IAC9B,MAAM,OAAO,MAAM,eAAe,aAAa,CAAC;AAChD,YAAQ,EAAE;AACV,SAAI,IAAI,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,EAC9B,OAAM,KAAK;KACP,SAAS,KAAK;KACd;KACA,OAAO;KACV,CAAC;;AAGV,UAAO;;EAElB,MAAO,OAAO,GAAG,SAAS,kBAAkB;GACjC,MAAM,WAAW,oBAAoB,GAAG,MAAM;GAC9C,MAAM,OAAO,QAAQ,QAAQ;GAC7B,MAAM,mBAAmB,QAAQ,oBAAoB;AACrD,UAAO,kBAAkB,OAAO,UAAU,MAAM,kBAAkB,iBAAiB;;EAE9F,QAAS,OAAO,GAAG,SAAS,kBAAkB;GACnC,MAAM,WAAW,oBAAoB,GAAG,MAAM;GAC9C,MAAM,OAAO,QAAQ,QAAQ;GAC7B,MAAM,mBAAmB,QAAQ,oBAAoB;AACrD,UAAO,gBAAgB,OAAO,UAAU,MAAM,QAAQ,WAAW,kBAAkB,iBAAiB;;EAE/G,EAAG,OAAO,GAAG,SAAS,kBAAkB;GAC7B,MAAM,WAAW,oBAAoB,GAAG,MAAM;AAC9C,UAAO,aAAa,OAAO,UAAU,KAAK,QAAQ,WAAW,iBAAiB;;EAEzF,EAAG,OAAO,GAAG,SAAS,kBAAkB;GAC7B,MAAM,WAAW,oBAAoB,GAAG,MAAM;AAC9C,UAAO,aAAa,OAAO,UAAU,KAAK,QAAQ,WAAW,iBAAiB;;EAErF;CACJ;AAED,IAAM,mBAAmB;CACrB;CACA;CACA;CACA;CACH;AACD,SAAS,iBAAiB,OAAO,UAAU;AACvC,QAAO,MAAM,QAAQ,MAAI,EAAE,QAAQ,SAAS;;AAEhD,SAAS,4BAA4B,OAAO,MAAM;AAC9C,QAAO,MAAM,QAAQ,MAAI,iBAAiB,QAAQ,EAAE,IAAI,KAAK,MAAM,EAAE,IAAI,SAAS,KAAK;;AAE3F,SAAS,aAAa,OAAO,SAAS;AAClC,QAAO,MAAM,MAAM,GAAG,MAAI;EACtB,MAAM,KAAK,UAAU,IAAI;EACzB,MAAM,KAAK,UAAU,IAAI;AACzB,SAAO,GAAG,WAAW,GAAG,SAAS,GAAG,QAAQ,GAAG,QAAQ,GAAG,SAAS,GAAG;GACxE;;AAEN,SAAS,UAAU,OAAO;CACtB,MAAM,cAAc,EAAE;CACtB,IAAI,GAAG,MAAM,KAAK,KAAK,OAAO;AAC9B,MAAI,IAAI,GAAG,QAAQ,SAAS,EAAE,EAAE,QAAQ,IAAI,MAAM,EAAE,GAAE;AAClD,QAAM,MAAM;AACZ,GAAC,CAAE,UAAU,KAAM,SAAS,CAAE,OAAQ,cAAa,MAAU;AAC7D,cAAY,KAAK;GACb,OAAO;GACP;GACA;GACA,YAAY,IAAI,cAAc;GAC9B,QAAQ,IAAI;GACZ,OAAO,SAAS,MAAM;GACtB;GACH,CAAC;;AAEN,QAAO;;AAEX,SAAS,YAAY,WAAS;CAC1B,MAAM,SAAS,EAAE;AACjB,MAAK,MAAM,QAAQK,WAAQ;EACvB,MAAM,EAAE,OAAQ,KAAM,gBAAiB;AACvC,MAAI,CAAC,SAAS,CAAC,iBAAiB,SAAS,IAAI,CACzC;EAEJ,MAAM,SAAS,OAAO,WAAW,OAAO,SAAS;GAC7C,OAAO;GACP,QAAQ;GACR,QAAQ;GACR,MAAM;GACT;AACD,SAAO;AACP,SAAO,UAAU;;AAErB,QAAO;;AAEV,SAAS,cAAc,WAAS,QAAQ;CACrC,MAAM,SAAS,YAAYA,UAAQ;CACnC,MAAM,EAAE,cAAe,kBAAmB;CAC1C,IAAI,GAAG,MAAM;AACb,MAAI,IAAI,GAAG,OAAOA,UAAQ,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC5C,WAASA,UAAQ;EACjB,MAAM,EAAE,aAAc,OAAO;EAC7B,MAAM,QAAQ,OAAO,OAAO;EAC5B,MAAM,SAAS,SAAS,OAAO,cAAc,MAAM;AACnD,MAAI,OAAO,YAAY;AACnB,UAAO,QAAQ,SAAS,SAAS,eAAe,YAAY,OAAO;AACnE,UAAO,SAAS;SACb;AACH,UAAO,QAAQ;AACf,UAAO,SAAS,SAAS,SAAS,gBAAgB,YAAY,OAAO;;;AAG7E,QAAO;;AAEX,SAAS,iBAAiB,OAAO;CAC7B,MAAM,cAAc,UAAU,MAAM;CACpC,MAAM,WAAW,aAAa,YAAY,QAAQ,SAAO,KAAK,IAAI,SAAS,EAAE,KAAK;CAClF,MAAM,OAAO,aAAa,iBAAiB,aAAa,OAAO,EAAE,KAAK;CACtE,MAAM,QAAQ,aAAa,iBAAiB,aAAa,QAAQ,CAAC;CAClE,MAAM,MAAM,aAAa,iBAAiB,aAAa,MAAM,EAAE,KAAK;CACpE,MAAM,SAAS,aAAa,iBAAiB,aAAa,SAAS,CAAC;CACpE,MAAM,mBAAmB,4BAA4B,aAAa,IAAI;CACtE,MAAM,iBAAiB,4BAA4B,aAAa,IAAI;AACpE,QAAO;EACH;EACA,YAAY,KAAK,OAAO,IAAI;EAC5B,gBAAgB,MAAM,OAAO,eAAe,CAAC,OAAO,OAAO,CAAC,OAAO,iBAAiB;EACpF,WAAW,iBAAiB,aAAa,YAAY;EACrD,UAAU,KAAK,OAAO,MAAM,CAAC,OAAO,eAAe;EACnD,YAAY,IAAI,OAAO,OAAO,CAAC,OAAO,iBAAiB;EAC1D;;AAEL,SAAS,eAAe,YAAY,WAAW,GAAG,GAAG;AACjD,QAAO,KAAK,IAAI,WAAW,IAAI,UAAU,GAAG,GAAG,KAAK,IAAI,WAAW,IAAI,UAAU,GAAG;;AAExF,SAAS,iBAAiB,YAAY,YAAY;AAC9C,YAAW,MAAM,KAAK,IAAI,WAAW,KAAK,WAAW,IAAI;AACzD,YAAW,OAAO,KAAK,IAAI,WAAW,MAAM,WAAW,KAAK;AAC5D,YAAW,SAAS,KAAK,IAAI,WAAW,QAAQ,WAAW,OAAO;AAClE,YAAW,QAAQ,KAAK,IAAI,WAAW,OAAO,WAAW,MAAM;;AAEnE,SAAS,WAAW,WAAW,QAAQ,QAAQ,QAAQ;CACnD,MAAM,EAAE,KAAM,QAAS;CACvB,MAAM,aAAa,UAAU;AAC7B,KAAI,CAAC,SAAS,IAAI,EAAE;AAChB,MAAI,OAAO,KACP,WAAU,QAAQ,OAAO;EAE7B,MAAM,QAAQ,OAAO,OAAO,UAAU;GAClC,MAAM;GACN,OAAO;GACV;AACD,QAAM,OAAO,KAAK,IAAI,MAAM,MAAM,OAAO,aAAa,IAAI,SAAS,IAAI,MAAM;AAC7E,SAAO,OAAO,MAAM,OAAO,MAAM;AACjC,YAAU,QAAQ,OAAO;;AAE7B,KAAI,IAAI,WACJ,kBAAiB,YAAY,IAAI,YAAY,CAAC;CAElD,MAAM,WAAW,KAAK,IAAI,GAAG,OAAO,aAAa,eAAe,YAAY,WAAW,QAAQ,QAAQ,CAAC;CACxG,MAAM,YAAY,KAAK,IAAI,GAAG,OAAO,cAAc,eAAe,YAAY,WAAW,OAAO,SAAS,CAAC;CAC1G,MAAM,eAAe,aAAa,UAAU;CAC5C,MAAM,gBAAgB,cAAc,UAAU;AAC9C,WAAU,IAAI;AACd,WAAU,IAAI;AACd,QAAO,OAAO,aAAa;EACvB,MAAM;EACN,OAAO;EACV,GAAG;EACA,MAAM;EACN,OAAO;EACV;;AAEL,SAAS,iBAAiB,WAAW;CACjC,MAAM,aAAa,UAAU;CAC7B,SAAS,UAAU,KAAK;EACpB,MAAM,SAAS,KAAK,IAAI,WAAW,OAAO,UAAU,MAAM,EAAE;AAC5D,YAAU,QAAQ;AAClB,SAAO;;AAEX,WAAU,KAAK,UAAU,MAAM;AAC/B,WAAU,KAAK,UAAU,OAAO;AAChC,WAAU,QAAQ;AAClB,WAAU,SAAS;;AAEvB,SAAS,WAAW,YAAY,WAAW;CACvC,MAAM,aAAa,UAAU;CAC7B,SAAS,mBAAmB,aAAW;EACnC,MAAM,SAAS;GACX,MAAM;GACN,KAAK;GACL,OAAO;GACP,QAAQ;GACX;AACD,cAAU,SAAS,QAAM;AACrB,UAAO,OAAO,KAAK,IAAI,UAAU,MAAM,WAAW,KAAK;IACzD;AACF,SAAO;;AAEX,QAAO,aAAa,mBAAmB,CACnC,QACA,QACH,CAAC,GAAG,mBAAmB,CACpB,OACA,SACH,CAAC;;AAEN,SAAS,SAAS,OAAO,WAAW,QAAQ,QAAQ;CAChD,MAAM,aAAa,EAAE;CACrB,IAAI,GAAG,MAAM,QAAQ,KAAK,OAAO;AACjC,MAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,QAAQ,GAAG,IAAI,MAAM,EAAE,GAAE;AACrD,WAAS,MAAM;AACf,QAAM,OAAO;AACb,MAAI,OAAO,OAAO,SAAS,UAAU,GAAG,OAAO,UAAU,UAAU,GAAG,WAAW,OAAO,YAAY,UAAU,CAAC;EAC/G,MAAM,EAAE,MAAO,UAAW,WAAW,WAAW,QAAQ,QAAQ,OAAO;AACvE,WAAS,QAAQ,WAAW;AAC5B,YAAU,WAAW;AACrB,MAAI,CAAC,IAAI,SACL,YAAW,KAAK,OAAO;;AAG/B,QAAO,SAAS,SAAS,YAAY,WAAW,QAAQ,OAAO,IAAI;;AAEvE,SAAS,WAAW,KAAK,MAAM,KAAK,OAAO,QAAQ;AAC/C,KAAI,MAAM;AACV,KAAI,OAAO;AACX,KAAI,QAAQ,OAAO;AACnB,KAAI,SAAS,MAAM;AACnB,KAAI,QAAQ;AACZ,KAAI,SAAS;;AAEjB,SAAS,WAAW,OAAO,WAAW,QAAQ,QAAQ;CAClD,MAAM,cAAc,OAAO;CAC3B,IAAI,EAAE,GAAI,MAAO;AACjB,MAAK,MAAM,UAAU,OAAM;EACvB,MAAM,MAAM,OAAO;EACnB,MAAM,QAAQ,OAAO,OAAO,UAAU;GAClC,OAAO;GACP,QAAQ;GACR,QAAQ;GACX;EACD,MAAM,SAAS,OAAO,cAAc,MAAM,UAAU;AACpD,MAAI,OAAO,YAAY;GACnB,MAAM,QAAQ,UAAU,IAAI;GAC5B,MAAM,SAAS,MAAM,QAAQ,IAAI;AACjC,OAAI,QAAQ,MAAM,MAAM,CACpB,KAAI,MAAM;AAEd,OAAI,IAAI,SACJ,YAAW,KAAK,YAAY,MAAM,GAAG,OAAO,aAAa,YAAY,QAAQ,YAAY,MAAM,OAAO;OAEtG,YAAW,KAAK,UAAU,OAAO,MAAM,QAAQ,GAAG,OAAO,OAAO;AAEpE,SAAM,QAAQ;AACd,SAAM,UAAU;AAChB,OAAI,IAAI;SACL;GACH,MAAM,SAAS,UAAU,IAAI;GAC7B,MAAM,QAAQ,MAAM,QAAQ,IAAI;AAChC,OAAI,QAAQ,MAAM,MAAM,CACpB,KAAI,MAAM;AAEd,OAAI,IAAI,SACJ,YAAW,KAAK,GAAG,YAAY,KAAK,OAAO,OAAO,cAAc,YAAY,SAAS,YAAY,IAAI;OAErG,YAAW,KAAK,GAAG,UAAU,MAAM,MAAM,QAAQ,OAAO,OAAO;AAEnE,SAAM,QAAQ;AACd,SAAM,UAAU;AAChB,OAAI,IAAI;;;AAGhB,WAAU,IAAI;AACd,WAAU,IAAI;;AAElB,IAAI,UAAU;CACb,OAAQ,OAAO,MAAM;AACd,MAAI,CAAC,MAAM,MACP,OAAM,QAAQ,EAAE;AAEpB,OAAK,WAAW,KAAK,YAAY;AACjC,OAAK,WAAW,KAAK,YAAY;AACjC,OAAK,SAAS,KAAK,UAAU;AAC7B,OAAK,UAAU,KAAK,WAAW,WAAW;AACtC,UAAO,CACH;IACI,GAAG;IACH,KAAM,WAAW;AACb,UAAK,KAAK,UAAU;;IAE3B,CACJ;;AAEL,QAAM,MAAM,KAAK,KAAK;;CAE7B,UAAW,OAAO,YAAY;EACvB,MAAMP,UAAQ,MAAM,QAAQ,MAAM,MAAM,QAAQ,WAAW,GAAG;AAC9D,MAAIA,YAAU,GACV,OAAM,MAAM,OAAOA,SAAO,EAAE;;CAGvC,UAAW,OAAO,MAAM,SAAS;AAC1B,OAAK,WAAW,QAAQ;AACxB,OAAK,WAAW,QAAQ;AACxB,OAAK,SAAS,QAAQ;;CAE7B,OAAQ,OAAO,OAAO,QAAQ,YAAY;AACnC,MAAI,CAAC,MACD;EAEJ,MAAM,UAAU,UAAU,MAAM,QAAQ,OAAO,QAAQ;EACvD,MAAM,iBAAiB,KAAK,IAAI,QAAQ,QAAQ,OAAO,EAAE;EACzD,MAAM,kBAAkB,KAAK,IAAI,SAAS,QAAQ,QAAQ,EAAE;EAC5D,MAAM,QAAQ,iBAAiB,MAAM,MAAM;EAC3C,MAAM,gBAAgB,MAAM;EAC5B,MAAM,kBAAkB,MAAM;AAC9B,OAAK,MAAM,QAAQ,QAAM;AACrB,OAAI,OAAO,IAAI,iBAAiB,WAC5B,KAAI,cAAc;IAExB;EACF,MAAM,0BAA0B,cAAc,QAAQ,OAAO,SAAO,KAAK,IAAI,WAAW,KAAK,IAAI,QAAQ,YAAY,QAAQ,QAAQ,QAAQ,GAAG,EAAE,IAAI;EACtJ,MAAM,SAAS,OAAO,OAAO;GACzB,YAAY;GACZ,aAAa;GACb;GACA;GACA;GACA,cAAc,iBAAiB,IAAI;GACnC,eAAe,kBAAkB;GACpC,CAAC;EACF,MAAM,aAAa,OAAO,OAAO,EAAE,EAAE,QAAQ;AAC7C,mBAAiB,YAAY,UAAU,WAAW,CAAC;EACnD,MAAM,YAAY,OAAO,OAAO;GAC5B;GACA,GAAG;GACH,GAAG;GACH,GAAG,QAAQ;GACX,GAAG,QAAQ;GACd,EAAE,QAAQ;EACX,MAAM,SAAS,cAAc,cAAc,OAAO,gBAAgB,EAAE,OAAO;AAC3E,WAAS,MAAM,UAAU,WAAW,QAAQ,OAAO;AACnD,WAAS,eAAe,WAAW,QAAQ,OAAO;AAClD,MAAI,SAAS,iBAAiB,WAAW,QAAQ,OAAO,CACpD,UAAS,eAAe,WAAW,QAAQ,OAAO;AAEtD,mBAAiB,UAAU;AAC3B,aAAW,MAAM,YAAY,WAAW,QAAQ,OAAO;AACvD,YAAU,KAAK,UAAU;AACzB,YAAU,KAAK,UAAU;AACzB,aAAW,MAAM,gBAAgB,WAAW,QAAQ,OAAO;AAC3D,QAAM,YAAY;GACd,MAAM,UAAU;GAChB,KAAK,UAAU;GACf,OAAO,UAAU,OAAO,UAAU;GAClC,QAAQ,UAAU,MAAM,UAAU;GAClC,QAAQ,UAAU;GAClB,OAAO,UAAU;GACpB;AACD,OAAK,MAAM,YAAY,WAAS;GAC5B,MAAM,MAAM,OAAO;AACnB,UAAO,OAAO,KAAK,MAAM,UAAU;AACnC,OAAI,OAAO,UAAU,GAAG,UAAU,GAAG;IACjC,MAAM;IACN,KAAK;IACL,OAAO;IACP,QAAQ;IACX,CAAC;IACJ;;CAET;AAED,IAAM,eAAN,MAAmB;CAClB,eAAe,QAAQ,aAAa;CACpC,eAAe,SAAS;AACjB,SAAO;;CAEd,iBAAiB,OAAO,MAAM,UAAU;CACxC,oBAAoB,OAAO,MAAM,UAAU;CAC3C,sBAAsB;AACf,SAAO;;CAEd,eAAe,SAAS,OAAO,QAAQ,aAAa;AAC7C,UAAQ,KAAK,IAAI,GAAG,SAAS,QAAQ,MAAM;AAC3C,WAAS,UAAU,QAAQ;AAC3B,SAAO;GACH;GACA,QAAQ,KAAK,IAAI,GAAG,cAAc,KAAK,MAAM,QAAQ,YAAY,GAAG,OAAO;GAC9E;;CAER,WAAW,QAAQ;AACZ,SAAO;;CAEd,aAAa,QAAQ;;AAItB,IAAM,gBAAN,cAA4B,aAAa;CACrC,eAAe,MAAM;AACjB,SAAO,QAAQ,KAAK,cAAc,KAAK,WAAW,KAAK,IAAI;;CAE/D,aAAa,QAAQ;AACjB,SAAO,QAAQ,YAAY;;;AAInC,IAAM,cAAc;AACnB,IAAM,cAAc;CACjB,YAAY;CACZ,WAAW;CACX,UAAU;CACV,cAAc;CACd,aAAa;CACb,aAAa;CACb,WAAW;CACX,cAAc;CACd,YAAY;CACf;AACD,IAAM,iBAAiB,UAAQ,UAAU,QAAQ,UAAU;AAC1D,SAAS,WAAW,QAAQ,aAAa;CACtC,MAAM,QAAQ,OAAO;CACrB,MAAM,eAAe,OAAO,aAAa,SAAS;CAClD,MAAM,cAAc,OAAO,aAAa,QAAQ;AAChD,QAAO,eAAe,EAClB,SAAS;EACL,QAAQ;EACR,OAAO;EACP,OAAO;GACH,SAAS,MAAM;GACf,QAAQ,MAAM;GACd,OAAO,MAAM;GAChB;EACJ,EACJ;AACD,OAAM,UAAU,MAAM,WAAW;AACjC,OAAM,YAAY,MAAM,aAAa;AACrC,KAAI,cAAc,YAAY,EAAE;EAC5B,MAAM,eAAe,aAAa,QAAQ,QAAQ;AAClD,MAAI,iBAAiB,OACjB,QAAO,QAAQ;;AAGvB,KAAI,cAAc,aAAa,CAC3B,KAAI,OAAO,MAAM,WAAW,GACxB,QAAO,SAAS,OAAO,SAAS,eAAe;MAC5C;EACH,MAAM,gBAAgB,aAAa,QAAQ,SAAS;AACpD,MAAI,kBAAkB,OAClB,QAAO,SAAS;;AAI5B,QAAO;;AAEX,IAAM,uBAAuB,+BAA+B,EACxD,SAAS,MACZ,GAAG;AACJ,SAAS,YAAY,MAAM,MAAM,UAAU;AACvC,KAAI,KACA,MAAK,iBAAiB,MAAM,UAAU,qBAAqB;;AAGnE,SAAS,eAAe,OAAO,MAAM,UAAU;AAC3C,KAAI,SAAS,MAAM,OACf,OAAM,OAAO,oBAAoB,MAAM,UAAU,qBAAqB;;AAG9E,SAAS,gBAAgB,OAAO,OAAO;CACnC,MAAM,OAAO,YAAY,MAAM,SAAS,MAAM;CAC9C,MAAM,EAAE,GAAI,MAAO,oBAAoB,OAAO,MAAM;AACpD,QAAO;EACH;EACA;EACA,QAAQ;EACR,GAAG,MAAM,SAAY,IAAI;EACzB,GAAG,MAAM,SAAY,IAAI;EAC5B;;AAEL,SAAS,iBAAiB,UAAU,QAAQ;AACxC,MAAK,MAAM,QAAQ,SACf,KAAI,SAAS,UAAU,KAAK,SAAS,OAAO,CACxC,QAAO;;AAInB,SAAS,qBAAqB,OAAO,MAAM,UAAU;CACjD,MAAM,SAAS,MAAM;CACrB,MAAM,WAAW,IAAI,kBAAkB,YAAU;EAC7C,IAAI,UAAU;AACd,OAAK,MAAM,SAAS,SAAQ;AACxB,aAAU,WAAW,iBAAiB,MAAM,YAAY,OAAO;AAC/D,aAAU,WAAW,CAAC,iBAAiB,MAAM,cAAc,OAAO;;AAEtE,MAAI,QACA,WAAU;GAEhB;AACF,UAAS,QAAQ,UAAU;EACvB,WAAW;EACX,SAAS;EACZ,CAAC;AACF,QAAO;;AAEX,SAAS,qBAAqB,OAAO,MAAM,UAAU;CACjD,MAAM,SAAS,MAAM;CACrB,MAAM,WAAW,IAAI,kBAAkB,YAAU;EAC7C,IAAI,UAAU;AACd,OAAK,MAAM,SAAS,SAAQ;AACxB,aAAU,WAAW,iBAAiB,MAAM,cAAc,OAAO;AACjE,aAAU,WAAW,CAAC,iBAAiB,MAAM,YAAY,OAAO;;AAEpE,MAAI,QACA,WAAU;GAEhB;AACF,UAAS,QAAQ,UAAU;EACvB,WAAW;EACX,SAAS;EACZ,CAAC;AACF,QAAO;;AAEX,IAAM,qCAAqB,IAAI,KAAK;AACpC,IAAI,sBAAsB;AAC1B,SAAS,iBAAiB;CACtB,MAAM,MAAM,OAAO;AACnB,KAAI,QAAQ,oBACR;AAEJ,uBAAsB;AACtB,oBAAmB,SAAS,QAAQ,UAAQ;AACxC,MAAI,MAAM,4BAA4B,IAClC,SAAQ;GAEd;;AAEN,SAAS,8BAA8B,OAAO,QAAQ;AAClD,KAAI,CAAC,mBAAmB,KACpB,QAAO,iBAAiB,UAAU,eAAe;AAErD,oBAAmB,IAAI,OAAO,OAAO;;AAEzC,SAAS,gCAAgC,OAAO;AAC5C,oBAAmB,OAAO,MAAM;AAChC,KAAI,CAAC,mBAAmB,KACpB,QAAO,oBAAoB,UAAU,eAAe;;AAG5D,SAAS,qBAAqB,OAAO,MAAM,UAAU;CACjD,MAAM,SAAS,MAAM;CACrB,MAAM,YAAY,UAAU,eAAe,OAAO;AAClD,KAAI,CAAC,UACD;CAEJ,MAAM,SAAS,WAAW,OAAO,WAAS;EACtC,MAAM,IAAI,UAAU;AACpB,WAAS,OAAO,OAAO;AACvB,MAAI,IAAI,UAAU,YACd,WAAU;IAEf,OAAO;CACV,MAAM,WAAW,IAAI,gBAAgB,YAAU;EAC3C,MAAM,QAAQ,QAAQ;EACtB,MAAM,QAAQ,MAAM,YAAY;EAChC,MAAM,SAAS,MAAM,YAAY;AACjC,MAAI,UAAU,KAAK,WAAW,EAC1B;AAEJ,SAAO,OAAO,OAAO;GACvB;AACF,UAAS,QAAQ,UAAU;AAC3B,+BAA8B,OAAO,OAAO;AAC5C,QAAO;;AAEX,SAAS,gBAAgB,OAAO,MAAM,UAAU;AAC5C,KAAI,SACA,UAAS,YAAY;AAEzB,KAAI,SAAS,SACT,iCAAgC,MAAM;;AAG9C,SAAS,qBAAqB,OAAO,MAAM,UAAU;CACjD,MAAM,SAAS,MAAM;CACrB,MAAM,QAAQ,WAAW,UAAQ;AAC7B,MAAI,MAAM,QAAQ,KACd,UAAS,gBAAgB,OAAO,MAAM,CAAC;IAE5C,MAAM;AACT,aAAY,QAAQ,MAAM,MAAM;AAChC,QAAO;;AAEV,IAAM,cAAN,cAA0B,aAAa;CACvC,eAAe,QAAQ,aAAa;EAC7B,MAAM,UAAU,UAAU,OAAO,cAAc,OAAO,WAAW,KAAK;AACtE,MAAI,WAAW,QAAQ,WAAW,QAAQ;AACtC,cAAW,QAAQ,YAAY;AAC/B,UAAO;;AAEX,SAAO;;CAEd,eAAe,SAAS;EACjB,MAAM,SAAS,QAAQ;AACvB,MAAI,CAAC,OAAO,aACR,QAAO;EAEX,MAAM,UAAU,OAAO,aAAa;AACpC,GACI,UACA,QACH,CAAC,SAAS,SAAO;GACd,MAAM,QAAQ,QAAQ;AACtB,OAAI,cAAc,MAAM,CACpB,QAAO,gBAAgB,KAAK;OAE5B,QAAO,aAAa,MAAM,MAAM;IAEtC;EACF,MAAM,QAAQ,QAAQ,SAAS,EAAE;AACjC,SAAO,KAAK,MAAM,CAAC,SAAS,QAAM;AAC9B,UAAO,MAAM,OAAO,MAAM;IAC5B;AACF,SAAO,QAAQ,OAAO;AACtB,SAAO,OAAO;AACd,SAAO;;CAEd,iBAAiB,OAAO,MAAM,UAAU;AACjC,OAAK,oBAAoB,OAAO,KAAK;EACrC,MAAM,UAAU,MAAM,aAAa,MAAM,WAAW,EAAE;AAOtD,UAAQ,SANS;GACb,QAAQ;GACR,QAAQ;GACR,QAAQ;GACX,CACwB,SAAS,sBACV,OAAO,MAAM,SAAS;;CAErD,oBAAoB,OAAO,MAAM;EAC1B,MAAM,UAAU,MAAM,aAAa,MAAM,WAAW,EAAE;EACtD,MAAM,QAAQ,QAAQ;AACtB,MAAI,CAAC,MACD;AAQJ,GANiB;GACb,QAAQ;GACR,QAAQ;GACR,QAAQ;GACX,CACwB,SAAS,gBAC1B,OAAO,MAAM,MAAM;AAC3B,UAAQ,QAAQ;;CAEpB,sBAAsB;AAClB,SAAO,OAAO;;CAErB,eAAe,QAAQ,OAAO,QAAQ,aAAa;AAC5C,SAAO,eAAe,QAAQ,OAAO,QAAQ,YAAY;;CAEhE,WAAW,QAAQ;EACZ,MAAM,YAAY,UAAU,eAAe,OAAO;AAClD,SAAO,CAAC,EAAE,aAAa,UAAU;;;AAIzC,SAAS,gBAAgB,QAAQ;AAC7B,KAAI,CAAC,iBAAiB,IAAI,OAAO,oBAAoB,eAAe,kBAAkB,gBAClF,QAAO;AAEX,QAAO;;AAGX,IAAM,UAAN,MAAc;CACV,OAAO,WAAW,EAAE;CACpB,OAAO,gBAAgB;CACvB;CACA;CACA,SAAS;CACT;CACA;CACA,gBAAgB,kBAAkB;EAC9B,MAAM,EAAE,GAAI,MAAO,KAAK,SAAS,CAC7B,KACA,IACH,EAAE,iBAAiB;AACpB,SAAO;GACH;GACA;GACH;;CAEL,WAAW;AACP,SAAO,SAAS,KAAK,EAAE,IAAI,SAAS,KAAK,EAAE;;CAE/C,SAAS,OAAO,OAAO;EACnB,MAAM,QAAQ,KAAK;AACnB,MAAI,CAAC,SAAS,CAAC,MAEX,QAAO;EAEX,MAAM,MAAM,EAAE;AACd,QAAM,SAAS,SAAO;AAClB,OAAI,QAAQ,MAAM,SAAS,MAAM,MAAM,QAAQ,GAAG,MAAM,MAAM,MAAM,KAAK;IAC3E;AACF,SAAO;;;AAIf,SAAS,SAAS,OAAO,OAAO;CAC5B,MAAM,WAAW,MAAM,QAAQ;CAC/B,MAAM,qBAAqB,kBAAkB,MAAM;CACnD,MAAM,aAAa,KAAK,IAAI,SAAS,iBAAiB,oBAAoB,mBAAmB;CAC7F,MAAM,eAAe,SAAS,MAAM,UAAU,gBAAgB,MAAM,GAAG,EAAE;CACzE,MAAM,kBAAkB,aAAa;CACrC,MAAM,QAAQ,aAAa;CAC3B,MAAM,OAAO,aAAa,kBAAkB;CAC5C,MAAM,WAAW,EAAE;AACnB,KAAI,kBAAkB,YAAY;AAC9B,aAAW,OAAO,UAAU,cAAc,kBAAkB,WAAW;AACvE,SAAO;;CAEX,MAAM,UAAU,iBAAiB,cAAc,OAAO,WAAW;AACjE,KAAI,kBAAkB,GAAG;EACrB,IAAI,GAAG;EACP,MAAM,kBAAkB,kBAAkB,IAAI,KAAK,OAAO,OAAO,UAAU,kBAAkB,GAAG,GAAG;AACnG,OAAK,OAAO,UAAU,SAAS,cAAc,gBAAgB,GAAG,IAAI,QAAQ,iBAAiB,MAAM;AACnG,OAAI,IAAI,GAAG,OAAO,kBAAkB,GAAG,IAAI,MAAM,IAC7C,MAAK,OAAO,UAAU,SAAS,aAAa,IAAI,aAAa,IAAI,GAAG;AAExE,OAAK,OAAO,UAAU,SAAS,MAAM,cAAc,gBAAgB,GAAG,MAAM,SAAS,OAAO,gBAAgB;AAC5G,SAAO;;AAEX,MAAK,OAAO,UAAU,QAAQ;AAC9B,QAAO;;AAEX,SAAS,kBAAkB,OAAO;CAC9B,MAAM,SAAS,MAAM,QAAQ;CAC7B,MAAM,aAAa,MAAM,WAAW;CACpC,MAAM,WAAW,MAAM,UAAU,cAAc,SAAS,IAAI;CAC5D,MAAM,WAAW,MAAM,aAAa;AACpC,QAAO,KAAK,MAAM,KAAK,IAAI,UAAU,SAAS,CAAC;;AAElD,SAAS,iBAAiB,cAAc,OAAO,YAAY;CACxD,MAAM,mBAAmB,eAAe,aAAa;CACrD,MAAM,UAAU,MAAM,SAAS;AAC/B,KAAI,CAAC,iBACD,QAAO,KAAK,IAAI,SAAS,EAAE;CAE/B,MAAM,UAAU,WAAW,iBAAiB;AAC5C,MAAI,IAAI,IAAI,GAAG,OAAO,QAAQ,SAAS,GAAG,IAAI,MAAM,KAAI;EACpD,MAAM,SAAS,QAAQ;AACvB,MAAI,SAAS,QACT,QAAO;;AAGf,QAAO,KAAK,IAAI,SAAS,EAAE;;AAE9B,SAAS,gBAAgB,OAAO;CAC7B,MAAM,SAAS,EAAE;CACjB,IAAI,GAAG;AACP,MAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,IACtC,KAAI,MAAM,GAAG,MACT,QAAO,KAAK,EAAE;AAGtB,QAAO;;AAEV,SAAS,WAAW,OAAO,UAAU,cAAc,SAAS;CACzD,IAAI,QAAQ;CACZ,IAAI,OAAO,aAAa;CACxB,IAAI;AACJ,WAAU,KAAK,KAAK,QAAQ;AAC5B,MAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,IACzB,KAAI,MAAM,MAAM;AACZ,WAAS,KAAK,MAAM,GAAG;AACvB;AACA,SAAO,aAAa,QAAQ;;;AAIvC,SAAS,KAAK,OAAO,UAAU,SAAS,YAAY,UAAU;CAC3D,MAAM,QAAQ,eAAe,YAAY,EAAE;CAC3C,MAAM,MAAM,KAAK,IAAI,eAAe,UAAU,MAAM,OAAO,EAAE,MAAM,OAAO;CAC1E,IAAI,QAAQ;CACZ,IAAI,QAAQ,GAAG;AACf,WAAU,KAAK,KAAK,QAAQ;AAC5B,KAAI,UAAU;AACV,WAAS,WAAW;AACpB,YAAU,SAAS,KAAK,MAAM,SAAS,QAAQ;;AAEnD,QAAO;AACP,QAAM,OAAO,GAAE;AACX;AACA,SAAO,KAAK,MAAM,QAAQ,QAAQ,QAAQ;;AAE9C,MAAI,IAAI,KAAK,IAAI,OAAO,EAAE,EAAE,IAAI,KAAK,IACjC,KAAI,MAAM,MAAM;AACZ,WAAS,KAAK,MAAM,GAAG;AACvB;AACA,SAAO,KAAK,MAAM,QAAQ,QAAQ,QAAQ;;;AAIrD,SAAS,eAAe,KAAK;CAC1B,MAAM,MAAM,IAAI;CAChB,IAAI,GAAG;AACP,KAAI,MAAM,EACN,QAAO;AAEX,MAAI,OAAO,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EACjC,KAAI,IAAI,KAAK,IAAI,IAAI,OAAO,KACxB,QAAO;AAGf,QAAO;;AAGX,IAAM,gBAAgB,UAAQ,UAAU,SAAS,UAAU,UAAU,UAAU,SAAS;AACxF,IAAM,kBAAkB,OAAO,MAAM,WAAS,SAAS,SAAS,SAAS,SAAS,MAAM,QAAQ,SAAS,MAAM,QAAQ;AACvH,IAAM,iBAAiB,aAAa,kBAAgB,KAAK,IAAI,iBAAiB,aAAa,YAAY;AACtG,SAAS,OAAO,KAAK,UAAU;CAC5B,MAAM,SAAS,EAAE;CACjB,MAAM,YAAY,IAAI,SAAS;CAC/B,MAAM,MAAM,IAAI;CAChB,IAAI,IAAI;AACR,QAAM,IAAI,KAAK,KAAK,UAChB,QAAO,KAAK,IAAI,KAAK,MAAM,EAAE,EAAE;AAEnC,QAAO;;AAEV,SAAS,oBAAoB,OAAO,SAAO,iBAAiB;CACzD,MAAM,SAAS,MAAM,MAAM;CAC3B,MAAMQ,eAAa,KAAK,IAAIR,SAAO,SAAS,EAAE;CAC9C,MAAM,QAAQ,MAAM;CACpB,MAAM,MAAM,MAAM;CAClB,MAAM,UAAU;CAChB,IAAI,YAAY,MAAM,gBAAgBQ,aAAW;CACjD,IAAI;AACJ,KAAI,iBAAiB;AACjB,MAAI,WAAW,EACX,UAAS,KAAK,IAAI,YAAY,OAAO,MAAM,UAAU;WAC9CR,YAAU,EACjB,WAAU,MAAM,gBAAgB,EAAE,GAAG,aAAa;MAElD,WAAU,YAAY,MAAM,gBAAgBQ,eAAa,EAAE,IAAI;AAEnE,eAAaA,eAAaR,UAAQ,SAAS,CAAC;AAC5C,MAAI,YAAY,QAAQ,WAAW,YAAY,MAAM,QACjD;;AAGR,QAAO;;AAEV,SAAS,eAAe,QAAQ,QAAQ;AACrC,MAAK,SAAS,UAAQ;EAClB,MAAM,KAAK,MAAM;EACjB,MAAM,QAAQ,GAAG,SAAS;EAC1B,IAAI;AACJ,MAAI,QAAQ,QAAQ;AAChB,QAAI,IAAI,GAAG,IAAI,OAAO,EAAE,EACpB,QAAO,MAAM,KAAK,GAAG;AAEzB,MAAG,OAAO,GAAG,MAAM;;GAEzB;;AAEL,SAAS,kBAAkB,SAAS;AACjC,QAAO,QAAQ,YAAY,QAAQ,aAAa;;AAEnD,SAAS,eAAe,SAAS,UAAU;AACxC,KAAI,CAAC,QAAQ,QACT,QAAO;CAEX,MAAM,OAAO,OAAO,QAAQ,MAAM,SAAS;CAC3C,MAAM,UAAU,UAAU,QAAQ,QAAQ;AAE1C,SADc,QAAQ,QAAQ,KAAK,GAAG,QAAQ,KAAK,SAAS,KAC7C,KAAK,aAAa,QAAQ;;AAE7C,SAAS,mBAAmB,QAAQ,OAAO;AACvC,QAAO,cAAc,QAAQ;EACzB;EACA,MAAM;EACT,CAAC;;AAEN,SAAS,kBAAkB,QAAQ,SAAO,MAAM;AAC5C,QAAO,cAAc,QAAQ;EACzB;EACA;EACA,MAAM;EACT,CAAC;;AAEN,SAAS,WAAW,OAAO,UAAU,SAAS;CACzC,IAAI,MAAM,mBAAmB,MAAM;AACpC,KAAI,WAAW,aAAa,WAAW,CAAC,WAAW,aAAa,QAC5D,OAAM,aAAa,IAAI;AAE3B,QAAO;;AAEX,SAAS,UAAU,OAAO,QAAQ,UAAU,OAAO;CAC/C,MAAM,EAAE,KAAM,MAAO,QAAS,OAAQ,UAAW;CACjD,MAAM,EAAE,WAAY,qBAAY;CAChC,IAAI,WAAW;CACf,IAAI,UAAU,QAAQ;CACtB,MAAM,SAAS,SAAS;CACxB,MAAM,QAAQ,QAAQ;AACtB,KAAI,MAAM,cAAc,EAAE;AACtB,WAAS,eAAe,OAAO,MAAM,MAAM;AAC3C,MAAI,SAAS,SAAS,EAAE;GACpB,MAAM,iBAAiB,OAAO,KAAK,SAAS,CAAC;GAC7C,MAAM,QAAQ,SAAS;AACvB,YAASC,SAAO,gBAAgB,iBAAiB,MAAM,GAAG,SAAS;aAC5D,aAAa,SACpB,WAAU,UAAU,SAAS,UAAU,OAAO,IAAI,SAAS;MAE3D,UAAS,eAAe,OAAO,UAAU,OAAO;AAEpD,aAAW,QAAQ;QAChB;AACH,MAAI,SAAS,SAAS,EAAE;GACpB,MAAM,iBAAiB,OAAO,KAAK,SAAS,CAAC;GAC7C,MAAM,QAAQ,SAAS;AACvB,YAASA,SAAO,gBAAgB,iBAAiB,MAAM,GAAG,QAAQ;aAC3D,aAAa,SACpB,WAAU,UAAU,OAAO,UAAU,SAAS,IAAI,QAAQ;MAE1D,UAAS,eAAe,OAAO,UAAU,OAAO;AAEpD,WAAS,eAAe,OAAO,QAAQ,IAAI;AAC3C,aAAW,aAAa,SAAS,CAAC,UAAU;;AAEhD,QAAO;EACH;EACA;EACA;EACA;EACH;;AAEL,IAAM,QAAN,MAAM,cAAc,QAAQ;CACxB,YAAY,KAAI;AACZ,SAAO;AACN,OAAK,KAAK,IAAI;AACd,OAAK,OAAO,IAAI;AAChB,OAAK,UAAU;AACf,OAAK,MAAM,IAAI;AACf,OAAK,QAAQ,IAAI;AACjB,OAAK,MAAM;AACX,OAAK,SAAS;AACd,OAAK,OAAO;AACZ,OAAK,QAAQ;AACb,OAAK,QAAQ;AACb,OAAK,SAAS;AACf,OAAK,WAAW;GACZ,MAAM;GACN,OAAO;GACP,KAAK;GACL,QAAQ;GACX;AACA,OAAK,WAAW;AAChB,OAAK,YAAY;AACjB,OAAK,aAAa;AAClB,OAAK,gBAAgB;AACrB,OAAK,cAAc;AACnB,OAAK,eAAe;AACpB,OAAK,OAAO;AACZ,OAAK,gBAAgB;AACtB,OAAK,MAAM;AACX,OAAK,MAAM;AACX,OAAK,SAAS;AACb,OAAK,QAAQ,EAAE;AACf,OAAK,iBAAiB;AACtB,OAAK,cAAc;AACnB,OAAK,cAAc;AACpB,OAAK,UAAU;AACf,OAAK,aAAa;AAClB,OAAK,oBAAoB,EAAE;AAC1B,OAAK,cAAc;AACnB,OAAK,YAAY;AAClB,OAAK,iBAAiB;AACtB,OAAK,WAAW;AAChB,OAAK,WAAW;AAChB,OAAK,gBAAgB;AACrB,OAAK,gBAAgB;AACrB,OAAK,eAAe;AACpB,OAAK,eAAe;AACpB,OAAK,SAAS,EAAE;AAChB,OAAK,oBAAoB;AACzB,OAAK,WAAW;;CAEvB,KAAK,SAAS;AACP,OAAK,UAAU,QAAQ,WAAW,KAAK,YAAY,CAAC;AACpD,OAAK,OAAO,QAAQ;AACpB,OAAK,WAAW,KAAK,MAAM,QAAQ,IAAI;AACvC,OAAK,WAAW,KAAK,MAAM,QAAQ,IAAI;AACvC,OAAK,gBAAgB,KAAK,MAAM,QAAQ,aAAa;AACrD,OAAK,gBAAgB,KAAK,MAAM,QAAQ,aAAa;;CAE5D,MAAM,KAAK,SAAO;AACX,SAAO;;CAEd,gBAAgB;EACT,IAAI,EAAE,UAAW,UAAW,eAAgB,kBAAmB;AAC/D,aAAW,gBAAgB,UAAU,OAAO,kBAAkB;AAC9D,aAAW,gBAAgB,UAAU,OAAO,kBAAkB;AAC9D,kBAAgB,gBAAgB,eAAe,OAAO,kBAAkB;AACxE,kBAAgB,gBAAgB,eAAe,OAAO,kBAAkB;AACxE,SAAO;GACH,KAAK,gBAAgB,UAAU,cAAc;GAC7C,KAAK,gBAAgB,UAAU,cAAc;GAC7C,YAAY,eAAe,SAAS;GACpC,YAAY,eAAe,SAAS;GACvC;;CAER,UAAU,UAAU;EACb,IAAI,EAAE,KAAM,KAAM,YAAa,eAAgB,KAAK,eAAe;EACnE,IAAI;AACJ,MAAI,cAAc,WACd,QAAO;GACH;GACA;GACH;EAEL,MAAM,QAAQ,KAAK,yBAAyB;AAC5C,OAAI,IAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC9C,WAAQ,MAAM,GAAG,WAAW,UAAU,MAAM,SAAS;AACrD,OAAI,CAAC,WACD,OAAM,KAAK,IAAI,KAAK,MAAM,IAAI;AAElC,OAAI,CAAC,WACD,OAAM,KAAK,IAAI,KAAK,MAAM,IAAI;;AAGtC,QAAM,cAAc,MAAM,MAAM,MAAM;AACtC,QAAM,cAAc,MAAM,MAAM,MAAM;AACtC,SAAO;GACH,KAAK,gBAAgB,KAAK,gBAAgB,KAAK,IAAI,CAAC;GACpD,KAAK,gBAAgB,KAAK,gBAAgB,KAAK,IAAI,CAAC;GACvD;;CAER,aAAa;AACN,SAAO;GACH,MAAM,KAAK,eAAe;GAC1B,KAAK,KAAK,cAAc;GACxB,OAAO,KAAK,gBAAgB;GAC5B,QAAQ,KAAK,iBAAiB;GACjC;;CAER,WAAW;AACJ,SAAO,KAAK;;CAEnB,YAAY;EACL,MAAM,OAAO,KAAK,MAAM;AACxB,SAAO,KAAK,QAAQ,WAAW,KAAK,cAAc,GAAG,KAAK,UAAU,KAAK,YAAY,KAAK,UAAU,EAAE;;CAE7G,cAAc,YAAY,KAAK,MAAM,WAAW;AAEzC,SADc,KAAK,gBAAgB,KAAK,cAAc,KAAK,mBAAmB,UAAU;;CAG5F,eAAe;AACX,OAAK,SAAS,EAAE;AAChB,OAAK,oBAAoB;;CAE7B,eAAe;AACX,WAAS,KAAK,QAAQ,cAAc,CAChC,KACH,CAAC;;CAET,OAAO,UAAU,WAAW,SAAS;EAC9B,MAAM,EAAE,aAAc,OAAQ,OAAO,aAAc,KAAK;EACxD,MAAM,aAAa,SAAS;AAC5B,OAAK,cAAc;AACnB,OAAK,WAAW;AAChB,OAAK,YAAY;AACjB,OAAK,WAAW,UAAU,OAAO,OAAO;GACpC,MAAM;GACN,OAAO;GACP,KAAK;GACL,QAAQ;GACX,EAAE,QAAQ;AACX,OAAK,QAAQ;AACb,OAAK,cAAc;AACnB,OAAK,iBAAiB;AACtB,OAAK,cAAc;AACnB,OAAK,qBAAqB;AAC1B,OAAK,eAAe;AACpB,OAAK,oBAAoB;AACzB,OAAK,aAAa,KAAK,cAAc,GAAG,KAAK,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,KAAK,SAAS,QAAQ,MAAM,QAAQ;AACxH,MAAI,CAAC,KAAK,mBAAmB;AACzB,QAAK,kBAAkB;AACvB,QAAK,qBAAqB;AAC1B,QAAK,iBAAiB;AACtB,QAAK,SAAS,UAAU,MAAM,OAAO,YAAY;AACjD,QAAK,oBAAoB;;AAE7B,OAAK,kBAAkB;AACvB,OAAK,QAAQ,KAAK,YAAY,IAAI,EAAE;AACpC,OAAK,iBAAiB;EACtB,MAAM,kBAAkB,aAAa,KAAK,MAAM;AAChD,OAAK,sBAAsB,kBAAkB,OAAO,KAAK,OAAO,WAAW,GAAG,KAAK,MAAM;AACzF,OAAK,WAAW;AAChB,OAAK,8BAA8B;AACnC,OAAK,wBAAwB;AAC7B,OAAK,6BAA6B;AAClC,MAAI,SAAS,YAAY,SAAS,YAAY,SAAS,WAAW,SAAS;AACvE,QAAK,QAAQ,SAAS,MAAM,KAAK,MAAM;AACvC,QAAK,cAAc;AACnB,QAAK,eAAe;;AAExB,MAAI,gBACA,MAAK,sBAAsB,KAAK,MAAM;AAE1C,OAAK,WAAW;AAChB,OAAK,KAAK;AACV,OAAK,UAAU;AACf,OAAK,aAAa;;CAEzB,YAAY;EACL,IAAI,gBAAgB,KAAK,QAAQ;EACjC,IAAI,YAAY;AAChB,MAAI,KAAK,cAAc,EAAE;AACrB,gBAAa,KAAK;AAClB,cAAW,KAAK;SACb;AACH,gBAAa,KAAK;AAClB,cAAW,KAAK;AAChB,mBAAgB,CAAC;;AAErB,OAAK,cAAc;AACnB,OAAK,YAAY;AACjB,OAAK,iBAAiB;AACtB,OAAK,UAAU,WAAW;AAC1B,OAAK,iBAAiB,KAAK,QAAQ;;CAEvC,cAAc;AACV,WAAS,KAAK,QAAQ,aAAa,CAC/B,KACH,CAAC;;CAEN,sBAAsB;AAClB,WAAS,KAAK,QAAQ,qBAAqB,CACvC,KACH,CAAC;;CAEN,gBAAgB;AACZ,MAAI,KAAK,cAAc,EAAE;AACrB,QAAK,QAAQ,KAAK;AAClB,QAAK,OAAO;AACZ,QAAK,QAAQ,KAAK;SACf;AACH,QAAK,SAAS,KAAK;AACnB,QAAK,MAAM;AACX,QAAK,SAAS,KAAK;;AAEvB,OAAK,cAAc;AACnB,OAAK,aAAa;AAClB,OAAK,eAAe;AACpB,OAAK,gBAAgB;;CAEzB,qBAAqB;AACjB,WAAS,KAAK,QAAQ,oBAAoB,CACtC,KACH,CAAC;;CAEN,WAAW,MAAM;AACb,OAAK,MAAM,cAAc,MAAM,KAAK,YAAY,CAAC;AACjD,WAAS,KAAK,QAAQ,OAAO,CACzB,KACH,CAAC;;CAEN,mBAAmB;AACf,OAAK,WAAW,mBAAmB;;CAEvC,sBAAsB;CACtB,kBAAkB;AACd,OAAK,WAAW,kBAAkB;;CAEtC,mBAAmB;AACf,OAAK,WAAW,mBAAmB;;CAE1C,aAAa;AACN,SAAO,EAAE;;CAEb,kBAAkB;AACd,OAAK,WAAW,kBAAkB;;CAEtC,8BAA8B;AAC1B,WAAS,KAAK,QAAQ,6BAA6B,CAC/C,KACH,CAAC;;CAET,mBAAmB,OAAO;EACnB,MAAM,WAAW,KAAK,QAAQ;EAC9B,IAAI,GAAG,MAAM;AACb,OAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,KAAI;AAC1C,UAAO,MAAM;AACb,QAAK,QAAQ,SAAS,SAAS,UAAU;IACrC,KAAK;IACL;IACA;IACH,EAAE,KAAK;;;CAGhB,6BAA6B;AACzB,WAAS,KAAK,QAAQ,4BAA4B,CAC9C,KACH,CAAC;;CAEN,+BAA+B;AAC3B,WAAS,KAAK,QAAQ,8BAA8B,CAChD,KACH,CAAC;;CAEN,yBAAyB;EACrB,MAAM,UAAU,KAAK;EACrB,MAAM,WAAW,QAAQ;EACzB,MAAM,WAAW,cAAc,KAAK,MAAM,QAAQ,QAAQ,MAAM,cAAc;EAC9E,MAAM,cAAc,SAAS,eAAe;EAC5C,MAAM,cAAc,SAAS;EAC7B,IAAI,gBAAgB;EACpB,IAAI,WAAW,WAAW;AAC1B,MAAI,CAAC,KAAK,YAAY,IAAI,CAAC,SAAS,WAAW,eAAe,eAAe,YAAY,KAAK,CAAC,KAAK,cAAc,EAAE;AAChH,QAAK,gBAAgB;AACrB;;EAEJ,MAAM,aAAa,KAAK,gBAAgB;EACxC,MAAM,gBAAgB,WAAW,OAAO;EACxC,MAAM,iBAAiB,WAAW,QAAQ;EAC1C,MAAM,WAAW,YAAY,KAAK,MAAM,QAAQ,eAAe,GAAG,KAAK,SAAS;AAChF,cAAY,QAAQ,SAAS,KAAK,WAAW,WAAW,YAAY,WAAW;AAC/E,MAAI,gBAAgB,IAAI,WAAW;AAC/B,eAAY,YAAY,YAAY,QAAQ,SAAS,KAAM;AAC3D,eAAY,KAAK,YAAY,kBAAkB,QAAQ,KAAK,GAAG,SAAS,UAAU,eAAe,QAAQ,OAAO,KAAK,MAAM,QAAQ,KAAK;AACxI,sBAAmB,KAAK,KAAK,gBAAgB,gBAAgB,iBAAiB,eAAe;AAC7F,mBAAgB,UAAU,KAAK,IAAI,KAAK,KAAK,aAAa,WAAW,QAAQ,SAAS,KAAK,WAAW,IAAI,EAAE,CAAC,EAAE,KAAK,KAAK,YAAY,YAAY,kBAAkB,IAAI,EAAE,CAAC,GAAG,KAAK,KAAK,YAAY,iBAAiB,kBAAkB,IAAI,EAAE,CAAC,CAAC,CAAC;AAC/O,mBAAgB,KAAK,IAAI,aAAa,KAAK,IAAI,aAAa,cAAc,CAAC;;AAE/E,OAAK,gBAAgB;;CAEzB,8BAA8B;AAC1B,WAAS,KAAK,QAAQ,6BAA6B,CAC/C,KACH,CAAC;;CAEN,gBAAgB;CAChB,YAAY;AACR,WAAS,KAAK,QAAQ,WAAW,CAC7B,KACH,CAAC;;CAEN,MAAM;EACF,MAAM,UAAU;GACZ,OAAO;GACP,QAAQ;GACX;EACD,MAAM,EAAE,OAAQ,SAAS,EAAE,OAAO,UAAW,OAAO,WAAY,MAAM,eAAiB;EACvF,MAAM,UAAU,KAAK,YAAY;EACjC,MAAM,eAAe,KAAK,cAAc;AACxC,MAAI,SAAS;GACT,MAAM,cAAc,eAAe,WAAW,MAAM,QAAQ,KAAK;AACjE,OAAI,cAAc;AACd,YAAQ,QAAQ,KAAK;AACrB,YAAQ,SAAS,kBAAkB,SAAS,GAAG;UAC5C;AACH,YAAQ,SAAS,KAAK;AACtB,YAAQ,QAAQ,kBAAkB,SAAS,GAAG;;AAElD,OAAI,SAAS,WAAW,KAAK,MAAM,QAAQ;IACvC,MAAM,EAAE,OAAQ,MAAO,QAAS,YAAa,KAAK,gBAAgB;IAClE,MAAM,cAAc,SAAS,UAAU;IACvC,MAAM,eAAe,UAAU,KAAK,cAAc;IAClD,MAAM,MAAM,KAAK,IAAI,aAAa;IAClC,MAAM,MAAM,KAAK,IAAI,aAAa;AAClC,QAAI,cAAc;KACd,MAAM,cAAc,SAAS,SAAS,IAAI,MAAM,OAAO,QAAQ,MAAM,QAAQ;AAC7E,aAAQ,SAAS,KAAK,IAAI,KAAK,WAAW,QAAQ,SAAS,cAAc,YAAY;WAClF;KACH,MAAM,aAAa,SAAS,SAAS,IAAI,MAAM,OAAO,QAAQ,MAAM,QAAQ;AAC5E,aAAQ,QAAQ,KAAK,IAAI,KAAK,UAAU,QAAQ,QAAQ,aAAa,YAAY;;AAErF,SAAK,kBAAkB,OAAO,MAAM,KAAK,IAAI;;;AAGrD,OAAK,gBAAgB;AACrB,MAAI,cAAc;AACd,QAAK,QAAQ,KAAK,UAAU,MAAM,QAAQ,KAAK,SAAS,OAAO,KAAK,SAAS;AAC7E,QAAK,SAAS,QAAQ;SACnB;AACH,QAAK,QAAQ,QAAQ;AACrB,QAAK,SAAS,KAAK,UAAU,MAAM,SAAS,KAAK,SAAS,MAAM,KAAK,SAAS;;;CAGtF,kBAAkB,OAAO,MAAM,KAAK,KAAK;EACrC,MAAM,EAAE,OAAO,EAAE,OAAQ,WAAa,aAAc,KAAK;EACzD,MAAM,YAAY,KAAK,kBAAkB;EACzC,MAAM,mBAAmB,aAAa,SAAS,KAAK,SAAS;AAC7D,MAAI,KAAK,cAAc,EAAE;GACrB,MAAM,aAAa,KAAK,gBAAgB,EAAE,GAAG,KAAK;GAClD,MAAM,cAAc,KAAK,QAAQ,KAAK,gBAAgB,KAAK,MAAM,SAAS,EAAE;GAC5E,IAAI,cAAc;GAClB,IAAI,eAAe;AACnB,OAAI,UACA,KAAI,kBAAkB;AAClB,kBAAc,MAAM,MAAM;AAC1B,mBAAe,MAAM,KAAK;UACvB;AACH,kBAAc,MAAM,MAAM;AAC1B,mBAAe,MAAM,KAAK;;YAEvB,UAAU,QACjB,gBAAe,KAAK;YACb,UAAU,MACjB,eAAc,MAAM;YACb,UAAU,SAAS;AAC1B,kBAAc,MAAM,QAAQ;AAC5B,mBAAe,KAAK,QAAQ;;AAEhC,QAAK,cAAc,KAAK,KAAK,cAAc,aAAa,WAAW,KAAK,SAAS,KAAK,QAAQ,aAAa,EAAE;AAC7G,QAAK,eAAe,KAAK,KAAK,eAAe,cAAc,WAAW,KAAK,SAAS,KAAK,QAAQ,cAAc,EAAE;SAC9G;GACH,IAAI,aAAa,KAAK,SAAS;GAC/B,IAAI,gBAAgB,MAAM,SAAS;AACnC,OAAI,UAAU,SAAS;AACnB,iBAAa;AACb,oBAAgB,MAAM;cACf,UAAU,OAAO;AACxB,iBAAa,KAAK;AAClB,oBAAgB;;AAEpB,QAAK,aAAa,aAAa;AAC/B,QAAK,gBAAgB,gBAAgB;;;CAGhD,iBAAiB;AACV,MAAI,KAAK,UAAU;AACf,QAAK,SAAS,OAAO,KAAK,IAAI,KAAK,aAAa,KAAK,SAAS,KAAK;AACnE,QAAK,SAAS,MAAM,KAAK,IAAI,KAAK,YAAY,KAAK,SAAS,IAAI;AAChE,QAAK,SAAS,QAAQ,KAAK,IAAI,KAAK,cAAc,KAAK,SAAS,MAAM;AACtE,QAAK,SAAS,SAAS,KAAK,IAAI,KAAK,eAAe,KAAK,SAAS,OAAO;;;CAGjF,WAAW;AACP,WAAS,KAAK,QAAQ,UAAU,CAC5B,KACH,CAAC;;CAET,eAAe;EACR,MAAM,EAAE,MAAO,aAAc,KAAK;AAClC,SAAO,aAAa,SAAS,aAAa,YAAY,SAAS;;CAEtE,aAAa;AACN,SAAO,KAAK,QAAQ;;CAE3B,sBAAsB,OAAO;AACtB,OAAK,6BAA6B;AAClC,OAAK,mBAAmB,MAAM;EAC9B,IAAI,GAAG;AACP,OAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,IACtC,KAAI,cAAc,MAAM,GAAG,MAAM,EAAE;AAC/B,SAAM,OAAO,GAAG,EAAE;AAClB;AACA;;AAGR,OAAK,4BAA4B;;CAExC,iBAAiB;EACV,IAAI,aAAa,KAAK;AACtB,MAAI,CAAC,YAAY;GACb,MAAM,aAAa,KAAK,QAAQ,MAAM;GACtC,IAAI,QAAQ,KAAK;AACjB,OAAI,aAAa,MAAM,OACnB,SAAQ,OAAO,OAAO,WAAW;AAErC,QAAK,cAAc,aAAa,KAAK,mBAAmB,OAAO,MAAM,QAAQ,KAAK,QAAQ,MAAM,cAAc;;AAElH,SAAO;;CAEd,mBAAmB,OAAO,QAAQ,eAAe;EAC1C,MAAM,EAAE,KAAM,mBAAmB,WAAY;EAC7C,MAAM,SAAS,EAAE;EACjB,MAAM,UAAU,EAAE;EAClB,MAAM,YAAY,KAAK,MAAM,SAAS,cAAc,QAAQ,cAAc,CAAC;EAC3E,IAAI,kBAAkB;EACtB,IAAI,mBAAmB;EACvB,IAAI,GAAG,GAAG,MAAM,OAAO,UAAU,YAAY,OAAO,YAAY,OAAO,QAAQ;AAC/E,OAAI,IAAI,GAAG,IAAI,QAAQ,KAAK,WAAU;AAClC,WAAQ,MAAM,GAAG;AACjB,cAAW,KAAK,wBAAwB,EAAE;AAC1C,OAAI,OAAO,aAAa,SAAS;AACjC,WAAQ,OAAO,cAAc,OAAO,eAAe;IAC/C,MAAM,EAAE;IACR,IAAI,EAAE;IACT;AACD,gBAAa,SAAS;AACtB,WAAQ,SAAS;AACjB,OAAI,CAAC,cAAc,MAAM,IAAI,CAAC,QAAQ,MAAM,EAAE;AAC1C,YAAQ,aAAa,KAAK,MAAM,MAAM,MAAM,IAAI,OAAO,MAAM;AAC7D,aAAS;cACF,QAAQ,MAAM,CACrB,MAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC1C,kBAAe,MAAM;AACrB,QAAI,CAAC,cAAc,YAAY,IAAI,CAAC,QAAQ,YAAY,EAAE;AACtD,aAAQ,aAAa,KAAK,MAAM,MAAM,MAAM,IAAI,OAAO,YAAY;AACnE,eAAU;;;AAItB,UAAO,KAAK,MAAM;AAClB,WAAQ,KAAK,OAAO;AACpB,qBAAkB,KAAK,IAAI,OAAO,gBAAgB;AAClD,sBAAmB,KAAK,IAAI,QAAQ,iBAAiB;;AAEzD,iBAAe,QAAQ,OAAO;EAC9B,MAAM,SAAS,OAAO,QAAQ,gBAAgB;EAC9C,MAAM,UAAU,QAAQ,QAAQ,iBAAiB;EACjD,MAAM,WAAW,SAAO;GAChB,OAAO,OAAO,QAAQ;GACtB,QAAQ,QAAQ,QAAQ;GAC3B;AACL,SAAO;GACH,OAAO,QAAQ,EAAE;GACjB,MAAM,QAAQ,SAAS,EAAE;GACzB,QAAQ,QAAQ,OAAO;GACvB,SAAS,QAAQ,QAAQ;GACzB;GACA;GACH;;CAER,iBAAiB,OAAO;AACjB,SAAO;;CAEd,iBAAiB,OAAO,SAAO;AACxB,SAAO;;CAEd,iBAAiB,OAAO;CACxB,gBAAgB,SAAO;EAChB,MAAM,QAAQ,KAAK;AACnB,MAAID,UAAQ,KAAKA,UAAQ,MAAM,SAAS,EACpC,QAAO;AAEX,SAAO,KAAK,iBAAiB,MAAMA,SAAO,MAAM;;CAEvD,mBAAmB,SAAS;AACrB,MAAI,KAAK,eACL,WAAU,IAAI;EAElB,MAAM,QAAQ,KAAK,cAAc,UAAU,KAAK;AAChD,SAAO,YAAY,KAAK,iBAAiB,YAAY,KAAK,OAAO,OAAO,EAAE,GAAG,MAAM;;CAE1F,mBAAmB,OAAO;EACnB,MAAM,WAAW,QAAQ,KAAK,eAAe,KAAK;AAClD,SAAO,KAAK,iBAAiB,IAAI,UAAU;;CAElD,eAAe;AACR,SAAO,KAAK,iBAAiB,KAAK,cAAc,CAAC;;CAExD,eAAe;EACR,MAAM,EAAE,KAAM,QAAS;AACvB,SAAO,MAAM,KAAK,MAAM,IAAI,MAAM,MAAM,KAAK,MAAM,IAAI,MAAM;;CAEpE,WAAW,SAAO;EACX,MAAM,QAAQ,KAAK,SAAS,EAAE;AAC9B,MAAIA,WAAS,KAAKA,UAAQ,MAAM,QAAQ;GACpC,MAAM,OAAO,MAAMA;AACnB,UAAO,KAAK,aAAa,KAAK,WAAW,kBAAkB,KAAK,YAAY,EAAEA,SAAO,KAAK;;AAE9F,SAAO,KAAK,aAAa,KAAK,WAAW,mBAAmB,KAAK,MAAM,YAAY,EAAE,KAAK;;CAEjG,YAAY;EACL,MAAM,cAAc,KAAK,QAAQ;EACjC,MAAM,MAAM,UAAU,KAAK,cAAc;EACzC,MAAM,MAAM,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC;EACnC,MAAM,MAAM,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC;EACnC,MAAM,aAAa,KAAK,gBAAgB;EACxC,MAAM,UAAU,YAAY,mBAAmB;EAC/C,MAAM,IAAI,aAAa,WAAW,OAAO,QAAQ,UAAU;EAC3D,MAAM,IAAI,aAAa,WAAW,QAAQ,SAAS,UAAU;AAC7D,SAAO,KAAK,cAAc,GAAG,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI;;CAE9G,aAAa;EACN,MAAM,UAAU,KAAK,QAAQ;AAC7B,MAAI,YAAY,OACZ,QAAO,CAAC,CAAC;AAEb,SAAO,KAAK,yBAAyB,CAAC,SAAS;;CAEtD,sBAAsB,WAAW;EAC1B,MAAM,OAAO,KAAK;EAClB,MAAM,QAAQ,KAAK;EACnB,MAAM,UAAU,KAAK;EACrB,MAAM,EAAE,MAAO,UAAW,WAAY;EACtC,MAAM,SAAS,KAAK;EACpB,MAAM,eAAe,KAAK,cAAc;EAExC,MAAM,cADQ,KAAK,MACO,UAAU,SAAS,IAAI;EACjD,MAAM,KAAK,kBAAkB,KAAK;EAClC,MAAM,QAAQ,EAAE;EAChB,MAAM,aAAa,OAAO,WAAW,KAAK,YAAY,CAAC;EACvD,MAAM,YAAY,WAAW,UAAU,WAAW,QAAQ;EAC1D,MAAM,gBAAgB,YAAY;EAClC,MAAM,mBAAmB,SAAS,OAAO;AACrC,UAAO,YAAY,OAAO,OAAO,UAAU;;EAE/C,IAAI,aAAa,GAAG,WAAW;EAC/B,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,IAAI,IAAI;AACpC,MAAI,aAAa,OAAO;AACpB,iBAAc,iBAAiB,KAAK,OAAO;AAC3C,SAAM,KAAK,SAAS;AACpB,SAAM,cAAc;AACpB,QAAK,iBAAiB,UAAU,IAAI,GAAG;AACvC,QAAK,UAAU;aACR,aAAa,UAAU;AAC9B,iBAAc,iBAAiB,KAAK,IAAI;AACxC,QAAK,UAAU;AACf,QAAK,iBAAiB,UAAU,OAAO,GAAG;AAC1C,SAAM,cAAc;AACpB,SAAM,KAAK,MAAM;aACV,aAAa,QAAQ;AAC5B,iBAAc,iBAAiB,KAAK,MAAM;AAC1C,SAAM,KAAK,QAAQ;AACnB,SAAM,cAAc;AACpB,QAAK,iBAAiB,UAAU,KAAK,GAAG;AACxC,QAAK,UAAU;aACR,aAAa,SAAS;AAC7B,iBAAc,iBAAiB,KAAK,KAAK;AACzC,QAAK,UAAU;AACf,QAAK,iBAAiB,UAAU,MAAM,GAAG;AACzC,SAAM,cAAc;AACpB,SAAM,KAAK,OAAO;aACX,SAAS,KAAK;AACrB,OAAI,aAAa,SACb,eAAc,kBAAkB,UAAU,MAAM,UAAU,UAAU,IAAI,GAAI;YACrE,SAAS,SAAS,EAAE;IAC3B,MAAM,iBAAiB,OAAO,KAAK,SAAS,CAAC;IAC7C,MAAM,QAAQ,SAAS;AACvB,kBAAc,iBAAiB,KAAK,MAAM,OAAO,gBAAgB,iBAAiB,MAAM,CAAC;;AAE7F,QAAK,UAAU;AACf,QAAK,UAAU;AACf,SAAM,cAAc;AACpB,SAAM,MAAM;aACL,SAAS,KAAK;AACrB,OAAI,aAAa,SACb,eAAc,kBAAkB,UAAU,OAAO,UAAU,SAAS,EAAE;YAC/D,SAAS,SAAS,EAAE;IAC3B,MAAM,iBAAiB,OAAO,KAAK,SAAS,CAAC;IAC7C,MAAM,QAAQ,SAAS;AACvB,kBAAc,iBAAiB,KAAK,MAAM,OAAO,gBAAgB,iBAAiB,MAAM,CAAC;;AAE7F,SAAM,cAAc;AACpB,SAAM,MAAM;AACZ,QAAK,UAAU;AACf,QAAK,UAAU;;EAEnB,MAAM,QAAQ,eAAe,QAAQ,MAAM,eAAe,YAAY;EACtE,MAAM,OAAO,KAAK,IAAI,GAAG,KAAK,KAAK,cAAc,MAAM,CAAC;AACxD,OAAI,IAAI,GAAG,IAAI,aAAa,KAAK,MAAK;GAClC,MAAM,UAAU,KAAK,WAAW,EAAE;GAClC,MAAM,cAAc,KAAK,WAAW,QAAQ;GAC5C,MAAM,oBAAoB,OAAO,WAAW,QAAQ;GACpD,MAAM,YAAY,YAAY;GAC9B,MAAM,YAAY,YAAY;GAC9B,MAAM,aAAa,kBAAkB,QAAQ,EAAE;GAC/C,MAAM,mBAAmB,kBAAkB;GAC3C,MAAM,YAAY,YAAY;GAC9B,MAAM,YAAY,YAAY;GAC9B,MAAM,iBAAiB,YAAY,kBAAkB,EAAE;GACvD,MAAM,uBAAuB,YAAY;AACzC,eAAY,oBAAoB,MAAM,GAAG,OAAO;AAChD,OAAI,cAAc,OACd;AAEJ,sBAAmB,YAAY,OAAO,WAAW,UAAU;AAC3D,OAAI,aACA,OAAM,MAAM,KAAK,KAAK;OAEtB,OAAM,MAAM,KAAK,KAAK;AAE1B,SAAM,KAAK;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO;IACP,OAAO;IACP;IACA;IACA;IACA;IACA;IACA;IACH,CAAC;;AAEN,OAAK,eAAe;AACpB,OAAK,eAAe;AACpB,SAAO;;CAEd,mBAAmB,WAAW;EACvB,MAAM,OAAO,KAAK;EAClB,MAAM,UAAU,KAAK;EACrB,MAAM,EAAE,UAAW,OAAO,gBAAiB;EAC3C,MAAM,eAAe,KAAK,cAAc;EACxC,MAAM,QAAQ,KAAK;EACnB,MAAM,EAAE,OAAQ,YAAa,SAAU,WAAY;EACnD,MAAM,KAAK,kBAAkB,QAAQ,KAAK;EAC1C,MAAM,iBAAiB,KAAK;EAC5B,MAAM,kBAAkB,SAAS,CAAC,UAAU;EAC5C,MAAM,WAAW,CAAC,UAAU,KAAK,cAAc;EAC/C,MAAM,QAAQ,EAAE;EAChB,IAAI,GAAG,MAAM,MAAM,OAAO,GAAG,GAAG,WAAW,OAAO,MAAM,YAAY,WAAW;EAC/E,IAAI,eAAe;AACnB,MAAI,aAAa,OAAO;AACpB,OAAI,KAAK,SAAS;AAClB,eAAY,KAAK,yBAAyB;aACnC,aAAa,UAAU;AAC9B,OAAI,KAAK,MAAM;AACf,eAAY,KAAK,yBAAyB;aACnC,aAAa,QAAQ;GAC5B,MAAM,MAAM,KAAK,wBAAwB,GAAG;AAC5C,eAAY,IAAI;AAChB,OAAI,IAAI;aACD,aAAa,SAAS;GAC7B,MAAM,MAAM,KAAK,wBAAwB,GAAG;AAC5C,eAAY,IAAI;AAChB,OAAI,IAAI;aACD,SAAS,KAAK;AACrB,OAAI,aAAa,SACb,MAAK,UAAU,MAAM,UAAU,UAAU,IAAI;YACtC,SAAS,SAAS,EAAE;IAC3B,MAAM,iBAAiB,OAAO,KAAK,SAAS,CAAC;IAC7C,MAAM,QAAQ,SAAS;AACvB,QAAI,KAAK,MAAM,OAAO,gBAAgB,iBAAiB,MAAM,GAAG;;AAEpE,eAAY,KAAK,yBAAyB;aACnC,SAAS,KAAK;AACrB,OAAI,aAAa,SACb,MAAK,UAAU,OAAO,UAAU,SAAS,IAAI;YACtC,SAAS,SAAS,EAAE;IAC3B,MAAM,iBAAiB,OAAO,KAAK,SAAS,CAAC;IAC7C,MAAM,QAAQ,SAAS;AACvB,QAAI,KAAK,MAAM,OAAO,gBAAgB,iBAAiB,MAAM;;AAEjE,eAAY,KAAK,wBAAwB,GAAG,CAAC;;AAEjD,MAAI,SAAS,KACT;OAAI,UAAU,QACV,gBAAe;YACR,UAAU,MACjB,gBAAe;;EAGvB,MAAM,aAAa,KAAK,gBAAgB;AACxC,OAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC1C,UAAO,MAAM;AACb,WAAQ,KAAK;GACb,MAAM,cAAc,YAAY,WAAW,KAAK,WAAW,EAAE,CAAC;AAC9D,WAAQ,KAAK,gBAAgB,EAAE,GAAG,YAAY;AAC9C,UAAO,KAAK,wBAAwB,EAAE;AACtC,gBAAa,KAAK;AAClB,eAAY,QAAQ,MAAM,GAAG,MAAM,SAAS;GAC5C,MAAM,YAAY,YAAY;GAC9B,MAAMI,UAAQ,YAAY;GAC1B,MAAM,cAAc,YAAY;GAChC,MAAM,cAAc,YAAY;GAChC,IAAI,gBAAgB;AACpB,OAAI,cAAc;AACd,QAAI;AACJ,QAAI,cAAc,QACd,KAAI,MAAM,OAAO,EACb,iBAAgB,CAAC,KAAK,QAAQ,UAAU,UAAU;aAC3C,MAAM,EACb,iBAAgB,CAAC,KAAK,QAAQ,UAAU,SAAS;QAEjD,iBAAgB;AAGxB,QAAI,aAAa,MACb,KAAI,eAAe,UAAU,aAAa,EACtC,cAAa,CAAC,YAAY,aAAa,aAAa;aAC7C,eAAe,SACtB,cAAa,CAAC,WAAW,QAAQ,SAAS,IAAI,YAAY,aAAa;QAEvE,cAAa,CAAC,WAAW,QAAQ,SAAS,aAAa;aAGvD,eAAe,UAAU,aAAa,EACtC,cAAa,aAAa;aACnB,eAAe,SACtB,cAAa,WAAW,QAAQ,SAAS,IAAI,YAAY;QAEzD,cAAa,WAAW,QAAQ,SAAS,YAAY;AAG7D,QAAI,OACA,eAAc;AAElB,QAAI,aAAa,KAAK,CAAC,YAAY,kBAC/B,MAAK,aAAa,IAAI,KAAK,IAAI,SAAS;UAEzC;AACH,QAAI;AACJ,kBAAc,IAAI,aAAa,aAAa;;GAEhD,IAAI;AACJ,OAAI,YAAY,mBAAmB;IAC/B,MAAM,eAAe,UAAU,YAAY,gBAAgB;IAC3D,MAAM,SAAS,WAAW,QAAQ;IAClC,MAAM,QAAQ,WAAW,OAAO;IAChC,IAAI,MAAM,aAAa,aAAa;IACpC,IAAI,OAAO,IAAI,aAAa;AAC5B,YAAO,cAAP;KACI,KAAK;AACD,aAAO,SAAS;AAChB;KACJ,KAAK;AACD,aAAO;AACP;;AAER,YAAO,WAAP;KACI,KAAK;AACD,cAAQ,QAAQ;AAChB;KACJ,KAAK;AACD,cAAQ;AACR;KACJ,KAAK;AACD,UAAI,MAAM,OAAO,EACb,SAAQ;eACD,IAAI,EACX,SAAQ,QAAQ;AAEpB;;AAER,eAAW;KACP;KACA;KACA,OAAO,QAAQ,aAAa;KAC5B,QAAQ,SAAS,aAAa;KAC9B,OAAO,YAAY;KACtB;;AAEL,SAAM,KAAK;IACP;IACA;IACA;IACA,SAAS;KACL;KACA;KACA;KACA;KACA,WAAW;KACX;KACA,aAAa,CACT,GACA,EACH;KACD;KACH;IACJ,CAAC;;AAEN,SAAO;;CAEX,0BAA0B;EACtB,MAAM,EAAE,UAAW,UAAW,KAAK;AAEnC,MADiB,CAAC,UAAU,KAAK,cAAc,CAE3C,QAAO,aAAa,QAAQ,SAAS;EAEzC,IAAI,QAAQ;AACZ,MAAI,MAAM,UAAU,QAChB,SAAQ;WACD,MAAM,UAAU,MACvB,SAAQ;WACD,MAAM,UAAU,QACvB,SAAQ;AAEZ,SAAO;;CAEX,wBAAwB,IAAI;EACxB,MAAM,EAAE,UAAW,OAAO,EAAE,YAAa,QAAS,cAAgB,KAAK;EACvE,MAAM,aAAa,KAAK,gBAAgB;EACxC,MAAM,iBAAiB,KAAK;EAC5B,MAAM,SAAS,WAAW,OAAO;EACjC,IAAI;EACJ,IAAI;AACJ,MAAI,aAAa,OACb,KAAI,QAAQ;AACR,OAAI,KAAK,QAAQ;AACjB,OAAI,eAAe,OACf,aAAY;YACL,eAAe,UAAU;AAChC,gBAAY;AACZ,SAAK,SAAS;UACX;AACH,gBAAY;AACZ,SAAK;;SAEN;AACH,OAAI,KAAK,QAAQ;AACjB,OAAI,eAAe,OACf,aAAY;YACL,eAAe,UAAU;AAChC,gBAAY;AACZ,SAAK,SAAS;UACX;AACH,gBAAY;AACZ,QAAI,KAAK;;;WAGV,aAAa,QACpB,KAAI,QAAQ;AACR,OAAI,KAAK,OAAO;AAChB,OAAI,eAAe,OACf,aAAY;YACL,eAAe,UAAU;AAChC,gBAAY;AACZ,SAAK,SAAS;UACX;AACH,gBAAY;AACZ,SAAK;;SAEN;AACH,OAAI,KAAK,OAAO;AAChB,OAAI,eAAe,OACf,aAAY;YACL,eAAe,UAAU;AAChC,gBAAY;AACZ,SAAK,SAAS;UACX;AACH,gBAAY;AACZ,QAAI,KAAK;;;MAIjB,aAAY;AAEhB,SAAO;GACH;GACA;GACH;;CAER,oBAAoB;AACb,MAAI,KAAK,QAAQ,MAAM,OACnB;EAEJ,MAAM,QAAQ,KAAK;EACnB,MAAM,WAAW,KAAK,QAAQ;AAC9B,MAAI,aAAa,UAAU,aAAa,QACpC,QAAO;GACH,KAAK;GACL,MAAM,KAAK;GACX,QAAQ,MAAM;GACd,OAAO,KAAK;GACf;AAEL,MAAI,aAAa,SAAS,aAAa,SACnC,QAAO;GACH,KAAK,KAAK;GACV,MAAM;GACN,QAAQ,KAAK;GACb,OAAO,MAAM;GAChB;;CAGZ,iBAAiB;EACV,MAAM,EAAE,KAAM,SAAS,EAAE,mBAAqB,MAAO,KAAM,OAAQ,WAAY;AAC/E,MAAI,iBAAiB;AACjB,OAAI,MAAM;AACV,OAAI,YAAY;AAChB,OAAI,SAAS,MAAM,KAAK,OAAO,OAAO;AACtC,OAAI,SAAS;;;CAGrB,qBAAqB,OAAO;EACxB,MAAM,OAAO,KAAK,QAAQ;AAC1B,MAAI,CAAC,KAAK,YAAY,IAAI,CAAC,KAAK,QAC5B,QAAO;EAGX,MAAMJ,UADQ,KAAK,MACC,WAAW,MAAI,EAAE,UAAU,MAAM;AACrD,MAAIA,WAAS,EAET,QADa,KAAK,WAAW,KAAK,WAAWA,QAAM,CAAC,CACxC;AAEhB,SAAO;;CAEd,SAAS,WAAW;EACb,MAAM,OAAO,KAAK,QAAQ;EAC1B,MAAM,MAAM,KAAK;EACjB,MAAM,QAAQ,KAAK,mBAAmB,KAAK,iBAAiB,KAAK,sBAAsB,UAAU;EACjG,IAAI,GAAG;EACP,MAAM,YAAY,IAAI,IAAI,UAAQ;AAC9B,OAAI,CAAC,MAAM,SAAS,CAAC,MAAM,MACvB;AAEJ,OAAI,MAAM;AACV,OAAI,YAAY,MAAM;AACtB,OAAI,cAAc,MAAM;AACxB,OAAI,YAAY,MAAM,cAAc,EAAE,CAAC;AACvC,OAAI,iBAAiB,MAAM;AAC3B,OAAI,WAAW;AACf,OAAI,OAAO,GAAG,GAAG,GAAG,EAAE;AACtB,OAAI,OAAO,GAAG,GAAG,GAAG,EAAE;AACtB,OAAI,QAAQ;AACZ,OAAI,SAAS;;AAEjB,MAAI,KAAK,QACL,MAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;GAC1C,MAAM,OAAO,MAAM;AACnB,OAAI,KAAK,gBACL,UAAS;IACL,GAAG,KAAK;IACR,GAAG,KAAK;IACX,EAAE;IACC,GAAG,KAAK;IACR,GAAG,KAAK;IACX,EAAE,KAAK;AAEZ,OAAI,KAAK,UACL,UAAS;IACL,GAAG,KAAK;IACR,GAAG,KAAK;IACX,EAAE;IACC,GAAG,KAAK;IACR,GAAG,KAAK;IACX,EAAE;IACC,OAAO,KAAK;IACZ,OAAO,KAAK;IACZ,YAAY,KAAK;IACjB,kBAAkB,KAAK;IAC1B,CAAC;;;CAKrB,aAAa;EACN,MAAM,EAAE,OAAQ,KAAM,SAAS,EAAE,QAAS,WAAa;EACvD,MAAM,aAAa,OAAO,WAAW,KAAK,YAAY,CAAC;EACvD,MAAM,YAAY,OAAO,UAAU,WAAW,QAAQ;AACtD,MAAI,CAAC,UACD;EAEJ,MAAM,gBAAgB,KAAK,WAAW,KAAK,WAAW,EAAE,CAAC,CAAC;EAC1D,MAAM,cAAc,KAAK;EACzB,IAAI,IAAI,IAAI,IAAI;AAChB,MAAI,KAAK,cAAc,EAAE;AACrB,QAAK,YAAY,OAAO,KAAK,MAAM,UAAU,GAAG,YAAY;AAC5D,QAAK,YAAY,OAAO,KAAK,OAAO,cAAc,GAAG,gBAAgB;AACrE,QAAK,KAAK;SACP;AACH,QAAK,YAAY,OAAO,KAAK,KAAK,UAAU,GAAG,YAAY;AAC3D,QAAK,YAAY,OAAO,KAAK,QAAQ,cAAc,GAAG,gBAAgB;AACtE,QAAK,KAAK;;AAEd,MAAI,MAAM;AACV,MAAI,YAAY,WAAW;AAC3B,MAAI,cAAc,WAAW;AAC7B,MAAI,WAAW;AACf,MAAI,OAAO,IAAI,GAAG;AAClB,MAAI,OAAO,IAAI,GAAG;AAClB,MAAI,QAAQ;AACZ,MAAI,SAAS;;CAEpB,WAAW,WAAW;AAEf,MAAI,CADgB,KAAK,QAAQ,MAChB,QACb;EAEJ,MAAM,MAAM,KAAK;EACjB,MAAM,OAAO,KAAK,mBAAmB;AACrC,MAAI,KACA,UAAS,KAAK,KAAK;EAEvB,MAAM,QAAQ,KAAK,cAAc,UAAU;AAC3C,OAAK,MAAM,QAAQ,OAAM;GACrB,MAAM,oBAAoB,KAAK;GAC/B,MAAM,WAAW,KAAK;GACtB,MAAM,QAAQ,KAAK;GACnB,MAAM,IAAI,KAAK;AACf,cAAW,KAAK,OAAO,GAAG,GAAG,UAAU,kBAAkB;;AAE7D,MAAI,KACA,YAAW,IAAI;;CAG1B,YAAY;EACL,MAAM,EAAE,KAAM,SAAS,EAAE,UAAW,OAAQ,cAAgB;AAC5D,MAAI,CAAC,MAAM,QACP;EAEJ,MAAM,OAAO,OAAO,MAAM,KAAK;EAC/B,MAAM,UAAU,UAAU,MAAM,QAAQ;EACxC,MAAM,QAAQ,MAAM;EACpB,IAAI,SAAS,KAAK,aAAa;AAC/B,MAAI,aAAa,YAAY,aAAa,YAAY,SAAS,SAAS,EAAE;AACtE,aAAU,QAAQ;AAClB,OAAI,QAAQ,MAAM,KAAK,CACnB,WAAU,KAAK,cAAc,MAAM,KAAK,SAAS;QAGrD,WAAU,QAAQ;EAEtB,MAAM,EAAE,QAAS,QAAS,UAAW,aAAc,UAAU,MAAM,QAAQ,UAAU,MAAM;AAC3F,aAAW,KAAK,MAAM,MAAM,GAAG,GAAG,MAAM;GACpC,OAAO,MAAM;GACb;GACA;GACA,WAAW,WAAW,OAAO,UAAU,QAAQ;GAC/C,cAAc;GACd,aAAa,CACT,QACA,OACH;GACJ,CAAC;;CAEN,KAAK,WAAW;AACZ,MAAI,CAAC,KAAK,YAAY,CAClB;AAEJ,OAAK,gBAAgB;AACrB,OAAK,SAAS,UAAU;AACxB,OAAK,YAAY;AACjB,OAAK,WAAW;AAChB,OAAK,WAAW,UAAU;;CAEjC,UAAU;EACH,MAAM,OAAO,KAAK;EAClB,MAAM,KAAK,KAAK,SAAS,KAAK,MAAM,KAAK;EACzC,MAAM,KAAK,eAAe,KAAK,QAAQ,KAAK,KAAK,GAAG,GAAG;EACvD,MAAM,KAAK,eAAe,KAAK,UAAU,KAAK,OAAO,GAAG,EAAE;AAC1D,MAAI,CAAC,KAAK,YAAY,IAAI,KAAK,SAAS,MAAM,UAAU,KACpD,QAAO,CACH;GACI,GAAG;GACH,OAAO,cAAY;AACf,SAAK,KAAK,UAAU;;GAE3B,CACJ;AAEL,SAAO;GACH;IACI,GAAG;IACH,OAAO,cAAY;AACf,UAAK,gBAAgB;AACrB,UAAK,SAAS,UAAU;AACxB,UAAK,WAAW;;IAEvB;GACD;IACI,GAAG;IACH,YAAU;AACN,UAAK,YAAY;;IAExB;GACD;IACI,GAAG;IACH,OAAO,cAAY;AACf,UAAK,WAAW,UAAU;;IAEjC;GACJ;;CAER,wBAAwB,MAAM;EACvB,MAAM,QAAQ,KAAK,MAAM,8BAA8B;EACvD,MAAM,SAAS,KAAK,OAAO;EAC3B,MAAM,SAAS,EAAE;EACjB,IAAI,GAAG;AACP,OAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;GAC1C,MAAM,OAAO,MAAM;AACnB,OAAI,KAAK,YAAY,KAAK,OAAO,CAAC,QAAQ,KAAK,SAAS,MACpD,QAAO,KAAK,KAAK;;AAGzB,SAAO;;CAEd,wBAAwB,SAAO;EACxB,MAAM,OAAO,KAAK,QAAQ,MAAM,WAAW,KAAK,WAAWA,QAAM,CAAC;AAClE,SAAO,OAAO,KAAK,KAAK;;CAE/B,aAAa;EACN,MAAM,WAAW,KAAK,wBAAwB,EAAE,CAAC;AACjD,UAAQ,KAAK,cAAc,GAAG,KAAK,QAAQ,KAAK,UAAU;;;AAIlE,IAAM,gBAAN,MAAoB;CAChB,YAAY,MAAM,OAAO,UAAS;AAC9B,OAAK,OAAO;AACZ,OAAK,QAAQ;AACb,OAAK,WAAW;AAChB,OAAK,QAAQ,OAAO,OAAO,KAAK;;CAEpC,UAAU,MAAM;AACZ,SAAO,OAAO,UAAU,cAAc,KAAK,KAAK,KAAK,WAAW,KAAK,UAAU;;CAEtF,SAAS,MAAM;EACR,MAAM,QAAQ,OAAO,eAAe,KAAK;EACzC,IAAI;AACJ,MAAI,kBAAkB,MAAM,CACxB,eAAc,KAAK,SAAS,MAAM;EAEtC,MAAM,QAAQ,KAAK;EACnB,MAAM,KAAK,KAAK;EAChB,MAAM,QAAQ,KAAK,QAAQ,MAAM;AACjC,MAAI,CAAC,GACD,OAAM,IAAI,MAAM,6BAA6B,KAAK;AAEtD,MAAI,MAAM,MACN,QAAO;AAEX,QAAM,MAAM;AACZ,mBAAiB,MAAM,OAAO,YAAY;AAC1C,MAAI,KAAK,SACL,UAAS,SAAS,KAAK,IAAI,KAAK,UAAU;AAE9C,SAAO;;CAEd,IAAI,IAAI;AACD,SAAO,KAAK,MAAM;;CAEzB,WAAW,MAAM;EACV,MAAM,QAAQ,KAAK;EACnB,MAAM,KAAK,KAAK;EAChB,MAAM,QAAQ,KAAK;AACnB,MAAI,MAAM,MACN,QAAO,MAAM;AAEjB,MAAI,SAAS,MAAM,SAAS,QAAQ;AAChC,UAAO,SAAS,OAAO;AACvB,OAAI,KAAK,SACL,QAAO,UAAU;;;;AAKjC,SAAS,iBAAiB,MAAM,OAAO,aAAa;CAChD,MAAM,eAAe,MAAM,OAAO,OAAO,KAAK,EAAE;EAC5C,cAAc,SAAS,IAAI,YAAY,GAAG,EAAE;EAC5C,SAAS,IAAI,MAAM;EACnB,KAAK;EACR,CAAC;AACF,UAAS,IAAI,OAAO,aAAa;AACjC,KAAI,KAAK,cACL,eAAc,OAAO,KAAK,cAAc;AAE5C,KAAI,KAAK,YACL,UAAS,SAAS,OAAO,KAAK,YAAY;;AAGlD,SAAS,cAAc,OAAO,QAAQ;AAClC,QAAO,KAAK,OAAO,CAAC,SAAS,aAAW;EACpC,MAAM,gBAAgB,SAAS,MAAM,IAAI;EACzC,MAAM,aAAa,cAAc,KAAK;EACtC,MAAM,cAAc,CAChB,MACH,CAAC,OAAO,cAAc,CAAC,KAAK,IAAI;EACjC,MAAM,QAAQ,OAAO,UAAU,MAAM,IAAI;EACzC,MAAM,aAAa,MAAM,KAAK;EAC9B,MAAM,cAAc,MAAM,KAAK,IAAI;AACnC,WAAS,MAAM,aAAa,YAAY,aAAa,WAAW;GAClE;;AAEN,SAAS,kBAAkB,OAAO;AAC9B,QAAO,QAAQ,SAAS,cAAc;;AAG1C,IAAM,WAAN,MAAe;CACX,cAAa;AACT,OAAK,cAAc,IAAI,cAAc,mBAAmB,YAAY,KAAK;AACzE,OAAK,WAAW,IAAI,cAAc,SAAS,WAAW;AACtD,OAAK,UAAU,IAAI,cAAc,QAAQ,UAAU;AACnD,OAAK,SAAS,IAAI,cAAc,OAAO,SAAS;AAChD,OAAK,mBAAmB;GACpB,KAAK;GACL,KAAK;GACL,KAAK;GACR;;CAER,IAAI,GAAG,MAAM;AACN,OAAK,MAAM,YAAY,KAAK;;CAEhC,OAAO,GAAG,MAAM;AACZ,OAAK,MAAM,cAAc,KAAK;;CAErC,eAAe,GAAG,MAAM;AACjB,OAAK,MAAM,YAAY,MAAM,KAAK,YAAY;;CAErD,YAAY,GAAG,MAAM;AACd,OAAK,MAAM,YAAY,MAAM,KAAK,SAAS;;CAElD,WAAW,GAAG,MAAM;AACb,OAAK,MAAM,YAAY,MAAM,KAAK,QAAQ;;CAEjD,UAAU,GAAG,MAAM;AACZ,OAAK,MAAM,YAAY,MAAM,KAAK,OAAO;;CAEhD,cAAc,IAAI;AACX,SAAO,KAAK,KAAK,IAAI,KAAK,aAAa,aAAa;;CAE3D,WAAW,IAAI;AACR,SAAO,KAAK,KAAK,IAAI,KAAK,UAAU,UAAU;;CAErD,UAAU,IAAI;AACP,SAAO,KAAK,KAAK,IAAI,KAAK,SAAS,SAAS;;CAEnD,SAAS,IAAI;AACN,SAAO,KAAK,KAAK,IAAI,KAAK,QAAQ,QAAQ;;CAEjD,kBAAkB,GAAG,MAAM;AACpB,OAAK,MAAM,cAAc,MAAM,KAAK,YAAY;;CAEvD,eAAe,GAAG,MAAM;AACjB,OAAK,MAAM,cAAc,MAAM,KAAK,SAAS;;CAEpD,cAAc,GAAG,MAAM;AAChB,OAAK,MAAM,cAAc,MAAM,KAAK,QAAQ;;CAEnD,aAAa,GAAG,MAAM;AACf,OAAK,MAAM,cAAc,MAAM,KAAK,OAAO;;CAElD,MAAM,QAAQ,MAAM,eAAe;AAC5B,GACI,GAAG,KACN,CAAC,SAAS,QAAM;GACb,MAAM,MAAM,iBAAiB,KAAK,oBAAoB,IAAI;AAC1D,OAAI,iBAAiB,IAAI,UAAU,IAAI,IAAI,QAAQ,KAAK,WAAW,IAAI,GACnE,MAAK,MAAM,QAAQ,KAAK,IAAI;OAE5B,MAAK,MAAM,SAAO;IACd,MAAM,UAAU,iBAAiB,KAAK,oBAAoB,KAAK;AAC/D,SAAK,MAAM,QAAQ,SAAS,KAAK;KACnC;IAER;;CAET,MAAM,QAAQ,YAAU,WAAW;EAC5B,MAAM,cAAc,YAAY,OAAO;AACvC,WAAS,UAAU,WAAW,cAAc,EAAE,EAAE,UAAU;AAC1D,aAAS,QAAQ,UAAU;AAC3B,WAAS,UAAU,UAAU,cAAc,EAAE,EAAE,UAAU;;CAEhE,oBAAoB,MAAM;AACnB,OAAI,IAAI,IAAI,GAAG,IAAI,KAAK,iBAAiB,QAAQ,KAAI;GACjD,MAAM,MAAM,KAAK,iBAAiB;AAClC,OAAI,IAAI,UAAU,KAAK,CACnB,QAAO;;AAGf,SAAO,KAAK;;CAEnB,KAAK,IAAI,eAAe,MAAM;EACvB,MAAM,OAAO,cAAc,IAAI,GAAG;AAClC,MAAI,SAAS,OACT,OAAM,IAAI,MAAM,OAAM,KAAK,4BAA2B,OAAO,IAAI;AAErE,SAAO;;;AAGf,IAAI,2BAA2B,IAAI,UAAU;AAE7C,IAAM,gBAAN,MAAoB;CAChB,cAAa;AACT,OAAK,QAAQ,EAAE;;CAEtB,OAAO,OAAO,MAAM,MAAM,QAAQ;AAC3B,MAAI,SAAS,cAAc;AACvB,QAAK,QAAQ,KAAK,mBAAmB,OAAO,KAAK;AACjD,QAAK,QAAQ,KAAK,OAAO,OAAO,UAAU;;EAE9C,MAAMS,gBAAc,SAAS,KAAK,aAAa,MAAM,CAAC,OAAO,OAAO,GAAG,KAAK,aAAa,MAAM;EAC/F,MAAM,SAAS,KAAK,QAAQA,eAAa,OAAO,MAAM,KAAK;AAC3D,MAAI,SAAS,gBAAgB;AACzB,QAAK,QAAQA,eAAa,OAAO,OAAO;AACxC,QAAK,QAAQ,KAAK,OAAO,OAAO,YAAY;;AAEhD,SAAO;;CAEd,QAAQ,eAAa,OAAO,MAAM,MAAM;AACjC,SAAO,QAAQ,EAAE;AACjB,OAAK,MAAM,cAAcA,eAAY;GACjC,MAAM,SAAS,WAAW;GAC1B,MAAM,SAAS,OAAO;GACtB,MAAM,SAAS;IACX;IACA;IACA,WAAW;IACd;AACD,OAAI,SAAS,QAAQ,QAAQ,OAAO,KAAK,SAAS,KAAK,WACnD,QAAO;;AAGf,SAAO;;CAEX,aAAa;AACT,MAAI,CAAC,cAAc,KAAK,OAAO,EAAE;AAC7B,QAAK,YAAY,KAAK;AACtB,QAAK,SAAS;;;CAGzB,aAAa,OAAO;AACb,MAAI,KAAK,OACL,QAAO,KAAK;EAEhB,MAAMA,gBAAc,KAAK,SAAS,KAAK,mBAAmB,MAAM;AAChE,OAAK,oBAAoB,MAAM;AAC/B,SAAOA;;CAEX,mBAAmB,OAAO,KAAK;EAC3B,MAAM,SAAS,SAAS,MAAM;EAC9B,MAAM,UAAU,eAAe,OAAO,WAAW,OAAO,QAAQ,SAAS,EAAE,CAAC;EAC5E,MAAMC,YAAU,WAAW,OAAO;AAClC,SAAO,YAAY,SAAS,CAAC,MAAM,EAAE,GAAG,kBAAkB,OAAOA,WAAS,SAAS,IAAI;;CAE9F,oBAAoB,OAAO;EACpB,MAAM,sBAAsB,KAAK,aAAa,EAAE;EAChD,MAAMD,gBAAc,KAAK;EACzB,MAAM,QAAQ,GAAG,MAAI,EAAE,QAAQ,MAAI,CAAC,EAAE,MAAM,MAAI,EAAE,OAAO,OAAO,EAAE,OAAO,GAAG,CAAC;AAC7E,OAAK,QAAQ,KAAK,qBAAqBA,cAAY,EAAE,OAAO,OAAO;AACnE,OAAK,QAAQ,KAAKA,eAAa,oBAAoB,EAAE,OAAO,QAAQ;;;AAG3E,SAAS,WAAW,QAAQ;CACzB,MAAM,WAAW,EAAE;CACnB,MAAMC,YAAU,EAAE;CAClB,MAAM,OAAO,OAAO,KAAK,SAAS,QAAQ,MAAM;AAChD,MAAI,IAAI,IAAI,GAAG,IAAI,KAAK,QAAQ,IAC5B,WAAQ,KAAK,SAAS,UAAU,KAAK,GAAG,CAAC;CAE7C,MAAM,QAAQ,OAAO,WAAW,EAAE;AAClC,MAAI,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAI;EACjC,MAAM,SAAS,MAAM;AACrB,MAAIA,UAAQ,QAAQ,OAAO,KAAK,IAAI;AAChC,aAAQ,KAAK,OAAO;AACpB,YAAS,OAAO,MAAM;;;AAG9B,QAAO;EACH;EACA;EACH;;AAEL,SAAS,QAAQ,SAAS,KAAK;AAC3B,KAAI,CAAC,OAAO,YAAY,MACpB,QAAO;AAEX,KAAI,YAAY,KACZ,QAAO,EAAE;AAEb,QAAO;;AAEX,SAAS,kBAAkB,OAAO,EAAE,oBAAU,YAAa,SAAS,KAAK;CACrE,MAAM,SAAS,EAAE;CACjB,MAAM,UAAU,MAAM,YAAY;AAClC,MAAK,MAAM,UAAUA,WAAQ;EACzB,MAAM,KAAK,OAAO;EAClB,MAAM,OAAO,QAAQ,QAAQ,KAAK,IAAI;AACtC,MAAI,SAAS,KACT;AAEJ,SAAO,KAAK;GACR;GACA,SAAS,WAAW,MAAM,QAAQ;IAC9B;IACA,OAAO,SAAS;IACnB,EAAE,MAAM,QAAQ;GACpB,CAAC;;AAEN,QAAO;;AAEX,SAAS,WAAW,QAAQ,EAAE,QAAS,SAAU,MAAM,SAAS;CAC5D,MAAM,OAAO,OAAO,gBAAgB,OAAO;CAC3C,MAAM,SAAS,OAAO,gBAAgB,MAAM,KAAK;AACjD,KAAI,SAAS,OAAO,SAChB,QAAO,KAAK,OAAO,SAAS;AAEhC,QAAO,OAAO,eAAe,QAAQ,SAAS,CAC1C,GACH,EAAE;EACC,YAAY;EACZ,WAAW;EACX,SAAS;EACZ,CAAC;;AAGN,SAAS,aAAa,MAAM,SAAS;CACjC,MAAM,kBAAkB,SAAS,SAAS,SAAS,EAAE;AAErD,UADwB,QAAQ,YAAY,EAAE,EAAE,SAAS,EAAE,EACrC,aAAa,QAAQ,aAAa,gBAAgB,aAAa;;AAEzF,SAAS,0BAA0B,IAAI,WAAW;CAC9C,IAAI,OAAO;AACX,KAAI,OAAO,UACP,QAAO;UACA,OAAO,UACd,QAAO,cAAc,MAAM,MAAM;AAErC,QAAO;;AAEX,SAAS,0BAA0B,MAAM,WAAW;AAChD,QAAO,SAAS,YAAY,YAAY;;AAE5C,SAAS,cAAc,IAAI;AACvB,KAAI,OAAO,OAAO,OAAO,OAAO,OAAO,IACnC,QAAO;;AAGf,SAAS,iBAAiB,UAAU;AAChC,KAAI,aAAa,SAAS,aAAa,SACnC,QAAO;AAEX,KAAI,aAAa,UAAU,aAAa,QACpC,QAAO;;AAGf,SAAS,cAAc,IAAI,GAAG,cAAc;AACxC,KAAI,cAAc,GAAG,CACjB,QAAO;AAEX,MAAK,MAAM,QAAQ,cAAa;EAC5B,MAAM,OAAO,KAAK,QAAQ,iBAAiB,KAAK,SAAS,IAAI,GAAG,SAAS,KAAK,cAAc,GAAG,GAAG,aAAa,CAAC;AAChH,MAAI,KACA,QAAO;;AAGf,OAAM,IAAI,MAAM,6BAA6B,GAAG,qDAAqD;;AAEzG,SAAS,mBAAmB,IAAI,MAAM,SAAS;AAC3C,KAAI,QAAQ,OAAO,cAAc,GAC7B,QAAO,EACH,MACH;;AAGT,SAAS,yBAAyB,IAAI,QAAQ;AAC1C,KAAI,OAAO,QAAQ,OAAO,KAAK,UAAU;EACrC,MAAM,UAAU,OAAO,KAAK,SAAS,QAAQ,MAAI,EAAE,YAAY,MAAM,EAAE,YAAY,GAAG;AACtF,MAAI,QAAQ,OACR,QAAO,mBAAmB,IAAI,KAAK,QAAQ,GAAG,IAAI,mBAAmB,IAAI,KAAK,QAAQ,GAAG;;AAGjG,QAAO,EAAE;;AAEb,SAAS,iBAAiB,QAAQ,SAAS;CACvC,MAAM,gBAAgB,UAAU,OAAO,SAAS,EAC5C,QAAQ,EAAE,EACb;CACD,MAAM,eAAe,QAAQ,UAAU,EAAE;CACzC,MAAM,iBAAiB,aAAa,OAAO,MAAM,QAAQ;CACzD,MAAMT,WAAS,OAAO,OAAO,KAAK;AAClC,QAAO,KAAK,aAAa,CAAC,SAAS,OAAK;EACpC,MAAM,YAAY,aAAa;AAC/B,MAAI,CAAC,SAAS,UAAU,CACpB,QAAO,QAAQ,MAAM,0CAA0C,KAAK;AAExE,MAAI,UAAU,OACV,QAAO,QAAQ,KAAK,kDAAkD,KAAK;EAE/E,MAAM,OAAO,cAAc,IAAI,WAAW,yBAAyB,IAAI,OAAO,EAAE,SAAS,OAAO,UAAU,MAAM;EAChH,MAAM,YAAY,0BAA0B,MAAM,eAAe;EACjE,MAAM,sBAAsB,cAAc,UAAU,EAAE;AACtD,WAAO,MAAM,QAAQ,OAAO,OAAO,KAAK,EAAE;GACtC,EACI,MACH;GACD;GACA,oBAAoB;GACpB,oBAAoB;GACvB,CAAC;GACJ;AACF,QAAO,KAAK,SAAS,SAAS,YAAU;EACpC,MAAM,OAAO,QAAQ,QAAQ,OAAO;EACpC,MAAM,YAAY,QAAQ,aAAa,aAAa,MAAM,QAAQ;EAElE,MAAM,uBADkB,UAAU,SAAS,EAAE,EACD,UAAU,EAAE;AACxD,SAAO,KAAK,oBAAoB,CAAC,SAAS,cAAY;GAClD,MAAM,OAAO,0BAA0B,WAAW,UAAU;GAC5D,MAAM,KAAK,QAAQ,OAAO,aAAa;AACvC,YAAO,MAAMA,SAAO,OAAO,OAAO,OAAO,KAAK;AAC9C,WAAQA,SAAO,KAAK;IAChB,EACI,MACH;IACD,aAAa;IACb,oBAAoB;IACvB,CAAC;IACJ;GACJ;AACF,QAAO,KAAKA,SAAO,CAAC,SAAS,QAAM;EAC/B,MAAM,QAAQA,SAAO;AACrB,UAAQ,OAAO,CACX,SAAS,OAAO,MAAM,OACtB,SAAS,MACZ,CAAC;GACJ;AACF,QAAOA;;AAEX,SAAS,YAAY,QAAQ;CACzB,MAAM,UAAU,OAAO,YAAY,OAAO,UAAU,EAAE;AACtD,SAAQ,UAAU,eAAe,QAAQ,SAAS,EAAE,CAAC;AACrD,SAAQ,SAAS,iBAAiB,QAAQ,QAAQ;;AAEtD,SAAS,SAAS,MAAM;AACpB,QAAO,QAAQ,EAAE;AACjB,MAAK,WAAW,KAAK,YAAY,EAAE;AACnC,MAAK,SAAS,KAAK,UAAU,EAAE;AAC/B,QAAO;;AAEX,SAAS,WAAW,QAAQ;AACxB,UAAS,UAAU,EAAE;AACrB,QAAO,OAAO,SAAS,OAAO,KAAK;AACnC,aAAY,OAAO;AACnB,QAAO;;AAEX,IAAM,2BAAW,IAAI,KAAK;AAC1B,IAAM,6BAAa,IAAI,KAAK;AAC5B,SAAS,WAAW,UAAU,UAAU;CACpC,IAAI,OAAO,SAAS,IAAI,SAAS;AACjC,KAAI,CAAC,MAAM;AACP,SAAO,UAAU;AACjB,WAAS,IAAI,UAAU,KAAK;AAC5B,aAAW,IAAI,KAAK;;AAExB,QAAO;;AAEX,IAAM,cAAc,OAAK,KAAK,QAAM;CAChC,MAAM,OAAO,iBAAiB,KAAK,IAAI;AACvC,KAAI,SAAS,OACT,OAAI,IAAI,KAAK;;AAGrB,IAAM,SAAN,MAAa;CACT,YAAY,QAAO;AACf,OAAK,UAAU,WAAW,OAAO;AACjC,OAAK,8BAAc,IAAI,KAAK;AAC5B,OAAK,iCAAiB,IAAI,KAAK;;CAEnC,IAAI,WAAW;AACX,SAAO,KAAK,QAAQ;;CAExB,IAAI,OAAO;AACP,SAAO,KAAK,QAAQ;;CAExB,IAAI,KAAK,MAAM;AACX,OAAK,QAAQ,OAAO;;CAExB,IAAI,OAAO;AACP,SAAO,KAAK,QAAQ;;CAExB,IAAI,KAAK,MAAM;AACX,OAAK,QAAQ,OAAO,SAAS,KAAK;;CAEtC,IAAI,UAAU;AACV,SAAO,KAAK,QAAQ;;CAExB,IAAI,QAAQ,SAAS;AACjB,OAAK,QAAQ,UAAU;;CAE3B,IAAI,UAAU;AACV,SAAO,KAAK,QAAQ;;CAExB,SAAS;EACL,MAAM,SAAS,KAAK;AACpB,OAAK,YAAY;AACjB,cAAY,OAAO;;CAEvB,aAAa;AACT,OAAK,YAAY,OAAO;AACxB,OAAK,eAAe,OAAO;;CAElC,iBAAiB,aAAa;AACvB,SAAO,WAAW,mBAAiB,CAC3B,CACI,YAAY,eACZ,GACH,CACJ,CAAC;;CAEb,0BAA0B,aAAa,YAAY;AAC5C,SAAO,WAAW,GAAG,YAAY,cAAc,oBAAkB,CACzD,CACI,YAAY,YAAY,eAAe,cACvC,eAAe,aAClB,EACD,CACI,YAAY,eACZ,GACH,CACJ,CAAC;;CAEb,wBAAwB,aAAa,aAAa;AAC3C,SAAO,WAAW,GAAG,YAAY,GAAG,qBAAmB,CAC/C;GACI,YAAY,YAAY,YAAY;GACpC,YAAY;GACZ,YAAY;GACZ;GACH,CACJ,CAAC;;CAEb,gBAAgB,QAAQ;EACjB,MAAM,KAAK,OAAO;EAClB,MAAM,OAAO,KAAK;AAClB,SAAO,WAAW,GAAG,KAAK,UAAU,YAAU,CACtC,CACI,WAAW,MACX,GAAG,OAAO,0BAA0B,EAAE,CACzC,CACJ,CAAC;;CAEb,cAAc,WAAW,YAAY;EAC9B,MAAM,cAAc,KAAK;EACzB,IAAI,QAAQ,YAAY,IAAI,UAAU;AACtC,MAAI,CAAC,SAAS,YAAY;AACtB,2BAAQ,IAAI,KAAK;AACjB,eAAY,IAAI,WAAW,MAAM;;AAErC,SAAO;;CAEd,gBAAgB,WAAW,UAAU,YAAY;EAC1C,MAAM,EAAE,SAAU,SAAU;EAC5B,MAAM,QAAQ,KAAK,cAAc,WAAW,WAAW;EACvD,MAAM,SAAS,MAAM,IAAI,SAAS;AAClC,MAAI,OACA,QAAO;EAEX,MAAM,yBAAS,IAAI,KAAK;AACxB,WAAS,SAAS,SAAO;AACrB,OAAI,WAAW;AACX,WAAO,IAAI,UAAU;AACrB,SAAK,SAAS,QAAM,WAAW,QAAQ,WAAW,IAAI,CAAC;;AAE3D,QAAK,SAAS,QAAM,WAAW,QAAQ,SAAS,IAAI,CAAC;AACrD,QAAK,SAAS,QAAM,WAAW,QAAQ,UAAU,SAAS,EAAE,EAAE,IAAI,CAAC;AACnE,QAAK,SAAS,QAAM,WAAW,QAAQ,UAAU,IAAI,CAAC;AACtD,QAAK,SAAS,QAAM,WAAW,QAAQ,aAAa,IAAI,CAAC;IAC3D;EACF,MAAM,QAAQ,MAAM,KAAK,OAAO;AAChC,MAAI,MAAM,WAAW,EACjB,OAAM,KAAK,OAAO,OAAO,KAAK,CAAC;AAEnC,MAAI,WAAW,IAAI,SAAS,CACxB,OAAM,IAAI,UAAU,MAAM;AAE9B,SAAO;;CAEd,oBAAoB;EACb,MAAM,EAAE,SAAU,SAAU;AAC5B,SAAO;GACH;GACA,UAAU,SAAS,EAAE;GACrB,SAAS,SAAS,SAAS,EAAE;GAC7B,EACI,MACH;GACD;GACA;GACH;;CAER,oBAAoB,QAAQ,SAAO,SAAS,WAAW,CAChD,GACH,EAAE;EACC,MAAM,SAAS,EACX,SAAS,MACZ;EACD,MAAM,EAAE,UAAW,gBAAiB,YAAY,KAAK,gBAAgB,QAAQ,SAAS;EACtF,IAAI,UAAU;AACd,MAAI,YAAY,UAAUE,QAAM,EAAE;AAC9B,UAAO,UAAU;AACjB,aAAU,WAAW,QAAQ,GAAG,SAAS,GAAG;GAC5C,MAAM,cAAc,KAAK,eAAe,QAAQ,SAAS,YAAY;AACrE,aAAU,eAAe,UAAU,SAAS,YAAY;;AAE5D,OAAK,MAAM,QAAQA,QACf,QAAO,QAAQ,QAAQ;AAE3B,SAAO;;CAEd,eAAe,QAAQ,SAAS,WAAW,CACpC,GACH,EAAE,oBAAoB;EACnB,MAAM,EAAE,aAAc,YAAY,KAAK,gBAAgB,QAAQ,SAAS;AACxE,SAAO,SAAS,QAAQ,GAAG,eAAe,UAAU,SAAS,QAAW,mBAAmB,GAAG;;;AAGtG,SAAS,YAAY,eAAe,QAAQ,UAAU;CAClD,IAAI,QAAQ,cAAc,IAAI,OAAO;AACrC,KAAI,CAAC,OAAO;AACR,0BAAQ,IAAI,KAAK;AACjB,gBAAc,IAAI,QAAQ,MAAM;;CAEpC,MAAM,WAAW,SAAS,MAAM;CAChC,IAAI,SAAS,MAAM,IAAI,SAAS;AAChC,KAAI,CAAC,QAAQ;AAET,WAAS;GACL,UAFa,gBAAgB,QAAQ,SAAS;GAG9C,aAAa,SAAS,QAAQ,MAAI,CAAC,EAAE,aAAa,CAAC,SAAS,QAAQ,CAAC;GACxE;AACD,QAAM,IAAI,UAAU,OAAO;;AAE/B,QAAO;;AAEX,IAAM,eAAe,UAAQ,SAAS,MAAM,IAAI,OAAO,oBAAoB,MAAM,CAAC,MAAM,QAAM,WAAW,MAAM,KAAK,CAAC;AACrH,SAAS,YAAY,OAAO,SAAO;CAC/B,MAAM,EAAE,cAAe,gBAAiB,aAAa,MAAM;AAC3D,MAAK,MAAM,QAAQA,SAAM;EACrB,MAAM,aAAa,aAAa,KAAK;EACrC,MAAM,YAAY,YAAY,KAAK;EACnC,MAAM,SAAS,aAAa,eAAe,MAAM;AACjD,MAAI,eAAe,WAAW,MAAM,IAAI,YAAY,MAAM,KAAK,aAAa,QAAQ,MAAM,CACtF,QAAO;;AAGf,QAAO;;AAGX,IAAI,UAAU;AAEd,IAAM,kBAAkB;CACpB;CACA;CACA;CACA;CACA;CACH;AACD,SAAS,qBAAqB,UAAU,MAAM;AAC1C,QAAO,aAAa,SAAS,aAAa,YAAY,gBAAgB,QAAQ,SAAS,KAAK,MAAM,SAAS;;AAE/G,SAAS,cAAc,IAAI,IAAI;AAC3B,QAAO,SAAS,GAAG,GAAG;AAClB,SAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;;;AAG3D,SAAS,qBAAqB,SAAS;CACnC,MAAM,QAAQ,QAAQ;CACtB,MAAM,mBAAmB,MAAM,QAAQ;AACvC,OAAM,cAAc,cAAc;AAClC,UAAS,oBAAoB,iBAAiB,YAAY,CACtD,QACH,EAAE,MAAM;;AAEb,SAAS,oBAAoB,SAAS;CAClC,MAAM,QAAQ,QAAQ;CACtB,MAAM,mBAAmB,MAAM,QAAQ;AACvC,UAAS,oBAAoB,iBAAiB,YAAY,CACtD,QACH,EAAE,MAAM;;AAEZ,SAAS,UAAU,MAAM;AACtB,KAAI,iBAAiB,IAAI,OAAO,SAAS,SACrC,QAAO,SAAS,eAAe,KAAK;UAC7B,QAAQ,KAAK,OACpB,QAAO,KAAK;AAEhB,KAAI,QAAQ,KAAK,OACb,QAAO,KAAK;AAEhB,QAAO;;AAEX,IAAM,YAAY,EAAE;AACpB,IAAM,YAAY,QAAM;CACpB,MAAM,SAAS,UAAU,IAAI;AAC7B,QAAO,OAAO,OAAO,UAAU,CAAC,QAAQ,MAAI,EAAE,WAAW,OAAO,CAAC,KAAK;;AAE1E,SAAS,gBAAgB,KAAK,OAAO,MAAM;CACvC,MAAM,OAAO,OAAO,KAAK,IAAI;AAC7B,MAAK,MAAM,OAAO,MAAK;EACnB,MAAM,SAAS,CAAC;AAChB,MAAI,UAAU,OAAO;GACjB,MAAM,QAAQ,IAAI;AAClB,UAAO,IAAI;AACX,OAAI,OAAO,KAAK,SAAS,MACrB,KAAI,SAAS,QAAQ;;;;AAKpC,SAAS,mBAAmB,GAAG,WAAW,aAAa,SAAS;AAC7D,KAAI,CAAC,eAAe,EAAE,SAAS,WAC3B,QAAO;AAEX,KAAI,QACA,QAAO;AAEX,QAAO;;AAEX,IAAM,QAAN,MAAY;CACR,OAAO,WAAW;CAClB,OAAO,YAAY;CACnB,OAAO,YAAY;CACnB,OAAO,WAAW;CAClB,OAAO,UAAU;CACjB,OAAO,WAAW;CAClB,OAAO,SAAS,GAAG,OAAO;AACtB,WAAS,IAAI,GAAG,MAAM;AACtB,qBAAmB;;CAEvB,OAAO,WAAW,GAAG,OAAO;AACxB,WAAS,OAAO,GAAG,MAAM;AACzB,qBAAmB;;CAEvB,YAAY,MAAM,YAAW;EACzB,MAAM,SAAS,KAAK,SAAS,IAAI,OAAO,WAAW;EACnD,MAAM,gBAAgB,UAAU,KAAK;EACrC,MAAM,gBAAgB,SAAS,cAAc;AAC7C,MAAI,cACA,OAAM,IAAI,MAAM,8CAA+C,cAAc,KAAK,oDAA2D,cAAc,OAAO,KAAK,mBAAoB;EAE/L,MAAM,UAAU,OAAO,eAAe,OAAO,mBAAmB,EAAE,KAAK,YAAY,CAAC;AACpF,OAAK,WAAW,KAAK,OAAO,aAAY,gBAAgB,cAAc,IAAG;AACzE,OAAK,SAAS,aAAa,OAAO;EAClC,MAAM,UAAU,KAAK,SAAS,eAAe,eAAe,QAAQ,YAAY;EAChF,MAAM,SAAS,WAAW,QAAQ;EAClC,MAAM,SAAS,UAAU,OAAO;EAChC,MAAM,QAAQ,UAAU,OAAO;AAC/B,OAAK,KAAK,KAAK;AACf,OAAK,MAAM;AACX,OAAK,SAAS;AACd,OAAK,QAAQ;AACb,OAAK,SAAS;AACd,OAAK,WAAW;AAChB,OAAK,eAAe,KAAK;AACzB,OAAK,UAAU,EAAE;AACjB,OAAK,YAAY,EAAE;AACnB,OAAK,UAAU;AACf,OAAK,QAAQ,EAAE;AACf,OAAK,0BAA0B;AAC/B,OAAK,YAAY;AACjB,OAAK,UAAU,EAAE;AACjB,OAAK,aAAa;AAClB,OAAK,aAAa,EAAE;AACnB,OAAK,uBAAuB;AAC7B,OAAK,kBAAkB,EAAE;AACzB,OAAK,SAAS,EAAE;AAChB,OAAK,WAAW,IAAI,eAAe;AACnC,OAAK,WAAW,EAAE;AAClB,OAAK,iBAAiB,EAAE;AACxB,OAAK,WAAW;AAChB,OAAK,sBAAsB;AAC3B,OAAK,WAAW;AAChB,OAAK,YAAY,UAAU,SAAO,KAAK,OAAO,KAAK,EAAE,QAAQ,eAAe,EAAE;AAC9E,OAAK,eAAe,EAAE;AACtB,YAAU,KAAK,MAAM;AACrB,MAAI,CAAC,WAAW,CAAC,QAAQ;AACrB,WAAQ,MAAM,oEAAoE;AAClF;;AAEJ,WAAS,OAAO,MAAM,YAAY,qBAAqB;AACvD,WAAS,OAAO,MAAM,YAAY,oBAAoB;AACtD,OAAK,aAAa;AAClB,MAAI,KAAK,SACL,MAAK,QAAQ;;CAGrB,IAAI,cAAc;EACd,MAAM,EAAE,SAAS,EAAE,aAAc,uBAAyB,OAAQ,QAAS,iBAAkB;AAC7F,MAAI,CAAC,cAAc,YAAY,CAC3B,QAAO;AAEX,MAAI,uBAAuB,aACvB,QAAO;AAEX,SAAO,SAAS,QAAQ,SAAS;;CAErC,IAAI,OAAO;AACP,SAAO,KAAK,OAAO;;CAEvB,IAAI,KAAK,MAAM;AACX,OAAK,OAAO,OAAO;;CAEvB,IAAI,UAAU;AACV,SAAO,KAAK;;CAEhB,IAAI,QAAQ,SAAS;AACjB,OAAK,OAAO,UAAU;;CAE1B,IAAI,WAAW;AACX,SAAO;;CAEd,cAAc;AACP,OAAK,cAAc,aAAa;AAChC,MAAI,KAAK,QAAQ,WACb,MAAK,QAAQ;MAEb,aAAY,MAAM,KAAK,QAAQ,iBAAiB;AAEpD,OAAK,YAAY;AACjB,OAAK,cAAc,YAAY;AAC/B,SAAO;;CAEX,QAAQ;AACJ,cAAY,KAAK,QAAQ,KAAK,IAAI;AAClC,SAAO;;CAEX,OAAO;AACH,WAAS,KAAK,KAAK;AACnB,SAAO;;CAEd,OAAO,OAAO,QAAQ;AACf,MAAI,CAAC,SAAS,QAAQ,KAAK,CACvB,MAAK,QAAQ,OAAO,OAAO;MAE3B,MAAK,oBAAoB;GACrB;GACA;GACH;;CAGT,QAAQ,OAAO,QAAQ;EACnB,MAAM,UAAU,KAAK;EACrB,MAAM,SAAS,KAAK;EACpB,MAAM,cAAc,QAAQ,uBAAuB,KAAK;EACxD,MAAM,UAAU,KAAK,SAAS,eAAe,QAAQ,OAAO,QAAQ,YAAY;EAChF,MAAM,WAAW,QAAQ,oBAAoB,KAAK,SAAS,qBAAqB;EAChF,MAAM,OAAO,KAAK,QAAQ,WAAW;AACrC,OAAK,QAAQ,QAAQ;AACrB,OAAK,SAAS,QAAQ;AACtB,OAAK,eAAe,KAAK;AACzB,MAAI,CAAC,YAAY,MAAM,UAAU,KAAK,CAClC;AAEJ,OAAK,cAAc,UAAU,EACzB,MAAM,SACT,CAAC;AACF,WAAS,QAAQ,UAAU,CACvB,MACA,QACH,EAAE,KAAK;AACR,MAAI,KAAK,UACL;OAAI,KAAK,UAAU,KAAK,CACpB,MAAK,QAAQ;;;CAIzB,sBAAsB;EAElB,MAAM,gBADU,KAAK,QACS,UAAU,EAAE;AAC1C,OAAK,gBAAgB,aAAa,WAAS;AACvC,eAAY,KAAK;IACnB;;CAET,sBAAsB;EACf,MAAM,UAAU,KAAK;EACrB,MAAM,YAAY,QAAQ;EAC1B,MAAMF,WAAS,KAAK;EACpB,MAAM,UAAU,OAAO,KAAKA,SAAO,CAAC,QAAQ,KAAK,OAAK;AAClD,OAAI,MAAM;AACV,UAAO;KACR,EAAE,CAAC;EACN,IAAI,QAAQ,EAAE;AACd,MAAI,UACA,SAAQ,MAAM,OAAO,OAAO,KAAK,UAAU,CAAC,KAAK,OAAK;GAClD,MAAM,eAAe,UAAU;GAC/B,MAAM,OAAO,cAAc,IAAI,aAAa;GAC5C,MAAM,WAAW,SAAS;GAC1B,MAAM,eAAe,SAAS;AAC9B,UAAO;IACH,SAAS;IACT,WAAW,WAAW,cAAc,eAAe,WAAW;IAC9D,OAAO,WAAW,iBAAiB,eAAe,aAAa;IAClE;IACH,CAAC;AAEP,OAAK,QAAQ,SAAO;GAChB,MAAM,eAAe,KAAK;GAC1B,MAAM,KAAK,aAAa;GACxB,MAAM,OAAO,cAAc,IAAI,aAAa;GAC5C,MAAM,YAAY,eAAe,aAAa,MAAM,KAAK,MAAM;AAC/D,OAAI,aAAa,aAAa,UAAa,qBAAqB,aAAa,UAAU,KAAK,KAAK,qBAAqB,KAAK,UAAU,CACjI,cAAa,WAAW,KAAK;AAEjC,WAAQ,MAAM;GACd,IAAI,QAAQ;AACZ,OAAI,MAAMA,YAAUA,SAAO,IAAI,SAAS,UACpC,SAAQA,SAAO;QACZ;AAEH,YAAQ,KADW,SAAS,SAAS,UAAU,EACxB;KACnB;KACA,MAAM;KACN,KAAK,KAAK;KACV,OAAO;KACV,CAAC;AACF,aAAO,MAAM,MAAM;;AAEvB,SAAM,KAAK,cAAc,QAAQ;IACnC;AACF,OAAK,UAAU,YAAY,OAAK;AAC5B,OAAI,CAAC,WACD,QAAOA,SAAO;IAEpB;AACF,OAAKA,WAAS,UAAQ;AAClB,WAAQ,UAAU,MAAM,OAAO,MAAM,QAAQ;AAC7C,WAAQ,OAAO,MAAM,MAAM;IAC7B;;CAET,kBAAkB;EACX,MAAM,WAAW,KAAK;EACtB,MAAM,UAAU,KAAK,KAAK,SAAS;EACnC,MAAM,UAAU,SAAS;AACzB,WAAS,MAAM,GAAG,MAAI,EAAE,QAAQ,EAAE,MAAM;AACxC,MAAI,UAAU,SAAS;AACnB,QAAI,IAAI,IAAI,SAAS,IAAI,SAAS,EAAE,EAChC,MAAK,oBAAoB,EAAE;AAE/B,YAAS,OAAO,SAAS,UAAU,QAAQ;;AAE/C,OAAK,kBAAkB,SAAS,MAAM,EAAE,CAAC,KAAK,cAAc,SAAS,QAAQ,CAAC;;CAErF,8BAA8B;EACvB,MAAM,EAAE,WAAW,UAAW,MAAM,EAAE,eAAiB;AACvD,MAAI,SAAS,SAAS,SAAS,OAC3B,QAAO,KAAK;AAEhB,WAAS,SAAS,MAAM,YAAQ;AAC5B,OAAI,SAAS,QAAQ,MAAI,MAAM,KAAK,SAAS,CAAC,WAAW,EACrD,MAAK,oBAAoBD,QAAM;IAErC;;CAEN,2BAA2B;EACvB,MAAM,iBAAiB,EAAE;EACzB,MAAM,WAAW,KAAK,KAAK;EAC3B,IAAI,GAAG;AACP,OAAK,6BAA6B;AAClC,OAAI,IAAI,GAAG,OAAO,SAAS,QAAQ,IAAI,MAAM,KAAI;GAC7C,MAAM,UAAU,SAAS;GACzB,IAAI,OAAO,KAAK,eAAe,EAAE;GACjC,MAAM,OAAO,QAAQ,QAAQ,KAAK,OAAO;AACzC,OAAI,KAAK,QAAQ,KAAK,SAAS,MAAM;AACjC,SAAK,oBAAoB,EAAE;AAC3B,WAAO,KAAK,eAAe,EAAE;;AAEjC,QAAK,OAAO;AACZ,QAAK,YAAY,QAAQ,aAAa,aAAa,MAAM,KAAK,QAAQ;AACtE,QAAK,QAAQ,QAAQ,SAAS;AAC9B,QAAK,QAAQ;AACb,QAAK,QAAQ,KAAK,QAAQ;AAC1B,QAAK,UAAU,KAAK,iBAAiB,EAAE;AACvC,OAAI,KAAK,YAAY;AACjB,SAAK,WAAW,YAAY,EAAE;AAC9B,SAAK,WAAW,YAAY;UACzB;IACH,MAAM,kBAAkB,SAAS,cAAc,KAAK;IACpD,MAAM,EAAE,oBAAqB,oBAAqB,SAAS,SAAS;AACpE,WAAO,OAAO,iBAAiB;KAC3B,iBAAiB,SAAS,WAAW,gBAAgB;KACrD,oBAAoB,sBAAsB,SAAS,WAAW,mBAAmB;KACpF,CAAC;AACF,SAAK,aAAa,IAAI,gBAAgB,MAAM,EAAE;AAC9C,mBAAe,KAAK,KAAK,WAAW;;;AAG5C,OAAK,iBAAiB;AACtB,SAAO;;CAEd,iBAAiB;AACV,OAAK,KAAK,KAAK,WAAW,SAAS,iBAAe;AAC9C,QAAK,eAAe,aAAa,CAAC,WAAW,OAAO;KACrD,KAAK;;CAEf,QAAQ;AACD,OAAK,gBAAgB;AACrB,OAAK,cAAc,QAAQ;;CAE/B,OAAO,MAAM;EACT,MAAM,SAAS,KAAK;AACpB,SAAO,QAAQ;EACf,MAAM,UAAU,KAAK,WAAW,OAAO,eAAe,OAAO,mBAAmB,EAAE,KAAK,YAAY,CAAC;EACpG,MAAM,gBAAgB,KAAK,sBAAsB,CAAC,QAAQ;AAC1D,OAAK,eAAe;AACpB,OAAK,qBAAqB;AAC1B,OAAK,sBAAsB;AAC3B,OAAK,SAAS,YAAY;AAC1B,MAAI,KAAK,cAAc,gBAAgB;GACnC;GACA,YAAY;GACf,CAAC,KAAK,MACH;EAEJ,MAAM,iBAAiB,KAAK,0BAA0B;AACtD,OAAK,cAAc,uBAAuB;EAC1C,IAAI,aAAa;AACjB,OAAI,IAAI,IAAI,GAAG,OAAO,KAAK,KAAK,SAAS,QAAQ,IAAI,MAAM,KAAI;GAC3D,MAAM,EAAE,eAAgB,KAAK,eAAe,EAAE;GAC9C,MAAM,QAAQ,CAAC,iBAAiB,eAAe,QAAQ,WAAW,KAAK;AACvE,cAAW,sBAAsB,MAAM;AACvC,gBAAa,KAAK,IAAI,CAAC,WAAW,gBAAgB,EAAE,WAAW;;AAEnE,eAAa,KAAK,cAAc,QAAQ,OAAO,cAAc,aAAa;AAC1E,OAAK,cAAc,WAAW;AAC9B,MAAI,CAAC,cACD,MAAK,iBAAiB,eAAa;AAC/B,cAAW,OAAO;IACpB;AAEN,OAAK,gBAAgB,KAAK;AAC1B,OAAK,cAAc,eAAe,EAC9B,MACH,CAAC;AACF,OAAK,QAAQ,KAAK,cAAc,KAAK,OAAO,CAAC;EAC7C,MAAM,EAAE,SAAU,eAAgB;AAClC,MAAI,WACA,MAAK,cAAc,YAAY,KAAK;WAC7B,QAAQ,OACf,MAAK,mBAAmB,SAAS,SAAS,KAAK;AAEnD,OAAK,QAAQ;;CAEpB,gBAAgB;AACT,OAAK,KAAK,SAAS,UAAQ;AACvB,WAAQ,UAAU,MAAM,MAAM;IAChC;AACF,OAAK,qBAAqB;AAC1B,OAAK,qBAAqB;;CAEjC,sBAAsB;EACf,MAAM,UAAU,KAAK;EACrB,MAAM,iBAAiB,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,CAAC;EAC5D,MAAM,YAAY,IAAI,IAAI,QAAQ,OAAO;AACzC,MAAI,CAAC,UAAU,gBAAgB,UAAU,IAAI,CAAC,CAAC,KAAK,yBAAyB,QAAQ,YAAY;AAC7F,QAAK,cAAc;AACnB,QAAK,YAAY;;;CAG5B,uBAAuB;EAChB,MAAM,EAAE,mBAAoB;EAC5B,MAAM,UAAU,KAAK,wBAAwB,IAAI,EAAE;AACnD,OAAK,MAAM,EAAE,QAAS,OAAQ,WAAY,SAAQ;GAC9C,MAAM,OAAO,WAAW,oBAAoB,CAAC,QAAQ;AACrD,mBAAgB,gBAAgB,OAAO,KAAK;;;CAGvD,yBAAyB;EAClB,MAAM,eAAe,KAAK;AAC1B,MAAI,CAAC,gBAAgB,CAAC,aAAa,OAC/B;AAEJ,OAAK,eAAe,EAAE;EACtB,MAAM,eAAe,KAAK,KAAK,SAAS;EACxC,MAAM,WAAW,QAAM,IAAI,IAAI,aAAa,QAAQ,MAAI,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,MAAI,IAAI,MAAM,EAAE,OAAO,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC;EACnH,MAAM,YAAY,QAAQ,EAAE;AAC5B,OAAI,IAAI,IAAI,GAAG,IAAI,cAAc,IAC7B,KAAI,CAAC,UAAU,WAAW,QAAQ,EAAE,CAAC,CACjC;AAGR,SAAO,MAAM,KAAK,UAAU,CAAC,KAAK,MAAI,EAAE,MAAM,IAAI,CAAC,CAAC,KAAK,OAAK;GACtD,QAAQ,EAAE;GACV,OAAO,CAAC,EAAE;GACV,OAAO,CAAC,EAAE;GACb,EAAE;;CAEd,cAAc,YAAY;AACnB,MAAI,KAAK,cAAc,gBAAgB,EACnC,YAAY,MACf,CAAC,KAAK,MACH;AAEJ,UAAQ,OAAO,MAAM,KAAK,OAAO,KAAK,QAAQ,WAAW;EACzD,MAAM,OAAO,KAAK;EAClB,MAAM,SAAS,KAAK,SAAS,KAAK,KAAK,UAAU;AACjD,OAAK,UAAU,EAAE;AACjB,OAAK,KAAK,QAAQ,QAAM;AACpB,OAAI,UAAU,IAAI,aAAa,YAC3B;AAEJ,OAAI,IAAI,UACJ,KAAI,WAAW;AAEnB,QAAK,QAAQ,KAAK,GAAG,IAAI,SAAS,CAAC;KACpC,KAAK;AACR,OAAK,QAAQ,SAAS,MAAM,YAAQ;AAChC,QAAK,OAAOA;IACd;AACF,OAAK,cAAc,cAAc;;CAExC,gBAAgB,MAAM;AACf,MAAI,KAAK,cAAc,wBAAwB;GAC3C;GACA,YAAY;GACf,CAAC,KAAK,MACH;AAEJ,OAAI,IAAI,IAAI,GAAG,OAAO,KAAK,KAAK,SAAS,QAAQ,IAAI,MAAM,EAAE,EACzD,MAAK,eAAe,EAAE,CAAC,WAAW,WAAW;AAEjD,OAAI,IAAI,IAAI,GAAG,OAAO,KAAK,KAAK,SAAS,QAAQ,IAAI,MAAM,EAAE,EACzD,MAAK,eAAe,GAAG,WAAW,KAAK,GAAG,KAAK,EAC3C,cAAc,GACjB,CAAC,GAAG,KAAK;AAEd,OAAK,cAAc,uBAAuB,EACtC,MACH,CAAC;;CAET,eAAe,SAAO,MAAM;EACrB,MAAM,OAAO,KAAK,eAAeA,QAAM;EACvC,MAAM,OAAO;GACT;GACA;GACA;GACA,YAAY;GACf;AACD,MAAI,KAAK,cAAc,uBAAuB,KAAK,KAAK,MACpD;AAEJ,OAAK,WAAW,QAAQ,KAAK;AAC7B,OAAK,aAAa;AAClB,OAAK,cAAc,sBAAsB,KAAK;;CAElD,SAAS;AACL,MAAI,KAAK,cAAc,gBAAgB,EACnC,YAAY,MACf,CAAC,KAAK,MACH;AAEJ,MAAI,SAAS,IAAI,KAAK,EAClB;OAAI,KAAK,YAAY,CAAC,SAAS,QAAQ,KAAK,CACxC,UAAS,MAAM,KAAK;SAErB;AACH,QAAK,MAAM;AACX,wBAAqB,EACjB,OAAO,MACV,CAAC;;;CAGV,OAAO;EACH,IAAI;AACJ,MAAI,KAAK,mBAAmB;GACxB,MAAM,EAAE,OAAQ,WAAY,KAAK;AACjC,QAAK,oBAAoB;AACzB,QAAK,QAAQ,OAAO,OAAO;;AAE/B,OAAK,OAAO;AACZ,MAAI,KAAK,SAAS,KAAK,KAAK,UAAU,EAClC;AAEJ,MAAI,KAAK,cAAc,cAAc,EACjC,YAAY,MACf,CAAC,KAAK,MACH;EAEJ,MAAM,SAAS,KAAK;AACpB,OAAI,IAAI,GAAG,IAAI,OAAO,UAAU,OAAO,GAAG,KAAK,GAAG,EAAE,EAChD,QAAO,GAAG,KAAK,KAAK,UAAU;AAElC,OAAK,eAAe;AACpB,SAAM,IAAI,OAAO,QAAQ,EAAE,EACvB,QAAO,GAAG,KAAK,KAAK,UAAU;AAElC,OAAK,cAAc,YAAY;;CAEtC,uBAAuB,eAAe;EAC/B,MAAM,WAAW,KAAK;EACtB,MAAM,SAAS,EAAE;EACjB,IAAI,GAAG;AACP,OAAI,IAAI,GAAG,OAAO,SAAS,QAAQ,IAAI,MAAM,EAAE,GAAE;GAC7C,MAAM,OAAO,SAAS;AACtB,OAAI,CAAC,iBAAiB,KAAK,QACvB,QAAO,KAAK,KAAK;;AAGzB,SAAO;;CAEd,+BAA+B;AACxB,SAAO,KAAK,uBAAuB,KAAK;;CAE/C,gBAAgB;AACT,MAAI,KAAK,cAAc,sBAAsB,EACzC,YAAY,MACf,CAAC,KAAK,MACH;EAEJ,MAAM,WAAW,KAAK,8BAA8B;AACpD,OAAI,IAAI,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,EAAE,EACvC,MAAK,aAAa,SAAS,GAAG;AAElC,OAAK,cAAc,oBAAoB;;CAE9C,aAAa,MAAM;EACZ,MAAM,MAAM,KAAK;EACjB,MAAM,OAAO;GACT;GACA,OAAO,KAAK;GACZ,YAAY;GACf;EACD,MAAM,OAAO,mBAAmB,MAAM,KAAK;AAC3C,MAAI,KAAK,cAAc,qBAAqB,KAAK,KAAK,MAClD;AAEJ,MAAI,KACA,UAAS,KAAK,KAAK;AAEvB,OAAK,WAAW,MAAM;AACtB,MAAI,KACA,YAAW,IAAI;AAEnB,OAAK,aAAa;AAClB,OAAK,cAAc,oBAAoB,KAAK;;CAEnD,cAAc,OAAO;AACd,SAAO,eAAe,OAAO,KAAK,WAAW,KAAK,YAAY;;CAElE,0BAA0B,GAAG,MAAM,SAAS,kBAAkB;EAC1D,MAAM,SAAS,YAAY,MAAM;AACjC,MAAI,OAAO,WAAW,WAClB,QAAO,OAAO,MAAM,GAAG,SAAS,iBAAiB;AAErD,SAAO,EAAE;;CAEb,eAAe,cAAc;EACzB,MAAM,UAAU,KAAK,KAAK,SAAS;EACnC,MAAM,WAAW,KAAK;EACtB,IAAI,OAAO,SAAS,QAAQ,MAAI,KAAK,EAAE,aAAa,QAAQ,CAAC,KAAK;AAClE,MAAI,CAAC,MAAM;AACP,UAAO;IACH,MAAM;IACN,MAAM,EAAE;IACR,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,SAAS;IACT,OAAO,WAAW,QAAQ,SAAS;IACnC,OAAO;IACP,UAAU;IACV,SAAS,EAAE;IACX,SAAS;IACZ;AACD,YAAS,KAAK,KAAK;;AAEvB,SAAO;;CAEX,aAAa;AACT,SAAO,KAAK,aAAa,KAAK,WAAW,cAAc,MAAM;GACzD,OAAO;GACP,MAAM;GACT,CAAC;;CAEN,yBAAyB;AACrB,SAAO,KAAK,8BAA8B,CAAC;;CAE/C,iBAAiB,cAAc;EAC3B,MAAM,UAAU,KAAK,KAAK,SAAS;AACnC,MAAI,CAAC,QACD,QAAO;EAEX,MAAM,OAAO,KAAK,eAAe,aAAa;AAC9C,SAAO,OAAO,KAAK,WAAW,YAAY,CAAC,KAAK,SAAS,CAAC,QAAQ;;CAEtE,qBAAqB,cAAc,SAAS;EACxC,MAAM,OAAO,KAAK,eAAe,aAAa;AAC9C,OAAK,SAAS,CAAC;;CAEnB,qBAAqB,SAAO;AACxB,OAAK,eAAeA,WAAS,CAAC,KAAK,eAAeA;;CAEtD,kBAAkB,SAAO;AACrB,SAAO,CAAC,KAAK,eAAeA;;CAEnC,kBAAkB,cAAc,WAAW,SAAS;EAC7C,MAAM,OAAO,UAAU,SAAS;EAChC,MAAM,OAAO,KAAK,eAAe,aAAa;EAC9C,MAAM,QAAQ,KAAK,WAAW,mBAAmB,QAAW,KAAK;AACjE,MAAI,QAAQ,UAAU,EAAE;AACpB,QAAK,KAAK,WAAW,SAAS,CAAC;AAC/B,QAAK,QAAQ;SACV;AACH,QAAK,qBAAqB,cAAc,QAAQ;AAChD,SAAM,OAAO,MAAM,EACf,SACH,CAAC;AACF,QAAK,QAAQ,QAAM,IAAI,iBAAiB,eAAe,OAAO,OAAU;;;CAGhF,KAAK,cAAc,WAAW;AAC1B,OAAK,kBAAkB,cAAc,WAAW,MAAM;;CAE1D,KAAK,cAAc,WAAW;AAC1B,OAAK,kBAAkB,cAAc,WAAW,KAAK;;CAE5D,oBAAoB,cAAc;EAC3B,MAAM,OAAO,KAAK,UAAU;AAC5B,MAAI,QAAQ,KAAK,WACb,MAAK,WAAW,UAAU;AAE9B,SAAO,KAAK,UAAU;;CAE1B,QAAQ;EACJ,IAAI,GAAG;AACP,OAAK,MAAM;AACX,WAAS,OAAO,KAAK;AACrB,OAAI,IAAI,GAAG,OAAO,KAAK,KAAK,SAAS,QAAQ,IAAI,MAAM,EAAE,EACrD,MAAK,oBAAoB,EAAE;;CAGnC,UAAU;AACN,OAAK,cAAc,gBAAgB;EACnC,MAAM,EAAE,QAAS,QAAS;AAC1B,OAAK,OAAO;AACZ,OAAK,OAAO,YAAY;AACxB,MAAI,QAAQ;AACR,QAAK,cAAc;AACnB,eAAY,QAAQ,IAAI;AACxB,QAAK,SAAS,eAAe,IAAI;AACjC,QAAK,SAAS;AACd,QAAK,MAAM;;AAEf,SAAO,UAAU,KAAK;AACtB,OAAK,cAAc,eAAe;;CAEtC,cAAc,GAAG,MAAM;AACnB,SAAO,KAAK,OAAO,UAAU,GAAG,KAAK;;CAE5C,aAAa;AACN,OAAK,gBAAgB;AACrB,MAAI,KAAK,QAAQ,WACb,MAAK,sBAAsB;MAE3B,MAAK,WAAW;;CAG3B,iBAAiB;EACV,MAAM,YAAY,KAAK;EACvB,MAAM,WAAW,KAAK;EACtB,MAAM,QAAQ,MAAM,eAAW;AAC3B,YAAS,iBAAiB,MAAM,MAAMW,WAAS;AAC/C,aAAU,QAAQA;;EAEtB,MAAM,YAAY,GAAG,GAAG,MAAI;AACxB,KAAE,UAAU;AACZ,KAAE,UAAU;AACZ,QAAK,cAAc,EAAE;;AAEzB,OAAK,KAAK,QAAQ,SAAS,SAAO,KAAK,MAAM,SAAS,CAAC;;CAE9D,uBAAuB;AAChB,MAAI,CAAC,KAAK,qBACN,MAAK,uBAAuB,EAAE;EAElC,MAAM,YAAY,KAAK;EACvB,MAAM,WAAW,KAAK;EACtB,MAAM,QAAQ,MAAM,eAAW;AAC3B,YAAS,iBAAiB,MAAM,MAAMA,WAAS;AAC/C,aAAU,QAAQA;;EAEtB,MAAM,WAAW,MAAM,eAAW;AAC9B,OAAI,UAAU,OAAO;AACjB,aAAS,oBAAoB,MAAM,MAAMA,WAAS;AAClD,WAAO,UAAU;;;EAGzB,MAAM,YAAY,OAAO,WAAS;AAC9B,OAAI,KAAK,OACL,MAAK,OAAO,OAAO,OAAO;;EAGlC,IAAI;EACJ,MAAM,iBAAe;AACjB,WAAQ,UAAU,SAAS;AAC3B,QAAK,WAAW;AAChB,QAAK,QAAQ;AACb,QAAK,UAAU,SAAS;AACxB,QAAK,UAAU,SAAS;;AAE5B,mBAAe;AACX,QAAK,WAAW;AAChB,WAAQ,UAAU,SAAS;AAC3B,QAAK,OAAO;AACZ,QAAK,QAAQ,GAAG,EAAE;AAClB,QAAK,UAAU,SAAS;;AAE5B,MAAI,SAAS,WAAW,KAAK,OAAO,CAChC,WAAU;MAEV,WAAU;;CAGrB,eAAe;AACR,OAAK,KAAK,aAAa,UAAU,SAAO;AACpC,QAAK,SAAS,oBAAoB,MAAM,MAAM,SAAS;IACzD;AACF,OAAK,aAAa,EAAE;AACpB,OAAK,KAAK,uBAAuB,UAAU,SAAO;AAC9C,QAAK,SAAS,oBAAoB,MAAM,MAAM,SAAS;IACzD;AACF,OAAK,uBAAuB;;CAEhC,iBAAiB,OAAO,MAAM,SAAS;EACnC,MAAM,SAAS,UAAU,QAAQ;EACjC,IAAI,MAAM,MAAM,GAAG;AACnB,MAAI,SAAS,WAAW;AACpB,UAAO,KAAK,eAAe,MAAM,GAAG,aAAa;AACjD,QAAK,WAAW,MAAM,SAAS,sBAAsB;;AAEzD,OAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC1C,UAAO,MAAM;GACb,MAAM,aAAa,QAAQ,KAAK,eAAe,KAAK,aAAa,CAAC;AAClE,OAAI,WACA,YAAW,SAAS,cAAc,KAAK,SAAS,KAAK,cAAc,KAAK,MAAM;;;CAI7F,oBAAoB;AACb,SAAO,KAAK,WAAW,EAAE;;CAEhC,kBAAkB,gBAAgB;EAC3B,MAAM,aAAa,KAAK,WAAW,EAAE;EACrC,MAAM,SAAS,eAAe,KAAK,EAAE,cAAe,qBAAW;GAC3D,MAAM,OAAO,KAAK,eAAe,aAAa;AAC9C,OAAI,CAAC,KACD,OAAM,IAAI,MAAM,+BAA+B,aAAa;AAEhE,UAAO;IACH;IACA,SAAS,KAAK,KAAKX;IACnB;IACH;IACH;AAEF,MADgB,CAAC,eAAe,QAAQ,WAAW,EACtC;AACT,QAAK,UAAU;AACf,QAAK,aAAa;AAClB,QAAK,mBAAmB,QAAQ,WAAW;;;CAGtD,cAAc,MAAM,MAAM,QAAQ;AAC3B,SAAO,KAAK,SAAS,OAAO,MAAM,MAAM,MAAM,OAAO;;CAE5D,gBAAgB,UAAU;AACnB,SAAO,KAAK,SAAS,OAAO,QAAQ,MAAI,EAAE,OAAO,OAAO,SAAS,CAAC,WAAW;;CAEpF,mBAAmB,QAAQ,YAAY,QAAQ;EACxC,MAAM,eAAe,KAAK,QAAQ;EAClC,MAAM,QAAQ,GAAG,MAAI,EAAE,QAAQ,MAAI,CAAC,EAAE,MAAM,MAAI,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,UAAU,EAAE,MAAM,CAAC;EAC1G,MAAM,cAAc,KAAK,YAAY,OAAO;EAC5C,MAAM,YAAY,SAAS,SAAS,KAAK,QAAQ,WAAW;AAC5D,MAAI,YAAY,OACZ,MAAK,iBAAiB,aAAa,aAAa,MAAM,MAAM;AAEhE,MAAI,UAAU,UAAU,aAAa,KACjC,MAAK,iBAAiB,WAAW,aAAa,MAAM,KAAK;;CAGpE,cAAc,GAAG,QAAQ;EAClB,MAAM,OAAO;GACT,OAAO;GACP;GACA,YAAY;GACZ,aAAa,KAAK,cAAc,EAAE;GACrC;EACD,MAAM,eAAe,YAAU,OAAO,QAAQ,UAAU,KAAK,QAAQ,QAAQ,SAAS,EAAE,OAAO,KAAK;AACpG,MAAI,KAAK,cAAc,eAAe,MAAM,YAAY,KAAK,MACzD;EAEJ,MAAM,UAAU,KAAK,aAAa,GAAG,QAAQ,KAAK,YAAY;AAC9D,OAAK,aAAa;AAClB,OAAK,cAAc,cAAc,MAAM,YAAY;AACnD,MAAI,WAAW,KAAK,QAChB,MAAK,QAAQ;AAEjB,SAAO;;CAEd,aAAa,GAAG,QAAQ,aAAa;EAC9B,MAAM,EAAE,SAAS,aAAa,EAAE,EAAG,YAAa;EAChD,MAAM,mBAAmB;EACzB,MAAM,SAAS,KAAK,mBAAmB,GAAG,YAAY,aAAa,iBAAiB;EACpF,MAAM,UAAU,cAAc,EAAE;EAChC,MAAM,YAAY,mBAAmB,GAAG,KAAK,YAAY,aAAa,QAAQ;AAC9E,MAAI,aAAa;AACb,QAAK,aAAa;AAClB,YAAS,QAAQ,SAAS;IACtB;IACA;IACA;IACH,EAAE,KAAK;AACR,OAAI,QACA,UAAS,QAAQ,SAAS;IACtB;IACA;IACA;IACH,EAAE,KAAK;;EAGhB,MAAM,UAAU,CAAC,eAAe,QAAQ,WAAW;AACnD,MAAI,WAAW,QAAQ;AACnB,QAAK,UAAU;AACf,QAAK,mBAAmB,QAAQ,YAAY,OAAO;;AAEvD,OAAK,aAAa;AAClB,SAAO;;CAEd,mBAAmB,GAAG,YAAY,aAAa,kBAAkB;AAC1D,MAAI,EAAE,SAAS,WACX,QAAO,EAAE;AAEb,MAAI,CAAC,YACD,QAAO;EAEX,MAAM,eAAe,KAAK,QAAQ;AAClC,SAAO,KAAK,0BAA0B,GAAG,aAAa,MAAM,cAAc,iBAAiB;;;AAGnG,SAAS,oBAAoB;AACzB,QAAO,KAAK,MAAM,YAAY,UAAQ,MAAM,SAAS,YAAY,CAAC;;AAGtE,SAAS,SAAS,KAAK,SAAS,UAAU;CACtC,MAAM,EAAE,YAAa,GAAI,GAAI,aAAc,aAAc,YAAa;CACtE,MAAM,EAAE,aAAc,oBAAqB;CAC3C,MAAM,iBAAiB,KAAK,IAAI,cAAc,aAAa,gBAAgB,aAAa,SAAS,CAAC;AAClG,KAAI,WAAW;AACf,KAAI,IAAI,GAAG,GAAG,cAAc,cAAc,GAAG,aAAa,iBAAiB,GAAG,WAAW,iBAAiB,EAAE;AAC5G,KAAI,cAAc,GAAG;EACjB,MAAM,iBAAiB,KAAK,IAAI,cAAc,aAAa,gBAAgB,aAAa,SAAS,CAAC;AAClG,MAAI,IAAI,GAAG,GAAG,cAAc,cAAc,GAAG,WAAW,iBAAiB,GAAG,aAAa,iBAAiB,GAAG,KAAK;QAC/G;EACH,MAAM,YAAY,KAAK,IAAI,cAAc,GAAG,cAAc,gBAAgB,aAAa,SAAS,CAAC;AACjG,MAAI,oBAAoB,QACpB,KAAI,IAAI,GAAG,GAAG,WAAW,WAAW,KAAK,GAAG,aAAa,KAAK,GAAG,KAAK;WAC/D,oBAAoB,SAAS;GACpC,MAAM,IAAI,IAAI,YAAY;GAC1B,MAAM,OAAO,CAAC,IAAI,KAAK,IAAI,WAAW,KAAK,EAAE,GAAG;GAChD,MAAM,OAAO,CAAC,IAAI,KAAK,IAAI,WAAW,KAAK,EAAE,GAAG;GAChD,MAAM,SAAS,IAAI,KAAK,IAAI,aAAa,KAAK,EAAE,GAAG;GACnD,MAAM,SAAS,IAAI,KAAK,IAAI,aAAa,KAAK,EAAE,GAAG;AACnD,OAAI,OAAO,MAAM,KAAK;AACtB,OAAI,OAAO,QAAQ,OAAO;;;AAGlC,KAAI,WAAW;AACf,KAAI,OAAO,GAAG,EAAE;AAChB,KAAI,KAAK,GAAG,GAAG,IAAI,OAAO,OAAO,IAAI,OAAO,OAAO;AACnD,KAAI,KAAK,UAAU;;AAEvB,SAAS,QAAQ,KAAK,SAAS,UAAU;CACrC,MAAM,EAAE,YAAa,aAAc,GAAI,GAAI,aAAc,gBAAiB;CAC1E,IAAI,cAAc,cAAc;AAGhC,KAAI,WAAW;AACf,KAAI,IAAI,GAAG,GAAG,aAAa,aAAa,aAAa,WAAW,YAAY;AAC5E,KAAI,cAAc,aAAa;AAC3B,gBAAc,cAAc;AAC5B,MAAI,IAAI,GAAG,GAAG,aAAa,WAAW,aAAa,aAAa,aAAa,KAAK;OAElF,KAAI,IAAI,GAAG,GAAG,aAAa,WAAW,SAAS,aAAa,QAAQ;AAExE,KAAI,WAAW;AACf,KAAI,MAAM;;AAEd,SAAS,gBAAgB,OAAO;AAC5B,QAAO,kBAAkB,OAAO;EAC5B;EACA;EACA;EACA;EACH,CAAC;;;;GAIF,SAAS,oBAAoB,KAAK,aAAa,aAAa,YAAY;CACxE,MAAM,IAAI,gBAAgB,IAAI,QAAQ,aAAa;CACnD,MAAM,iBAAiB,cAAc,eAAe;CACpD,MAAM,aAAa,KAAK,IAAI,eAAe,aAAa,cAAc,EAAE;CAQxE,MAAM,qBAAqB,QAAM;EAC7B,MAAM,iBAAiB,cAAc,KAAK,IAAI,eAAe,IAAI,IAAI,aAAa;AAClF,SAAO,YAAY,KAAK,GAAG,KAAK,IAAI,eAAe,cAAc,CAAC;;AAEtE,QAAO;EACH,YAAY,kBAAkB,EAAE,WAAW;EAC3C,UAAU,kBAAkB,EAAE,SAAS;EACvC,YAAY,YAAY,EAAE,YAAY,GAAG,WAAW;EACpD,UAAU,YAAY,EAAE,UAAU,GAAG,WAAW;EACnD;;;;GAID,SAAS,WAAW,GAAG,OAAO,GAAG,GAAG;AACpC,QAAO;EACH,GAAG,IAAI,IAAI,KAAK,IAAI,MAAM;EAC1B,GAAG,IAAI,IAAI,KAAK,IAAI,MAAM;EAC7B;;;;;;;;;;;;;;;GAeD,SAAS,QAAQ,KAAK,SAAS,QAAQ,SAAS,KAAK,UAAU;CAC/D,MAAM,EAAE,GAAI,GAAI,YAAY,OAAQ,aAAc,aAAa,WAAY;CAC3E,MAAM,cAAc,KAAK,IAAI,QAAQ,cAAc,UAAU,SAAS,aAAa,EAAE;CACrF,MAAM,cAAc,SAAS,IAAI,SAAS,UAAU,SAAS,cAAc;CAC3E,IAAI,gBAAgB;CACpB,MAAMY,UAAQ,MAAM;AACpB,KAAI,SAAS;EAIT,MAAM,uBAAuB,SAAS,IAAI,SAAS,UAAU;EAC7D,MAAM,uBAAuB,cAAc,IAAI,cAAc,UAAU;EACvE,MAAM,sBAAsB,uBAAuB,wBAAwB;EAC3E,MAAM,gBAAgB,uBAAuB,IAAIA,UAAQ,sBAAsB,qBAAqB,WAAWA;AAC/G,mBAAiBA,UAAQ,iBAAiB;;CAE9C,MAAM,OAAO,KAAK,IAAI,MAAOA,UAAQ,cAAc,SAAS,GAAG,GAAG;CAClE,MAAM,eAAeA,UAAQ,QAAQ;CACrC,MAAM,aAAa,QAAQ,cAAc;CACzC,MAAM,WAAW,MAAM,cAAc;CACrC,MAAM,EAAE,YAAa,UAAW,YAAa,aAAc,oBAAoB,SAAS,aAAa,aAAa,WAAW,WAAW;CACxI,MAAM,2BAA2B,cAAc;CAC/C,MAAM,yBAAyB,cAAc;CAC7C,MAAM,0BAA0B,aAAa,aAAa;CAC1D,MAAM,wBAAwB,WAAW,WAAW;CACpD,MAAM,2BAA2B,cAAc;CAC/C,MAAM,yBAAyB,cAAc;CAC7C,MAAM,0BAA0B,aAAa,aAAa;CAC1D,MAAM,wBAAwB,WAAW,WAAW;AACpD,KAAI,WAAW;AACf,KAAI,UAAU;EAEV,MAAM,yBAAyB,0BAA0B,yBAAyB;AAClF,MAAI,IAAI,GAAG,GAAG,aAAa,yBAAyB,sBAAsB;AAC1E,MAAI,IAAI,GAAG,GAAG,aAAa,uBAAuB,sBAAsB;AAExE,MAAI,WAAW,GAAG;GACd,MAAM,UAAU,WAAW,wBAAwB,uBAAuB,GAAG,EAAE;AAC/E,OAAI,IAAI,QAAQ,GAAG,QAAQ,GAAG,UAAU,uBAAuB,WAAW,QAAQ;;EAGtF,MAAM,KAAK,WAAW,wBAAwB,UAAU,GAAG,EAAE;AAC7D,MAAI,OAAO,GAAG,GAAG,GAAG,EAAE;AAEtB,MAAI,WAAW,GAAG;GACd,MAAM,UAAU,WAAW,wBAAwB,uBAAuB,GAAG,EAAE;AAC/E,OAAI,IAAI,QAAQ,GAAG,QAAQ,GAAG,UAAU,WAAW,SAAS,wBAAwB,KAAK,GAAG;;EAGhG,MAAM,yBAAyB,WAAW,WAAW,eAAe,aAAa,aAAa,gBAAgB;AAC9G,MAAI,IAAI,GAAG,GAAG,aAAa,WAAW,WAAW,aAAa,uBAAuB,KAAK;AAC1F,MAAI,IAAI,GAAG,GAAG,aAAa,uBAAuB,aAAa,aAAa,aAAa,KAAK;AAE9F,MAAI,aAAa,GAAG;GAChB,MAAM,UAAU,WAAW,0BAA0B,yBAAyB,GAAG,EAAE;AACnF,OAAI,IAAI,QAAQ,GAAG,QAAQ,GAAG,YAAY,0BAA0B,KAAK,IAAI,aAAa,QAAQ;;EAGtG,MAAM,KAAK,WAAW,0BAA0B,YAAY,GAAG,EAAE;AACjE,MAAI,OAAO,GAAG,GAAG,GAAG,EAAE;AAEtB,MAAI,aAAa,GAAG;GAChB,MAAM,UAAU,WAAW,0BAA0B,yBAAyB,GAAG,EAAE;AACnF,OAAI,IAAI,QAAQ,GAAG,QAAQ,GAAG,YAAY,aAAa,SAAS,wBAAwB;;QAEzF;AACH,MAAI,OAAO,GAAG,EAAE;EAChB,MAAM,cAAc,KAAK,IAAI,wBAAwB,GAAG,cAAc;EACtE,MAAM,cAAc,KAAK,IAAI,wBAAwB,GAAG,cAAc;AACtE,MAAI,OAAO,aAAa,YAAY;EACpC,MAAM,YAAY,KAAK,IAAI,sBAAsB,GAAG,cAAc;EAClE,MAAM,YAAY,KAAK,IAAI,sBAAsB,GAAG,cAAc;AAClE,MAAI,OAAO,WAAW,UAAU;;AAEpC,KAAI,WAAW;;AAEnB,SAAS,QAAQ,KAAK,SAAS,QAAQ,SAAS,UAAU;CACtD,MAAM,EAAE,aAAc,YAAa,kBAAmB;CACtD,IAAI,WAAW,QAAQ;AACvB,KAAI,aAAa;AACb,UAAQ,KAAK,SAAS,QAAQ,SAAS,UAAU,SAAS;AAC1D,OAAI,IAAI,IAAI,GAAG,IAAI,aAAa,EAAE,EAC9B,KAAI,MAAM;AAEd,MAAI,CAAC,MAAM,cAAc,CACrB,YAAW,cAAc,gBAAgB,OAAO;;AAGxD,SAAQ,KAAK,SAAS,QAAQ,SAAS,UAAU,SAAS;AAC1D,KAAI,MAAM;AACV,QAAO;;AAEX,SAAS,WAAW,KAAK,SAAS,QAAQ,SAAS,UAAU;CACzD,MAAM,EAAE,aAAc,YAAa,eAAgB,YAAa;CAChE,MAAM,EAAE,aAAc,iBAAkB,YAAa,kBAAmB,iBAAkB;CAC1F,MAAM,QAAQ,QAAQ,gBAAgB;AACtC,KAAI,CAAC,YACD;AAEJ,KAAI,YAAY,cAAc,EAAE,CAAC;AACjC,KAAI,iBAAiB;AACrB,KAAI,OAAO;AACP,MAAI,YAAY,cAAc;AAC9B,MAAI,WAAW,mBAAmB;QAC/B;AACH,MAAI,YAAY;AAChB,MAAI,WAAW,mBAAmB;;CAEtC,IAAI,WAAW,QAAQ;AACvB,KAAI,aAAa;AACb,UAAQ,KAAK,SAAS,QAAQ,SAAS,UAAU,SAAS;AAC1D,OAAI,IAAI,IAAI,GAAG,IAAI,aAAa,EAAE,EAC9B,KAAI,QAAQ;AAEhB,MAAI,CAAC,MAAM,cAAc,CACrB,YAAW,cAAc,gBAAgB,OAAO;;AAGxD,KAAI,MACA,SAAQ,KAAK,SAAS,SAAS;AAEnC,KAAI,QAAQ,YAAY,WAAW,cAAc,MAAM,iBAAiB,KAAK,oBAAoB,QAC7F,UAAS,KAAK,SAAS,SAAS;AAEpC,KAAI,CAAC,aAAa;AACd,UAAQ,KAAK,SAAS,QAAQ,SAAS,UAAU,SAAS;AAC1D,MAAI,QAAQ;;;AAGpB,IAAM,aAAN,cAAyB,QAAQ;CAC7B,OAAO,KAAK;CACZ,OAAO,WAAW;EACd,aAAa;EACb,aAAa;EACb,YAAY,EAAE;EACd,kBAAkB;EAClB,iBAAiB;EACjB,cAAc;EACd,aAAa;EACb,QAAQ;EACR,SAAS;EACT,OAAO;EACP,UAAU;EACV,UAAU;EACb;CACD,OAAO,gBAAgB,EACnB,iBAAiB,mBACpB;CACD,OAAO,cAAc;EACjB,aAAa;EACb,aAAa,SAAO,SAAS;EAChC;CACD;CACA;CACA;CACA;CACA;CACA;CACA;CACA,YAAY,KAAI;AACZ,SAAO;AACP,OAAK,UAAU;AACf,OAAK,gBAAgB;AACrB,OAAK,aAAa;AAClB,OAAK,WAAW;AAChB,OAAK,cAAc;AACnB,OAAK,cAAc;AACnB,OAAK,cAAc;AACnB,OAAK,cAAc;AACnB,MAAI,IACA,QAAO,OAAO,MAAM,IAAI;;CAGhC,QAAQ,QAAQ,QAAQ,kBAAkB;EACtC,MAAM,QAAQ,KAAK,SAAS,CACxB,KACA,IACH,EAAE,iBAAiB;EACpB,MAAM,EAAE,OAAQ,aAAc,kBAAkB,OAAO;GACnD,GAAG;GACH,GAAG;GACN,CAAC;EACF,MAAM,EAAE,YAAa,UAAW,aAAc,aAAc,kBAAmB,KAAK,SAAS;GACzF;GACA;GACA;GACA;GACA;GACH,EAAE,iBAAiB;EACpB,MAAM,WAAW,KAAK,QAAQ,UAAU,KAAK,QAAQ,eAAe;EACpE,MAAM,iBAAiB,eAAe,eAAe,WAAW,WAAW;EAC3E,MAAM,iBAAiB,cAAc,OAAO,YAAY,SAAS,IAAI,eAAe;EACpF,MAAM,gBAAgB,kBAAkB,OAAO;EAC/C,MAAM,eAAe,WAAW,UAAU,cAAc,SAAS,cAAc,QAAQ;AACvF,SAAO,iBAAiB;;CAE5B,eAAe,kBAAkB;EAC7B,MAAM,EAAE,GAAI,GAAI,YAAa,UAAW,aAAc,gBAAiB,KAAK,SAAS;GACjF;GACA;GACA;GACA;GACA;GACA;GACH,EAAE,iBAAiB;EACpB,MAAM,EAAE,QAAS,YAAa,KAAK;EACnC,MAAM,aAAa,aAAa,YAAY;EAC5C,MAAM,cAAc,cAAc,cAAc,UAAU,UAAU;AACpE,SAAO;GACH,GAAG,IAAI,KAAK,IAAI,UAAU,GAAG;GAC7B,GAAG,IAAI,KAAK,IAAI,UAAU,GAAG;GAChC;;CAEL,gBAAgB,kBAAkB;AAC9B,SAAO,KAAK,eAAe,iBAAiB;;CAEhD,KAAK,KAAK;EACN,MAAM,EAAE,SAAU,kBAAmB;EACrC,MAAM,UAAU,QAAQ,UAAU,KAAK;EACvC,MAAM,WAAW,QAAQ,WAAW,KAAK;EACzC,MAAM,WAAW,QAAQ;AACzB,OAAK,cAAc,QAAQ,gBAAgB,UAAU,MAAO;AAC5D,OAAK,cAAc,gBAAgB,MAAM,KAAK,MAAM,gBAAgB,IAAI,GAAG;AAC3E,MAAI,kBAAkB,KAAK,KAAK,cAAc,KAAK,KAAK,cAAc,EAClE;AAEJ,MAAI,MAAM;EACV,MAAM,aAAa,KAAK,aAAa,KAAK,YAAY;AACtD,MAAI,UAAU,KAAK,IAAI,UAAU,GAAG,QAAQ,KAAK,IAAI,UAAU,GAAG,OAAO;EACzE,MAAM,MAAM,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,iBAAiB,EAAE,CAAC;EAC1D,MAAM,eAAe,SAAS;AAC9B,MAAI,YAAY,QAAQ;AACxB,MAAI,cAAc,QAAQ;AAC1B,UAAQ,KAAK,MAAM,cAAc,SAAS,SAAS;AACnD,aAAW,KAAK,MAAM,cAAc,SAAS,SAAS;AACtD,MAAI,SAAS;;;AAIrB,SAAS,SAAS,KAAK,SAAS,QAAQ,SAAS;AAC7C,KAAI,UAAU,eAAe,MAAM,gBAAgB,QAAQ,eAAe;AAC1E,KAAI,YAAY,eAAe,MAAM,YAAY,QAAQ,WAAW,CAAC;AACrE,KAAI,iBAAiB,eAAe,MAAM,kBAAkB,QAAQ,iBAAiB;AACrF,KAAI,WAAW,eAAe,MAAM,iBAAiB,QAAQ,gBAAgB;AAC7E,KAAI,YAAY,eAAe,MAAM,aAAa,QAAQ,YAAY;AACtE,KAAI,cAAc,eAAe,MAAM,aAAa,QAAQ,YAAY;;AAE5E,SAAS,OAAO,KAAK,UAAU,QAAQ;AACnC,KAAI,OAAO,OAAO,GAAG,OAAO,EAAE;;AAEjC,SAAS,cAAc,SAAS;AAC7B,KAAI,QAAQ,QACR,QAAO;AAEX,KAAI,QAAQ,WAAW,QAAQ,2BAA2B,WACtD,QAAO;AAEX,QAAO;;AAEX,SAAS,SAAS,QAAQ,SAAS,SAAS,EAAE,EAAE;CAC5C,MAAM,QAAQ,OAAO;CACrB,MAAM,EAAE,OAAO,cAAc,GAAI,KAAK,YAAY,QAAQ,MAAO;CACjE,MAAM,EAAE,OAAO,cAAe,KAAK,eAAgB;CACnD,MAAM,QAAQ,KAAK,IAAI,aAAa,aAAa;CACjD,MAAM,MAAM,KAAK,IAAI,WAAW,WAAW;CAC3C,MAAM,UAAU,cAAc,gBAAgB,YAAY,gBAAgB,cAAc,cAAc,YAAY;AAClH,QAAO;EACH;EACA;EACA,MAAM,QAAQ;EACd,MAAM,MAAM,SAAS,CAAC,UAAU,QAAQ,MAAM,QAAQ,MAAM;EAC/D;;AAEJ,SAAS,YAAY,KAAK,MAAM,SAAS,QAAQ;CAC9C,MAAM,EAAE,QAAS,YAAa;CAC9B,MAAM,EAAE,OAAQ,OAAQ,MAAO,SAAU,SAAS,QAAQ,SAAS,OAAO;CAC1E,MAAM,aAAa,cAAc,QAAQ;CACzC,IAAI,EAAE,OAAM,MAAO,YAAa,UAAU,EAAE;CAC5C,IAAI,GAAG,OAAO;AACd,MAAI,IAAI,GAAG,KAAK,MAAM,EAAE,GAAE;AACtB,UAAQ,QAAQ,SAAS,UAAU,OAAO,IAAI,MAAM;AACpD,MAAI,MAAM,KACN;WACO,MAAM;AACb,OAAI,OAAO,MAAM,GAAG,MAAM,EAAE;AAC5B,UAAO;QAEP,YAAW,KAAK,MAAM,OAAO,SAAS,QAAQ,QAAQ;AAE1D,SAAO;;AAEX,KAAI,MAAM;AACN,UAAQ,QAAQ,SAAS,UAAU,OAAO,MAAM;AAChD,aAAW,KAAK,MAAM,OAAO,SAAS,QAAQ,QAAQ;;AAE1D,QAAO,CAAC,CAAC;;AAEZ,SAAS,gBAAgB,KAAK,MAAM,SAAS,QAAQ;CAClD,MAAM,SAAS,KAAK;CACpB,MAAM,EAAE,OAAQ,OAAQ,SAAU,SAAS,QAAQ,SAAS,OAAO;CACnE,MAAM,EAAE,OAAM,MAAO,YAAa,UAAU,EAAE;CAC9C,IAAI,OAAO;CACX,IAAI,SAAS;CACb,IAAI,GAAG,OAAO,OAAO,MAAM,MAAM;CACjC,MAAM,cAAc,aAAS,SAAS,UAAU,OAAOZ,UAAQA,YAAU;CACzE,MAAM,cAAY;AACd,MAAI,SAAS,MAAM;AACf,OAAI,OAAO,MAAM,KAAK;AACtB,OAAI,OAAO,MAAM,KAAK;AACtB,OAAI,OAAO,MAAM,MAAM;;;AAG/B,KAAI,MAAM;AACN,UAAQ,OAAO,WAAW,EAAE;AAC5B,MAAI,OAAO,MAAM,GAAG,MAAM,EAAE;;AAEhC,MAAI,IAAI,GAAG,KAAK,MAAM,EAAE,GAAE;AACtB,UAAQ,OAAO,WAAW,EAAE;AAC5B,MAAI,MAAM,KACN;EAEJ,MAAM,IAAI,MAAM;EAChB,MAAM,IAAI,MAAM;EAChB,MAAM,SAAS,IAAI;AACnB,MAAI,WAAW,OAAO;AAClB,OAAI,IAAI,KACJ,QAAO;YACA,IAAI,KACX,QAAO;AAEX,WAAQ,SAAS,OAAO,KAAK,EAAE;SAC5B;AACH,UAAO;AACP,OAAI,OAAO,GAAG,EAAE;AAChB,WAAQ;AACR,YAAS;AACT,UAAO,OAAO;;AAElB,UAAQ;;AAEZ,QAAO;;AAEV,SAAS,kBAAkB,MAAM;CAC9B,MAAM,OAAO,KAAK;CAClB,MAAM,aAAa,KAAK,cAAc,KAAK,WAAW;AAEtD,QADoB,CAAC,KAAK,cAAc,CAAC,KAAK,SAAS,CAAC,KAAK,WAAW,KAAK,2BAA2B,cAAc,CAAC,KAAK,WAAW,CAAC,aACnH,kBAAkB;;AAE1C,SAAS,wBAAwB,SAAS;AACvC,KAAI,QAAQ,QACR,QAAO;AAEX,KAAI,QAAQ,WAAW,QAAQ,2BAA2B,WACtD,QAAO;AAEX,QAAO;;AAEX,SAAS,oBAAoB,KAAK,MAAM,OAAO,OAAO;CAClD,IAAI,OAAO,KAAK;AAChB,KAAI,CAAC,MAAM;AACP,SAAO,KAAK,QAAQ,IAAI,QAAQ;AAChC,MAAI,KAAK,KAAK,MAAM,OAAO,MAAM,CAC7B,MAAK,WAAW;;AAGxB,UAAS,KAAK,KAAK,QAAQ;AAC3B,KAAI,OAAO,KAAK;;AAEpB,SAAS,iBAAiB,KAAK,MAAM,OAAO,OAAO;CAC/C,MAAM,EAAE,UAAW,YAAa;CAChC,MAAM,gBAAgB,kBAAkB,KAAK;AAC7C,MAAK,MAAM,WAAW,UAAS;AAC3B,WAAS,KAAK,SAAS,QAAQ,MAAM;AACrC,MAAI,WAAW;AACf,MAAI,cAAc,KAAK,MAAM,SAAS;GAClC;GACA,KAAK,QAAQ,QAAQ;GACxB,CAAC,CACE,KAAI,WAAW;AAEnB,MAAI,QAAQ;;;AAGpB,IAAM,YAAY,OAAO,WAAW;AACpC,SAAS,KAAK,KAAK,MAAM,OAAO,OAAO;AACnC,KAAI,aAAa,CAAC,KAAK,QAAQ,QAC3B,qBAAoB,KAAK,MAAM,OAAO,MAAM;KAE5C,kBAAiB,KAAK,MAAM,OAAO,MAAM;;AAGjD,IAAM,cAAN,cAA0B,QAAQ;CAC9B,OAAO,KAAK;CACf,OAAO,WAAW;EACX,gBAAgB;EAChB,YAAY,EAAE;EACd,kBAAkB;EAClB,iBAAiB;EACjB,aAAa;EACb,iBAAiB;EACjB,wBAAwB;EACxB,MAAM;EACN,UAAU;EACV,SAAS;EACT,SAAS;EACZ;CACJ,OAAO,gBAAgB;EAChB,iBAAiB;EACjB,aAAa;EAChB;CACD,OAAO,cAAc;EACjB,aAAa;EACb,aAAa,SAAO,SAAS,gBAAgB,SAAS;EACzD;CACD,YAAY,KAAI;AACZ,SAAO;AACP,OAAK,WAAW;AAChB,OAAK,UAAU;AACf,OAAK,SAAS;AACd,OAAK,QAAQ;AACb,OAAK,YAAY;AACjB,OAAK,QAAQ;AACb,OAAK,UAAU;AACf,OAAK,YAAY;AACjB,OAAK,aAAa;AAClB,OAAK,iBAAiB;AACtB,OAAK,gBAAgB;AACrB,MAAI,IACA,QAAO,OAAO,MAAM,IAAI;;CAGhC,oBAAoB,WAAW,WAAW;EACtC,MAAM,UAAU,KAAK;AACrB,OAAK,QAAQ,WAAW,QAAQ,2BAA2B,eAAe,CAAC,QAAQ,WAAW,CAAC,KAAK,gBAAgB;GAChH,MAAM,OAAO,QAAQ,WAAW,KAAK,QAAQ,KAAK;AAClD,8BAA2B,KAAK,SAAS,SAAS,WAAW,MAAM,UAAU;AAC7E,QAAK,iBAAiB;;;CAG9B,IAAI,OAAO,QAAQ;AACf,OAAK,UAAU;AACf,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,OAAK,iBAAiB;;CAE1B,IAAI,SAAS;AACT,SAAO,KAAK;;CAEhB,IAAI,WAAW;AACX,SAAO,KAAK,cAAc,KAAK,YAAY,iBAAiB,MAAM,KAAK,QAAQ,QAAQ;;CAE9F,QAAQ;EACD,MAAM,WAAW,KAAK;EACtB,MAAM,SAAS,KAAK;AACpB,SAAO,SAAS,UAAU,OAAO,SAAS,GAAG;;CAEpD,OAAO;EACA,MAAM,WAAW,KAAK;EACtB,MAAM,SAAS,KAAK;EACpB,MAAM,QAAQ,SAAS;AACvB,SAAO,SAAS,OAAO,SAAS,QAAQ,GAAG;;CAElD,YAAY,OAAO,UAAU;EACtB,MAAM,UAAU,KAAK;EACrB,MAAM,QAAQ,MAAM;EACpB,MAAM,SAAS,KAAK;EACpB,MAAM,WAAW,eAAe,MAAM;GAClC;GACA,OAAO;GACP,KAAK;GACR,CAAC;AACF,MAAI,CAAC,SAAS,OACV;EAEJ,MAAM,SAAS,EAAE;EACjB,MAAM,eAAe,wBAAwB,QAAQ;EACrD,IAAI,GAAG;AACP,OAAI,IAAI,GAAG,OAAO,SAAS,QAAQ,IAAI,MAAM,EAAE,GAAE;GAC7C,MAAM,EAAE,OAAQ,QAAS,SAAS;GAClC,MAAM,KAAK,OAAO;GAClB,MAAM,KAAK,OAAO;AAClB,OAAI,OAAO,IAAI;AACX,WAAO,KAAK,GAAG;AACf;;GAEJ,MAAM,IAAI,KAAK,KAAK,QAAQ,GAAG,cAAc,GAAG,YAAY,GAAG,WAAW;GAC1E,MAAM,eAAe,aAAa,IAAI,IAAI,GAAG,QAAQ,QAAQ;AAC7D,gBAAa,YAAY,MAAM;AAC/B,UAAO,KAAK,aAAa;;AAE7B,SAAO,OAAO,WAAW,IAAI,OAAO,KAAK;;CAEhD,YAAY,KAAK,SAAS,QAAQ;AAE3B,SADsB,kBAAkB,KAAK,CACxB,KAAK,MAAM,SAAS,OAAO;;CAEvD,KAAK,KAAK,OAAO,OAAO;EACjB,MAAM,WAAW,KAAK;EACtB,MAAM,gBAAgB,kBAAkB,KAAK;EAC7C,IAAI,OAAO,KAAK;AAChB,UAAQ,SAAS;AACjB,UAAQ,SAAS,KAAK,OAAO,SAAS;AACtC,OAAK,MAAM,WAAW,SAClB,SAAQ,cAAc,KAAK,MAAM,SAAS;GACtC;GACA,KAAK,QAAQ,QAAQ;GACxB,CAAC;AAEN,SAAO,CAAC,CAAC;;CAEhB,KAAK,KAAK,WAAW,OAAO,OAAO;EAC5B,MAAM,UAAU,KAAK,WAAW,EAAE;AAElC,OADe,KAAK,UAAU,EAAE,EACrB,UAAU,QAAQ,aAAa;AACtC,OAAI,MAAM;AACV,QAAK,KAAK,MAAM,OAAO,MAAM;AAC7B,OAAI,SAAS;;AAEjB,MAAI,KAAK,UAAU;AACf,QAAK,iBAAiB;AACtB,QAAK,QAAQ;;;;AAKzB,SAAS,UAAU,IAAI,KAAK,MAAM,kBAAkB;CAChD,MAAM,UAAU,GAAG;CACnB,MAAM,GAAG,OAAO,UAAW,GAAG,SAAS,CACnC,KACH,EAAE,iBAAiB;AACpB,QAAO,KAAK,IAAI,MAAM,MAAM,GAAG,QAAQ,SAAS,QAAQ;;AAE5D,IAAM,eAAN,cAA2B,QAAQ;CAC/B,OAAO,KAAK;CACZ;CACA;CACA;;;IAGE,OAAO,WAAW;EAChB,aAAa;EACb,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,QAAQ;EACR,UAAU;EACb;;;IAGC,OAAO,gBAAgB;EACrB,iBAAiB;EACjB,aAAa;EAChB;CACD,YAAY,KAAI;AACZ,SAAO;AACP,OAAK,UAAU;AACf,OAAK,SAAS;AACd,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,MAAI,IACA,QAAO,OAAO,MAAM,IAAI;;CAGhC,QAAQ,QAAQ,QAAQ,kBAAkB;EACtC,MAAM,UAAU,KAAK;EACrB,MAAM,EAAE,GAAI,MAAO,KAAK,SAAS,CAC7B,KACA,IACH,EAAE,iBAAiB;AACpB,SAAO,KAAK,IAAI,SAAS,GAAG,EAAE,GAAG,KAAK,IAAI,SAAS,GAAG,EAAE,GAAG,KAAK,IAAI,QAAQ,YAAY,QAAQ,QAAQ,EAAE;;CAE9G,SAAS,QAAQ,kBAAkB;AAC/B,SAAO,UAAU,MAAM,QAAQ,KAAK,iBAAiB;;CAEzD,SAAS,QAAQ,kBAAkB;AAC/B,SAAO,UAAU,MAAM,QAAQ,KAAK,iBAAiB;;CAEzD,eAAe,kBAAkB;EAC7B,MAAM,EAAE,GAAI,MAAO,KAAK,SAAS,CAC7B,KACA,IACH,EAAE,iBAAiB;AACpB,SAAO;GACH;GACA;GACH;;CAEL,KAAK,SAAS;AACV,YAAU,WAAW,KAAK,WAAW,EAAE;EACvC,IAAI,SAAS,QAAQ,UAAU;AAC/B,WAAS,KAAK,IAAI,QAAQ,UAAU,QAAQ,eAAe,EAAE;EAC7D,MAAM,cAAc,UAAU,QAAQ,eAAe;AACrD,UAAQ,SAAS,eAAe;;CAEpC,KAAK,KAAK,MAAM;EACZ,MAAM,UAAU,KAAK;AACrB,MAAI,KAAK,QAAQ,QAAQ,SAAS,MAAO,CAAC,eAAe,MAAM,MAAM,KAAK,KAAK,QAAQ,GAAG,EAAE,CACxF;AAEJ,MAAI,cAAc,QAAQ;AAC1B,MAAI,YAAY,QAAQ;AACxB,MAAI,YAAY,QAAQ;AACxB,YAAU,KAAK,SAAS,KAAK,GAAG,KAAK,EAAE;;CAE3C,WAAW;EACP,MAAM,UAAU,KAAK,WAAW,EAAE;AAElC,SAAO,QAAQ,SAAS,QAAQ;;;AAIxC,SAAS,aAAa,KAAK,kBAAkB;CACzC,MAAM,EAAE,GAAI,GAAI,MAAO,OAAQ,WAAa,IAAI,SAAS;EACrD;EACA;EACA;EACA;EACA;EACH,EAAE,iBAAiB;CACpB,IAAI,MAAM,OAAO,KAAK,QAAQ;AAC9B,KAAI,IAAI,YAAY;AAChB,SAAO,SAAS;AAChB,SAAO,KAAK,IAAI,GAAG,KAAK;AACxB,UAAQ,KAAK,IAAI,GAAG,KAAK;AACzB,QAAM,IAAI;AACV,WAAS,IAAI;QACV;AACH,SAAO,QAAQ;AACf,SAAO,IAAI;AACX,UAAQ,IAAI;AACZ,QAAM,KAAK,IAAI,GAAG,KAAK;AACvB,WAAS,KAAK,IAAI,GAAG,KAAK;;AAE9B,QAAO;EACH;EACA;EACA;EACA;EACH;;AAEL,SAAS,YAAY,QAAM,OAAO,KAAK,KAAK;AACxC,QAAOa,SAAO,IAAI,YAAY,OAAO,KAAK,IAAI;;AAElD,SAAS,iBAAiB,KAAK,MAAM,MAAM;CACvC,MAAM,QAAQ,IAAI,QAAQ;CAC1B,MAAMA,SAAO,IAAI;CACjB,MAAM,IAAI,OAAO,MAAM;AACvB,QAAO;EACH,GAAG,YAAYA,OAAK,KAAK,EAAE,KAAK,GAAG,KAAK;EACxC,GAAG,YAAYA,OAAK,OAAO,EAAE,OAAO,GAAG,KAAK;EAC5C,GAAG,YAAYA,OAAK,QAAQ,EAAE,QAAQ,GAAG,KAAK;EAC9C,GAAG,YAAYA,OAAK,MAAM,EAAE,MAAM,GAAG,KAAK;EAC7C;;AAEL,SAAS,kBAAkB,KAAK,MAAM,MAAM;CACxC,MAAM,EAAE,uBAAwB,IAAI,SAAS,CACzC,qBACH,CAAC;CACF,MAAM,QAAQ,IAAI,QAAQ;CAC1B,MAAM,IAAI,cAAc,MAAM;CAC9B,MAAM,OAAO,KAAK,IAAI,MAAM,KAAK;CACjC,MAAMA,SAAO,IAAI;CACjB,MAAM,eAAe,sBAAsB,SAAS,MAAM;AAC1D,QAAO;EACH,SAAS,YAAY,CAAC,gBAAgBA,OAAK,OAAOA,OAAK,MAAM,EAAE,SAAS,GAAG,KAAK;EAChF,UAAU,YAAY,CAAC,gBAAgBA,OAAK,OAAOA,OAAK,OAAO,EAAE,UAAU,GAAG,KAAK;EACnF,YAAY,YAAY,CAAC,gBAAgBA,OAAK,UAAUA,OAAK,MAAM,EAAE,YAAY,GAAG,KAAK;EACzF,aAAa,YAAY,CAAC,gBAAgBA,OAAK,UAAUA,OAAK,OAAO,EAAE,aAAa,GAAG,KAAK;EAC/F;;AAEL,SAAS,cAAc,KAAK;CACxB,MAAM,SAAS,aAAa,IAAI;CAChC,MAAM,QAAQ,OAAO,QAAQ,OAAO;CACpC,MAAM,SAAS,OAAO,SAAS,OAAO;CACtC,MAAM,SAAS,iBAAiB,KAAK,QAAQ,GAAG,SAAS,EAAE;CAC3D,MAAM,SAAS,kBAAkB,KAAK,QAAQ,GAAG,SAAS,EAAE;AAC5D,QAAO;EACH,OAAO;GACH,GAAG,OAAO;GACV,GAAG,OAAO;GACV,GAAG;GACH,GAAG;GACH;GACH;EACD,OAAO;GACH,GAAG,OAAO,OAAO,OAAO;GACxB,GAAG,OAAO,MAAM,OAAO;GACvB,GAAG,QAAQ,OAAO,IAAI,OAAO;GAC7B,GAAG,SAAS,OAAO,IAAI,OAAO;GAC9B,QAAQ;IACJ,SAAS,KAAK,IAAI,GAAG,OAAO,UAAU,KAAK,IAAI,OAAO,GAAG,OAAO,EAAE,CAAC;IACnE,UAAU,KAAK,IAAI,GAAG,OAAO,WAAW,KAAK,IAAI,OAAO,GAAG,OAAO,EAAE,CAAC;IACrE,YAAY,KAAK,IAAI,GAAG,OAAO,aAAa,KAAK,IAAI,OAAO,GAAG,OAAO,EAAE,CAAC;IACzE,aAAa,KAAK,IAAI,GAAG,OAAO,cAAc,KAAK,IAAI,OAAO,GAAG,OAAO,EAAE,CAAC;IAC9E;GACJ;EACJ;;AAEL,SAAS,QAAQ,KAAK,GAAG,GAAG,kBAAkB;CAC1C,MAAM,QAAQ,MAAM;CACpB,MAAM,QAAQ,MAAM;CAEpB,MAAM,SAAS,OAAO,EADL,SAAS,UACS,aAAa,KAAK,iBAAiB;AACtE,QAAO,WAAW,SAAS,WAAW,GAAG,OAAO,MAAM,OAAO,MAAM,MAAM,SAAS,WAAW,GAAG,OAAO,KAAK,OAAO,OAAO;;AAE9H,SAAS,UAAU,QAAQ;AACvB,QAAO,OAAO,WAAW,OAAO,YAAY,OAAO,cAAc,OAAO;;AAE3E,SAAS,kBAAkB,KAAK,MAAM;AACnC,KAAI,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE;;AAE5C,SAAS,YAAY,MAAM,QAAQ,UAAU,EAAE,EAAE;CAC7C,MAAM,IAAI,KAAK,MAAM,QAAQ,IAAI,CAAC,SAAS;CAC3C,MAAM,IAAI,KAAK,MAAM,QAAQ,IAAI,CAAC,SAAS;CAC3C,MAAM,KAAK,KAAK,IAAI,KAAK,MAAM,QAAQ,IAAI,QAAQ,IAAI,SAAS,KAAK;CACrE,MAAM,KAAK,KAAK,IAAI,KAAK,MAAM,QAAQ,IAAI,QAAQ,IAAI,SAAS,KAAK;AACrE,QAAO;EACH,GAAG,KAAK,IAAI;EACZ,GAAG,KAAK,IAAI;EACZ,GAAG,KAAK,IAAI;EACZ,GAAG,KAAK,IAAI;EACZ,QAAQ,KAAK;EAChB;;AAEL,IAAM,aAAN,cAAyB,QAAQ;CAC7B,OAAO,KAAK;CACf,OAAO,WAAW;EACX,eAAe;EACf,aAAa;EACb,cAAc;EACd,eAAe;EACf,YAAY;EACf;CACJ,OAAO,gBAAgB;EAChB,iBAAiB;EACjB,aAAa;EAChB;CACD,YAAY,KAAI;AACZ,SAAO;AACP,OAAK,UAAU;AACf,OAAK,aAAa;AAClB,OAAK,OAAO;AACZ,OAAK,QAAQ;AACb,OAAK,SAAS;AACd,OAAK,gBAAgB;AACrB,MAAI,IACA,QAAO,OAAO,MAAM,IAAI;;CAGhC,KAAK,KAAK;EACN,MAAM,EAAE,eAAgB,SAAS,EAAE,aAAc,sBAAwB;EACzE,MAAM,EAAE,OAAQ,UAAW,cAAc,KAAK;EAC9C,MAAM,cAAc,UAAU,MAAM,OAAO,GAAG,qBAAqB;AACnE,MAAI,MAAM;AACV,MAAI,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM,MAAM,GAAG;AAC5C,OAAI,WAAW;AACf,eAAY,KAAK,YAAY,OAAO,eAAe,MAAM,CAAC;AAC1D,OAAI,MAAM;AACV,eAAY,KAAK,YAAY,OAAO,CAAC,eAAe,MAAM,CAAC;AAC3D,OAAI,YAAY;AAChB,OAAI,KAAK,UAAU;;AAEvB,MAAI,WAAW;AACf,cAAY,KAAK,YAAY,OAAO,cAAc,CAAC;AACnD,MAAI,YAAY;AAChB,MAAI,MAAM;AACV,MAAI,SAAS;;CAEjB,QAAQ,QAAQ,QAAQ,kBAAkB;AACtC,SAAO,QAAQ,MAAM,QAAQ,QAAQ,iBAAiB;;CAE1D,SAAS,QAAQ,kBAAkB;AAC/B,SAAO,QAAQ,MAAM,QAAQ,MAAM,iBAAiB;;CAExD,SAAS,QAAQ,kBAAkB;AAC/B,SAAO,QAAQ,MAAM,MAAM,QAAQ,iBAAiB;;CAExD,eAAe,kBAAkB;EAC7B,MAAM,EAAE,GAAI,GAAI,MAAO,eAAiB,KAAK,SAAS;GAClD;GACA;GACA;GACA;GACH,EAAE,iBAAiB;AACpB,SAAO;GACH,GAAG,cAAc,IAAI,QAAQ,IAAI;GACjC,GAAG,aAAa,KAAK,IAAI,QAAQ;GACpC;;CAEL,SAAS,MAAM;AACX,SAAO,SAAS,MAAM,KAAK,QAAQ,IAAI,KAAK,SAAS;;;AAI7D,IAAI,WAAwB,uBAAO,OAAO;CAC1C,WAAW;CACC;CACA;CACC;CACC;CACb,CAAC;AAEF,IAAM,gBAAgB;CAClB;CACA;CACA;CACA;CACA;CACA;CACA;CACH;AAED,IAAM,oBAAoC,8BAAc,KAAK,YAAQT,QAAM,QAAQ,QAAQ,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC;AAC3H,SAAS,eAAe,GAAG;AACvB,QAAO,cAAc,IAAI,cAAc;;AAE3C,SAAS,mBAAmB,GAAG;AAC3B,QAAO,kBAAkB,IAAI,kBAAkB;;AAEnD,SAAS,uBAAuB,SAAS,GAAG;AACxC,SAAQ,cAAc,eAAe,EAAE;AACvC,SAAQ,kBAAkB,mBAAmB,EAAE;AAC/C,QAAO,EAAE;;AAEb,SAAS,wBAAwB,SAAS,GAAG;AACzC,SAAQ,kBAAkB,QAAQ,KAAK,UAAQ,eAAe,IAAI,CAAC;AACnE,QAAO;;AAEX,SAAS,yBAAyB,SAAS,GAAG;AAC1C,SAAQ,kBAAkB,QAAQ,KAAK,UAAQ,mBAAmB,IAAI,CAAC;AACvE,QAAO;;AAEX,SAAS,aAAa,OAAO;CACzB,IAAI,IAAI;AACR,SAAQ,SAAS,iBAAe;EAC5B,MAAM,aAAa,MAAM,eAAe,aAAa,CAAC;AACtD,MAAI,sBAAsB,mBACtB,KAAI,wBAAwB,SAAS,EAAE;WAChC,sBAAsB,oBAC7B,KAAI,yBAAyB,SAAS,EAAE;WACjC,WACP,KAAI,uBAAuB,SAAS,EAAE;;;AAIlD,SAAS,0BAA0B,eAAa;CAC5C,IAAI;AACJ,MAAI,KAAKK,cACL,KAAIA,cAAY,GAAG,eAAeA,cAAY,GAAG,gBAC7C,QAAO;AAGf,QAAO;;AAEX,SAAS,yBAAyB,YAAY;AAC1C,QAAO,eAAe,WAAW,eAAe,WAAW;;AAE/D,SAAS,mCAAmC;AACxC,QAAO,SAAS,gBAAgB,qBAAqB,SAAS,oBAAoB;;AAEtF,IAAI,gBAAgB;CAChB,IAAI;CACJ,UAAU;EACN,SAAS;EACT,eAAe;EAClB;CACD,aAAc,OAAO,OAAO,SAAS;AACjC,MAAI,CAAC,QAAQ,QACT;EAEJ,MAAM,EAAE,MAAM,EAAE,YAAc,SAAS,iBAAkB,MAAM;EAC/D,MAAM,EAAE,yBAAc;EACtB,MAAM,0BAA0B,0BAA0B,SAAS,IAAI,yBAAyB,aAAa,IAAIP,cAAY,0BAA0BA,WAAS,IAAI,kCAAkC;AACtM,MAAI,CAAC,QAAQ,iBAAiB,wBAC1B;EAEJ,MAAM,YAAY,aAAa,MAAM;AACrC,WAAS,QAAQ,UAAU;;CAElC;AAED,SAAS,eAAe,MAAM,OAAO,OAAO,gBAAgB,SAAS;CACpE,MAAM,UAAU,QAAQ,WAAW;AAChC,KAAI,WAAW,MACX,QAAO,KAAK,MAAM,OAAO,QAAQ,MAAM;CAE3C,MAAM,YAAY,EAAE;CACpB,MAAM,eAAe,QAAQ,MAAM,UAAU;CAC7C,IAAI,eAAe;CACnB,MAAM,WAAW,QAAQ,QAAQ;CACjC,IAAI,IAAI;CACR,IAAI,GAAG,cAAc,SAAS,MAAM;AACpC,WAAU,kBAAkB,KAAK;AACjC,MAAI,IAAI,GAAG,IAAI,UAAU,GAAG,KAAI;EAC5B,IAAI,OAAO;EACX,IAAI,OAAO;EACX,IAAI;EACJ,MAAM,gBAAgB,KAAK,OAAO,IAAI,KAAK,YAAY,GAAG,IAAI;EAC9D,MAAM,cAAc,KAAK,IAAI,KAAK,OAAO,IAAI,KAAK,YAAY,GAAG,GAAG,MAAM,GAAG;EAC7E,MAAM,iBAAiB,cAAc;AACrC,OAAI,IAAI,eAAe,IAAI,aAAa,KAAI;AACxC,WAAQ,KAAK,GAAG;AAChB,WAAQ,KAAK,GAAG;;AAEpB,UAAQ;AACR,UAAQ;EACR,MAAM,YAAY,KAAK,MAAM,IAAI,YAAY,GAAG,IAAI;EACpD,MAAM,UAAU,KAAK,IAAI,KAAK,OAAO,IAAI,KAAK,YAAY,GAAG,GAAG,MAAM,GAAG;EACzE,MAAM,EAAE,GAAG,SAAU,GAAG,YAAa,KAAK;AAC1C,YAAU,OAAO;AACjB,OAAI,IAAI,WAAW,IAAI,SAAS,KAAI;AAChC,UAAO,KAAM,KAAK,KAAK,UAAU,SAAS,KAAK,GAAG,IAAI,YAAY,UAAU,KAAK,GAAG,MAAM,OAAO,SAAS;AAC1G,OAAI,OAAO,SAAS;AAChB,cAAU;AACV,mBAAe,KAAK;AACpB,YAAQ;;;AAGhB,YAAU,kBAAkB;AAC5B,MAAI;;AAER,WAAU,kBAAkB,KAAK;AACjC,QAAO;;AAEX,SAAS,iBAAiB,MAAM,OAAO,OAAO,gBAAgB;CAC1D,IAAI,OAAO;CACX,IAAI,SAAS;CACb,IAAI,GAAG,OAAO,GAAG,GAAG,OAAO,UAAU,UAAU,YAAY,MAAM;CACjE,MAAM,YAAY,EAAE;CACpB,MAAM,WAAW,QAAQ,QAAQ;CACjC,MAAM,OAAO,KAAK,OAAO;CAEzB,MAAM,KADO,KAAK,UAAU,IACV;AAClB,MAAI,IAAI,OAAO,IAAI,QAAQ,OAAO,EAAE,GAAE;AAClC,UAAQ,KAAK;AACb,OAAK,MAAM,IAAI,QAAQ,KAAK;AAC5B,MAAI,MAAM;EACV,MAAM,SAAS,IAAI;AACnB,MAAI,WAAW,OAAO;AAClB,OAAI,IAAI,MAAM;AACV,WAAO;AACP,eAAW;cACJ,IAAI,MAAM;AACjB,WAAO;AACP,eAAW;;AAEf,WAAQ,SAAS,OAAO,MAAM,KAAK,EAAE;SAClC;GACH,MAAM,YAAY,IAAI;AACtB,OAAI,CAAC,cAAc,SAAS,IAAI,CAAC,cAAc,SAAS,EAAE;IACtD,MAAM,qBAAqB,KAAK,IAAI,UAAU,SAAS;IACvD,MAAM,qBAAqB,KAAK,IAAI,UAAU,SAAS;AACvD,QAAI,uBAAuB,cAAc,uBAAuB,UAC5D,WAAU,KAAK;KACX,GAAG,KAAK;KACR,GAAG;KACN,CAAC;AAEN,QAAI,uBAAuB,cAAc,uBAAuB,UAC5D,WAAU,KAAK;KACX,GAAG,KAAK;KACR,GAAG;KACN,CAAC;;AAGV,OAAI,IAAI,KAAK,cAAc,WACvB,WAAU,KAAK,KAAK,WAAW;AAEnC,aAAU,KAAK,MAAM;AACrB,WAAQ;AACR,YAAS;AACT,UAAO,OAAO;AACd,cAAW,WAAW,aAAa;;;AAG3C,QAAO;;AAEX,SAAS,sBAAsB,SAAS;AACpC,KAAI,QAAQ,YAAY;EACpB,MAAM,OAAO,QAAQ;AACrB,SAAO,QAAQ;AACf,SAAO,QAAQ;AACf,SAAO,eAAe,SAAS,QAAQ;GACnC,cAAc;GACd,YAAY;GACZ,UAAU;GACV,OAAO;GACV,CAAC;;;AAGV,SAAS,mBAAmB,OAAO;AAC/B,OAAM,KAAK,SAAS,SAAS,YAAU;AACnC,wBAAsB,QAAQ;GAChC;;AAEN,SAAS,0CAA0C,MAAM,QAAQ;CAC7D,MAAM,aAAa,OAAO;CAC1B,IAAI,QAAQ;CACZ,IAAI;CACJ,MAAM,EAAE,WAAY;CACpB,MAAM,EAAE,KAAM,KAAM,YAAa,eAAgB,OAAO,eAAe;AACvE,KAAI,WACA,SAAQ,YAAY,aAAa,QAAQ,OAAO,MAAM,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE;AAErF,KAAI,WACA,SAAQ,YAAY,aAAa,QAAQ,OAAO,MAAM,IAAI,CAAC,KAAK,GAAG,OAAO,WAAW,GAAG;KAExF,SAAQ,aAAa;AAEzB,QAAO;EACH;EACA;EACH;;AAEL,IAAI,oBAAoB;CACpB,IAAI;CACJ,UAAU;EACN,WAAW;EACX,SAAS;EACZ;CACD,uBAAuB,OAAO,MAAM,YAAU;AAC1C,MAAI,CAAC,QAAQ,SAAS;AAClB,sBAAmB,MAAM;AACzB;;EAEJ,MAAM,iBAAiB,MAAM;AAC7B,QAAM,KAAK,SAAS,SAAS,SAAS,iBAAe;GACjD,MAAM,EAAE,OAAQ,cAAe;GAC/B,MAAM,OAAO,MAAM,eAAe,aAAa;GAC/C,MAAM,OAAO,SAAS,QAAQ;AAC9B,OAAI,QAAQ,CACR,WACA,MAAM,QAAQ,UACjB,CAAC,KAAK,IACH;AAEJ,OAAI,CAAC,KAAK,WAAW,mBACjB;GAEJ,MAAM,QAAQ,MAAM,OAAO,KAAK;AAChC,OAAI,MAAM,SAAS,YAAY,MAAM,SAAS,OAC1C;AAEJ,OAAI,MAAM,QAAQ,QACd;GAEJ,IAAI,EAAE,OAAQ,UAAW,0CAA0C,MAAM,KAAK;GAC9E,MAAM,YAAY,QAAQ,aAAa,IAAI;AAC3C,OAAI,SAAS,WAAW;AACpB,0BAAsB,QAAQ;AAC9B;;AAEJ,OAAI,cAAc,MAAM,EAAE;AACtB,YAAQ,QAAQ;AAChB,WAAO,QAAQ;AACf,WAAO,eAAe,SAAS,QAAQ;KACnC,cAAc;KACd,YAAY;KACZ,KAAK,WAAW;AACZ,aAAO,KAAK;;KAEhB,KAAK,SAAS,GAAG;AACb,WAAK,QAAQ;;KAEpB,CAAC;;GAEN,IAAI;AACJ,WAAO,QAAQ,WAAf;IACI,KAAK;AACD,iBAAY,eAAe,MAAM,OAAO,OAAO,gBAAgB,QAAQ;AACvE;IACJ,KAAK;AACD,iBAAY,iBAAiB,MAAM,OAAO,OAAO,eAAe;AAChE;IACJ,QACI,OAAM,IAAI,MAAM,qCAAqC,QAAQ,UAAU,GAAG;;AAElF,WAAQ,aAAa;IACvB;;CAEN,QAAS,OAAO;AACZ,qBAAmB,MAAM;;CAEhC;AAED,SAAS,UAAU,MAAM,QAAQ,UAAU;CACvC,MAAM,WAAW,KAAK;CACtB,MAAM,SAAS,KAAK;CACpB,MAAM,UAAU,OAAO;CACvB,MAAM,QAAQ,EAAE;AAChB,MAAK,MAAM,WAAW,UAAS;EAC3B,IAAI,EAAE,OAAQ,QAAS;AACvB,QAAM,gBAAgB,OAAO,KAAK,OAAO;EACzC,MAAM,SAAS,WAAW,UAAU,OAAO,QAAQ,OAAO,MAAM,QAAQ,KAAK;AAC7E,MAAI,CAAC,OAAO,UAAU;AAClB,SAAM,KAAK;IACP,QAAQ;IACR,QAAQ;IACR,OAAO,OAAO;IACd,KAAK,OAAO;IACf,CAAC;AACF;;EAEJ,MAAM,iBAAiB,eAAe,QAAQ,OAAO;AACrD,OAAK,MAAM,OAAO,gBAAe;GAC7B,MAAM,YAAY,WAAW,UAAU,QAAQ,IAAI,QAAQ,QAAQ,IAAI,MAAM,IAAI,KAAK;GACtF,MAAM,cAAc,cAAc,SAAS,QAAQ,UAAU;AAC7D,QAAK,MAAM,cAAc,YACrB,OAAM,KAAK;IACP,QAAQ;IACR,QAAQ;IACR,OAAO,GACF,WAAW,SAAS,QAAQ,WAAW,SAAS,KAAK,IAAI,EAC7D;IACD,KAAK,GACA,WAAW,SAAS,QAAQ,WAAW,OAAO,KAAK,IAAI,EAC3D;IACJ,CAAC;;;AAId,QAAO;;AAEX,SAAS,WAAW,UAAU,OAAO,MAAM,MAAM;AAC7C,KAAI,KACA;CAEJ,IAAI,QAAQ,MAAM;CAClB,IAAI,MAAM,KAAK;AACf,KAAI,aAAa,SAAS;AACtB,UAAQ,gBAAgB,MAAM;AAC9B,QAAM,gBAAgB,IAAI;;AAE9B,QAAO;EACH;EACA;EACA;EACH;;AAEL,SAAS,oBAAoB,UAAU,MAAM;CACzC,MAAM,EAAE,IAAG,MAAO,IAAG,SAAU,YAAY,EAAE;CAC7C,MAAM,aAAa,KAAK;CACxB,MAAM,SAAS,EAAE;AACjB,MAAK,SAAS,SAAS,EAAE,OAAQ,UAAS;AACtC,QAAM,gBAAgB,OAAO,KAAK,WAAW;EAC7C,MAAM,QAAQ,WAAW;EACzB,MAAM,OAAO,WAAW;AACxB,MAAI,MAAM,MAAM;AACZ,UAAO,KAAK;IACR,GAAG,MAAM;IACT;IACH,CAAC;AACF,UAAO,KAAK;IACR,GAAG,KAAK;IACR;IACH,CAAC;aACK,MAAM,MAAM;AACnB,UAAO,KAAK;IACR;IACA,GAAG,MAAM;IACZ,CAAC;AACF,UAAO,KAAK;IACR;IACA,GAAG,KAAK;IACX,CAAC;;GAER;AACF,QAAO;;AAEX,SAAS,gBAAgB,OAAO,KAAK,QAAQ;AACzC,QAAM,MAAM,OAAO,OAAM;EACrB,MAAM,QAAQ,OAAO;AACrB,MAAI,CAAC,MAAM,MAAM,EAAE,IAAI,CAAC,MAAM,MAAM,EAAE,CAClC;;AAGR,QAAO;;AAEX,SAAS,SAAS,GAAG,GAAG,MAAM,IAAI;AAC9B,KAAI,KAAK,EACL,QAAO,GAAG,EAAE,OAAO,EAAE,MAAM;AAE/B,QAAO,IAAI,EAAE,QAAQ,IAAI,EAAE,QAAQ;;AAGvC,SAAS,oBAAoB,UAAU,MAAM;CACzC,IAAI,SAAS,EAAE;CACf,IAAI,QAAQ;AACZ,KAAI,QAAQ,SAAS,EAAE;AACnB,UAAQ;AACR,WAAS;OAET,UAAS,oBAAoB,UAAU,KAAK;AAEhD,QAAO,OAAO,SAAS,IAAI,YAAY;EACnC;EACA,SAAS,EACL,SAAS,GACZ;EACD;EACA,WAAW;EACd,CAAC,GAAG;;AAET,SAAS,iBAAiB,QAAQ;AAC9B,QAAO,UAAU,OAAO,SAAS;;AAGrC,SAAS,eAAe,SAAS,SAAO,WAAW;CAE/C,IAAIY,SADW,QAAQd,SACL;CAClB,MAAM,UAAU,CACZA,QACH;CACD,IAAI;AACJ,KAAI,CAAC,UACD,QAAOc;AAEX,QAAMA,WAAS,SAAS,QAAQ,QAAQA,OAAK,KAAK,IAAG;AACjD,MAAI,CAAC,eAAeA,OAAK,CACrB,QAAOA;AAEX,WAAS,QAAQA;AACjB,MAAI,CAAC,OACD,QAAO;AAEX,MAAI,OAAO,QACP,QAAOA;AAEX,UAAQ,KAAKA,OAAK;AAClB,WAAO,OAAO;;AAElB,QAAO;;AAEV,SAAS,YAAY,MAAM,SAAO,OAAO;CACrC,MAAMA,SAAO,gBAAgB,KAAK;AACnC,KAAI,SAASA,OAAK,CACd,QAAO,MAAMA,OAAK,MAAM,GAAG,QAAQA;CAEvC,IAAI,SAAS,WAAWA,OAAK;AAC7B,KAAI,eAAe,OAAO,IAAI,KAAK,MAAM,OAAO,KAAK,OACjD,QAAO,kBAAkBA,OAAK,IAAId,SAAO,QAAQ,MAAM;AAE3D,QAAO;EACH;EACA;EACA;EACA;EACA;EACH,CAAC,QAAQc,OAAK,IAAI,KAAKA;;AAE5B,SAAS,kBAAkB,SAAS,SAAO,QAAQ,OAAO;AACtD,KAAI,YAAY,OAAO,YAAY,IAC/B,UAASd,UAAQ;AAErB,KAAI,WAAWA,WAAS,SAAS,KAAK,UAAU,MAC5C,QAAO;AAEX,QAAO;;AAEV,SAAS,gBAAgB,QAAM,OAAO;CACnC,IAAI,QAAQ;AACZ,KAAIc,WAAS,QACT,SAAQ,MAAM;UACPA,WAAS,MAChB,SAAQ,MAAM;UACP,SAASA,OAAK,CACrB,SAAQ,MAAM,iBAAiBA,OAAK,MAAM;UACnC,MAAM,aACb,SAAQ,MAAM,cAAc;AAEhC,QAAO;;AAEV,SAAS,gBAAgB,QAAM,OAAO,YAAY;CAC/C,IAAI;AACJ,KAAIA,WAAS,QACT,SAAQ;UACDA,WAAS,MAChB,SAAQ,MAAM,QAAQ,UAAU,MAAM,MAAM,MAAM;UAC3C,SAASA,OAAK,CACrB,SAAQA,OAAK;KAEb,SAAQ,MAAM,cAAc;AAEhC,QAAO;;AAEV,SAAS,gBAAgB,MAAM;CAC5B,MAAM,UAAU,KAAK;CACrB,MAAM,aAAa,QAAQ;CAC3B,IAAIA,SAAO,eAAe,cAAc,WAAW,QAAQ,WAAW;AACtE,KAAIA,WAAS,OACT,UAAO,CAAC,CAAC,QAAQ;AAErB,KAAIA,WAAS,SAASA,WAAS,KAC3B,QAAO;AAEX,KAAIA,WAAS,KACT,QAAO;AAEX,QAAOA;;AAGX,SAAS,gBAAgB,QAAQ;CAC7B,MAAM,EAAE,OAAQ,gBAAQ,SAAU;CAClC,MAAM,SAAS,EAAE;CACjB,MAAM,WAAW,KAAK;CACtB,MAAM,eAAe,KAAK;CAC1B,MAAM,aAAa,cAAc,OAAOd,QAAM;AAC9C,YAAW,KAAK,oBAAoB;EAChC,GAAG;EACH,GAAG,MAAM;EACZ,EAAE,KAAK,CAAC;AACT,MAAI,IAAI,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAI;EACpC,MAAM,UAAU,SAAS;AACzB,OAAI,IAAI,IAAI,QAAQ,OAAO,KAAK,QAAQ,KAAK,IACzC,gBAAe,QAAQ,aAAa,IAAI,WAAW;;AAG3D,QAAO,IAAI,YAAY;EACnB;EACA,SAAS,EAAE;EACd,CAAC;;AAEL,SAAS,cAAc,OAAO,SAAO;CAClC,MAAM,QAAQ,EAAE;CAChB,MAAM,QAAQ,MAAM,wBAAwB,OAAO;AACnD,MAAI,IAAI,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAI;EACjC,MAAM,OAAO,MAAM;AACnB,MAAI,KAAK,UAAUA,QACf;AAEJ,MAAI,CAAC,KAAK,OACN,OAAM,QAAQ,KAAK,QAAQ;;AAGnC,QAAO;;AAEV,SAAS,eAAe,QAAQ,aAAa,YAAY;CACtD,MAAM,YAAY,EAAE;AACpB,MAAI,IAAI,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAI;EACtC,MAAM,OAAO,WAAW;EACxB,MAAM,EAAE,OAAQ,MAAO,UAAW,UAAU,MAAM,aAAa,IAAI;AACnE,MAAI,CAAC,SAAS,SAAS,KACnB;AAEJ,MAAI,MACA,WAAU,QAAQ,MAAM;OACrB;AACH,UAAO,KAAK,MAAM;AAClB,OAAI,CAAC,KACD;;;AAIZ,QAAO,KAAK,GAAG,UAAU;;AAE5B,SAAS,UAAU,MAAM,aAAa,UAAU;CAC7C,MAAM,QAAQ,KAAK,YAAY,aAAa,SAAS;AACrD,KAAI,CAAC,MACD,QAAO,EAAE;CAEb,MAAM,aAAa,MAAM;CACzB,MAAM,WAAW,KAAK;CACtB,MAAM,aAAa,KAAK;CACxB,IAAI,QAAQ;CACZ,IAAI,OAAO;AACX,MAAI,IAAI,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAI;EACpC,MAAM,UAAU,SAAS;EACzB,MAAM,aAAa,WAAW,QAAQ,OAAO;EAC7C,MAAM,YAAY,WAAW,QAAQ,KAAK;AAC1C,MAAI,WAAW,YAAY,YAAY,UAAU,EAAE;AAC/C,WAAQ,eAAe;AACvB,UAAO,eAAe;AACtB;;;AAGR,QAAO;EACH;EACA;EACA;EACH;;AAGL,IAAM,YAAN,MAAgB;CACZ,YAAY,MAAK;AACb,OAAK,IAAI,KAAK;AACd,OAAK,IAAI,KAAK;AACd,OAAK,SAAS,KAAK;;CAEvB,YAAY,KAAK,QAAQ,MAAM;EAC3B,MAAM,EAAE,GAAI,GAAI,WAAY;AAC5B,WAAS,UAAU;GACf,OAAO;GACP,KAAK;GACR;AACD,MAAI,IAAI,GAAG,GAAG,QAAQ,OAAO,KAAK,OAAO,OAAO,KAAK;AACrD,SAAO,CAAC,KAAK;;CAEjB,YAAY,OAAO;EACf,MAAM,EAAE,GAAI,GAAI,WAAY;EAC5B,MAAM,QAAQ,MAAM;AACpB,SAAO;GACH,GAAG,IAAI,KAAK,IAAI,MAAM,GAAG;GACzB,GAAG,IAAI,KAAK,IAAI,MAAM,GAAG;GACzB;GACH;;;AAIT,SAAS,WAAW,QAAQ;CACxB,MAAM,EAAE,OAAQ,cAAO,SAAU;AACjC,KAAI,eAAec,OAAK,CACpB,QAAO,eAAe,OAAOA,OAAK;AAEtC,KAAIA,WAAS,QACT,QAAO,gBAAgB,OAAO;AAElC,KAAIA,WAAS,QACT,QAAO;CAEX,MAAM,WAAW,gBAAgB,OAAO;AACxC,KAAI,oBAAoB,UACpB,QAAO;AAEX,QAAO,oBAAoB,UAAU,KAAK;;AAE7C,SAAS,eAAe,OAAO,SAAO;CACnC,MAAM,OAAO,MAAM,eAAed,QAAM;AAExC,QADgB,QAAQ,MAAM,iBAAiBA,QAAM,GACpC,KAAK,UAAU;;AAEpC,SAAS,gBAAgB,QAAQ;AAE7B,MADc,OAAO,SAAS,EAAE,EACtB,yBACN,QAAO,wBAAwB,OAAO;AAE1C,QAAO,sBAAsB,OAAO;;AAExC,SAAS,sBAAsB,QAAQ;CACnC,MAAM,EAAE,QAAO,EAAE,EAAG,iBAAU;CAC9B,MAAM,QAAQ,gBAAgBc,QAAM,MAAM;AAC1C,KAAI,eAAe,MAAM,EAAE;EACvB,MAAM,aAAa,MAAM,cAAc;AACvC,SAAO;GACH,GAAG,aAAa,QAAQ;GACxB,GAAG,aAAa,OAAO;GAC1B;;AAEL,QAAO;;AAEX,SAAS,wBAAwB,QAAQ;CACrC,MAAM,EAAE,OAAQ,iBAAU;CAC1B,MAAM,UAAU,MAAM;CACtB,MAAM,SAAS,MAAM,WAAW,CAAC;CACjC,MAAM,QAAQ,QAAQ,UAAU,MAAM,MAAM,MAAM;CAClD,MAAM,QAAQ,gBAAgBA,QAAM,OAAO,MAAM;CACjD,MAAM,SAAS,EAAE;AACjB,KAAI,QAAQ,KAAK,UAAU;EACvB,MAAM,SAAS,MAAM,yBAAyB,GAAG,MAAM;AACvD,SAAO,IAAI,UAAU;GACjB,GAAG,OAAO;GACV,GAAG,OAAO;GACV,QAAQ,MAAM,8BAA8B,MAAM;GACrD,CAAC;;AAEN,MAAI,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,EACzB,QAAO,KAAK,MAAM,yBAAyB,GAAG,MAAM,CAAC;AAEzD,QAAO;;AAGX,SAAS,UAAU,KAAK,QAAQ,MAAM;CAClC,MAAM,SAAS,WAAW,OAAO;CACjC,MAAM,EAAE,OAAQ,gBAAQ,MAAO,OAAQ,SAAU;CACjD,MAAM,WAAW,KAAK;CACtB,MAAM,aAAa,SAAS;CAC5B,MAAMV,UAAQ,SAAS;CACvB,MAAM,EAAE,QAAOA,SAAQ,QAAOA,YAAW,cAAc,EAAE;CACzD,MAAM,OAAO,MAAM,eAAeJ,QAAM;CACxC,MAAM,OAAO,mBAAmB,OAAO,KAAK;AAC5C,KAAI,UAAU,KAAK,OAAO,QAAQ;AAC9B,WAAS,KAAK,KAAK;AACnB,SAAO,KAAK;GACR;GACA;GACA;GACA;GACA;GACA;GACA;GACA;GACH,CAAC;AACF,aAAW,IAAI;;;AAGvB,SAAS,OAAO,KAAK,KAAK;CACtB,MAAM,EAAE,MAAO,QAAS,OAAQ,OAAQ,MAAO,OAAQ,SAAU;CACjE,MAAM,WAAW,KAAK,QAAQ,UAAU,IAAI;AAC5C,KAAI,MAAM;CACV,IAAI,YAAY;AAChB,KAAI,UAAU,OACV;MAAI,aAAa,KAAK;AAClB,gBAAa,KAAK,QAAQ,KAAK,IAAI;AACnC,QAAK,KAAK;IACN;IACA;IACA,OAAO;IACP;IACA;IACA;IACH,CAAC;AACF,OAAI,SAAS;AACb,OAAI,MAAM;AACV,gBAAa,KAAK,QAAQ,KAAK,OAAO;aAC/B,aAAa,KAAK;AACzB,kBAAe,KAAK,QAAQ,KAAK,KAAK;AACtC,QAAK,KAAK;IACN;IACA;IACA,OAAO;IACP;IACA;IACA;IACH,CAAC;AACF,OAAI,SAAS;AACb,OAAI,MAAM;AACV,kBAAe,KAAK,QAAQ,KAAK,MAAM;AACvC,eAAY;;;AAGpB,MAAK,KAAK;EACN;EACA;EACA,OAAO;EACP;EACA;EACA;EACH,CAAC;AACF,KAAI,SAAS;;AAEjB,SAAS,aAAa,KAAK,QAAQ,OAAO;CACtC,MAAM,EAAE,UAAW,WAAY;CAC/B,IAAI,QAAQ;CACZ,IAAI,WAAW;AACf,KAAI,WAAW;AACf,MAAK,MAAM,WAAW,UAAS;EAC3B,MAAM,EAAE,OAAQ,QAAS;EACzB,MAAM,aAAa,OAAO;EAC1B,MAAM,YAAY,OAAO,gBAAgB,OAAO,KAAK,OAAO;AAC5D,MAAI,OAAO;AACP,OAAI,OAAO,WAAW,GAAG,WAAW,EAAE;AACtC,WAAQ;SACL;AACH,OAAI,OAAO,WAAW,GAAG,MAAM;AAC/B,OAAI,OAAO,WAAW,GAAG,WAAW,EAAE;;AAE1C,aAAW,CAAC,CAAC,OAAO,YAAY,KAAK,SAAS,EAC1C,MAAM,UACT,CAAC;AACF,MAAI,SACA,KAAI,WAAW;MAEf,KAAI,OAAO,UAAU,GAAG,MAAM;;AAGtC,KAAI,OAAO,OAAO,OAAO,CAAC,GAAG,MAAM;AACnC,KAAI,WAAW;AACf,KAAI,MAAM;;AAEd,SAAS,eAAe,KAAK,QAAQ,OAAO;CACxC,MAAM,EAAE,UAAW,WAAY;CAC/B,IAAI,QAAQ;CACZ,IAAI,WAAW;AACf,KAAI,WAAW;AACf,MAAK,MAAM,WAAW,UAAS;EAC3B,MAAM,EAAE,OAAQ,QAAS;EACzB,MAAM,aAAa,OAAO;EAC1B,MAAM,YAAY,OAAO,gBAAgB,OAAO,KAAK,OAAO;AAC5D,MAAI,OAAO;AACP,OAAI,OAAO,WAAW,GAAG,WAAW,EAAE;AACtC,WAAQ;SACL;AACH,OAAI,OAAO,OAAO,WAAW,EAAE;AAC/B,OAAI,OAAO,WAAW,GAAG,WAAW,EAAE;;AAE1C,aAAW,CAAC,CAAC,OAAO,YAAY,KAAK,SAAS,EAC1C,MAAM,UACT,CAAC;AACF,MAAI,SACA,KAAI,WAAW;MAEf,KAAI,OAAO,OAAO,UAAU,EAAE;;AAGtC,KAAI,OAAO,OAAO,OAAO,OAAO,CAAC,EAAE;AACnC,KAAI,WAAW;AACf,KAAI,MAAM;;AAEd,SAAS,KAAK,KAAK,KAAK;CACpB,MAAM,EAAE,MAAO,QAAS,UAAW,gBAAQ,OAAQ,SAAU;CAC7D,MAAM,WAAW,UAAU,MAAM,QAAQ,SAAS;AAClD,MAAK,MAAM,EAAE,QAAQ,KAAM,QAAQ,KAAM,OAAQ,SAAU,UAAS;EAChE,MAAM,EAAE,OAAO,EAAE,kBAAiBI,YAAW,EAAE,KAAM;EACrD,MAAM,WAAW,WAAW;AAC5B,MAAI,MAAM;AACV,MAAI,YAAY;AAChB,aAAW,KAAK,OAAO,MAAM,YAAY,WAAW,UAAU,OAAO,IAAI,CAAC;AAC1E,MAAI,WAAW;EACf,MAAM,WAAW,CAAC,CAAC,KAAK,YAAY,KAAK,IAAI;EAC7C,IAAI;AACJ,MAAI,UAAU;AACV,OAAI,SACA,KAAI,WAAW;OAEf,oBAAmB,KAAK,QAAQ,KAAK,SAAS;GAElD,MAAM,aAAa,CAAC,CAAC,OAAO,YAAY,KAAK,KAAK;IAC9C,MAAM;IACN,SAAS;IACZ,CAAC;AACF,UAAO,YAAY;AACnB,OAAI,CAAC,KACD,oBAAmB,KAAK,QAAQ,OAAO,SAAS;;AAGxD,MAAI,WAAW;AACf,MAAI,KAAK,OAAO,YAAY,UAAU;AACtC,MAAI,SAAS;;;AAGrB,SAAS,WAAW,KAAK,OAAO,MAAM,QAAQ;CAC1C,MAAM,YAAY,MAAM,MAAM;CAC9B,MAAM,EAAE,UAAW,OAAQ,QAAS,UAAU,EAAE;AAChD,KAAI,aAAa,OAAO,aAAa,KAAK;EACtC,IAAI,MAAM,KAAK,OAAO;AACtB,MAAI,aAAa,KAAK;AAClB,UAAO;AACP,SAAM,UAAU;AAChB,WAAQ;AACR,YAAS,UAAU;SAChB;AACH,UAAO,UAAU;AACjB,SAAM;AACN,WAAQ,UAAU;AAClB,YAAS;;AAEb,MAAI,WAAW;AACf,MAAI,MAAM;AACN,UAAO,KAAK,IAAI,MAAM,KAAK,KAAK;AAChC,WAAQ,KAAK,IAAI,OAAO,KAAK,MAAM;AACnC,SAAM,KAAK,IAAI,KAAK,KAAK,IAAI;AAC7B,YAAS,KAAK,IAAI,QAAQ,KAAK,OAAO;;AAE1C,MAAI,KAAK,MAAM,KAAK,QAAQ,MAAM,SAAS,IAAI;AAC/C,MAAI,MAAM;;;AAGlB,SAAS,mBAAmB,KAAK,QAAQ,OAAO,UAAU;CACtD,MAAM,oBAAoB,OAAO,YAAY,OAAO,SAAS;AAC7D,KAAI,kBACA,KAAI,OAAO,kBAAkB,GAAG,kBAAkB,EAAE;;AAI5D,IAAI,QAAQ;CACR,IAAI;CACJ,oBAAqB,OAAO,OAAO,SAAS;EACxC,MAAM,SAAS,MAAM,KAAK,YAAY,EAAE,EAAE;EAC1C,MAAM,UAAU,EAAE;EAClB,IAAI,MAAM,GAAG,MAAM;AACnB,OAAI,IAAI,GAAG,IAAI,OAAO,EAAE,GAAE;AACtB,UAAO,MAAM,eAAe,EAAE;AAC9B,UAAO,KAAK;AACZ,YAAS;AACT,OAAI,QAAQ,KAAK,WAAW,gBAAgB,YACxC,UAAS;IACL,SAAS,MAAM,iBAAiB,EAAE;IAClC,OAAO;IACP,MAAM,YAAY,MAAM,GAAG,MAAM;IACjC;IACA,MAAM,KAAK,WAAW,QAAQ;IAC9B,OAAO,KAAK;IACZ;IACH;AAEL,QAAK,UAAU;AACf,WAAQ,KAAK,OAAO;;AAExB,OAAI,IAAI,GAAG,IAAI,OAAO,EAAE,GAAE;AACtB,YAAS,QAAQ;AACjB,OAAI,CAAC,UAAU,OAAO,SAAS,MAC3B;AAEJ,UAAO,OAAO,eAAe,SAAS,GAAG,QAAQ,UAAU;;;CAGnE,WAAY,OAAO,OAAO,SAAS;EAC/B,MAAMP,SAAO,QAAQ,aAAa;EAClC,MAAM,WAAW,MAAM,8BAA8B;EACrD,MAAM,OAAO,MAAM;AACnB,OAAI,IAAI,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,EAAE,GAAE;GACzC,MAAM,SAAS,SAAS,GAAG;AAC3B,OAAI,CAAC,OACD;AAEJ,UAAO,KAAK,oBAAoB,MAAM,OAAO,KAAK;AAClD,OAAIA,UAAQ,OAAO,KACf,WAAU,MAAM,KAAK,QAAQ,KAAK;;;CAI9C,mBAAoB,OAAO,OAAO,SAAS;AACvC,MAAI,QAAQ,aAAa,qBACrB;EAEJ,MAAM,WAAW,MAAM,8BAA8B;AACrD,OAAI,IAAI,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,EAAE,GAAE;GACzC,MAAM,SAAS,SAAS,GAAG;AAC3B,OAAI,iBAAiB,OAAO,CACxB,WAAU,MAAM,KAAK,QAAQ,MAAM,UAAU;;;CAIzD,kBAAmB,OAAO,MAAM,SAAS;EACrC,MAAM,SAAS,KAAK,KAAK;AACzB,MAAI,CAAC,iBAAiB,OAAO,IAAI,QAAQ,aAAa,oBAClD;AAEJ,YAAU,MAAM,KAAK,QAAQ,MAAM,UAAU;;CAEjD,UAAU;EACN,WAAW;EACX,UAAU;EACb;CACJ;AAED,IAAM,cAAc,WAAW,aAAW;CACtC,IAAI,EAAE,YAAW,UAAW,WAAU,aAAc;AACpD,KAAI,UAAU,eAAe;AACzB,cAAY,KAAK,IAAI,WAAW,SAAS;AACzC,aAAW,UAAU,mBAAmB,KAAK,IAAI,UAAU,SAAS;;AAExE,QAAO;EACH;EACA;EACA,YAAY,KAAK,IAAI,UAAU,UAAU;EAC5C;;AAEL,IAAM,cAAc,GAAG,MAAI,MAAM,QAAQ,MAAM,QAAQ,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,UAAU,EAAE;AAC1G,IAAM,SAAN,cAAqB,QAAQ;CAC5B,YAAY,QAAO;AACZ,SAAO;AACP,OAAK,SAAS;AACd,OAAK,iBAAiB,EAAE;AAC/B,OAAK,eAAe;AACb,OAAK,eAAe;AACpB,OAAK,QAAQ,OAAO;AACpB,OAAK,UAAU,OAAO;AACtB,OAAK,MAAM,OAAO;AAClB,OAAK,cAAc;AACnB,OAAK,cAAc;AACnB,OAAK,aAAa;AAClB,OAAK,YAAY;AACjB,OAAK,WAAW;AAChB,OAAK,MAAM;AACX,OAAK,SAAS;AACd,OAAK,OAAO;AACZ,OAAK,QAAQ;AACb,OAAK,SAAS;AACd,OAAK,QAAQ;AACb,OAAK,WAAW;AAChB,OAAK,WAAW;AAChB,OAAK,SAAS;AACd,OAAK,WAAW;;CAEpB,OAAO,UAAU,WAAW,SAAS;AACjC,OAAK,WAAW;AAChB,OAAK,YAAY;AACjB,OAAK,WAAW;AAChB,OAAK,eAAe;AACpB,OAAK,aAAa;AAClB,OAAK,KAAK;;CAEd,gBAAgB;AACZ,MAAI,KAAK,cAAc,EAAE;AACrB,QAAK,QAAQ,KAAK;AAClB,QAAK,OAAO,KAAK,SAAS;AAC1B,QAAK,QAAQ,KAAK;SACf;AACH,QAAK,SAAS,KAAK;AACnB,QAAK,MAAM,KAAK,SAAS;AACzB,QAAK,SAAS,KAAK;;;CAG3B,cAAc;EACV,MAAM,YAAY,KAAK,QAAQ,UAAU,EAAE;EAC3C,IAAI,cAAc,SAAS,UAAU,gBAAgB,CACjD,KAAK,MACR,EAAE,KAAK,IAAI,EAAE;AACd,MAAI,UAAU,OACV,eAAc,YAAY,QAAQ,SAAO,UAAU,OAAO,MAAM,KAAK,MAAM,KAAK,CAAC;AAErF,MAAI,UAAU,KACV,eAAc,YAAY,MAAM,GAAG,MAAI,UAAU,KAAK,GAAG,GAAG,KAAK,MAAM,KAAK,CAAC;AAEjF,MAAI,KAAK,QAAQ,QACb,aAAY,SAAS;AAEzB,OAAK,cAAc;;CAEvB,MAAM;EACF,MAAM,EAAE,SAAU,QAAS;AAC3B,MAAI,CAAC,QAAQ,SAAS;AAClB,QAAK,QAAQ,KAAK,SAAS;AAC3B;;EAEJ,MAAM,YAAY,QAAQ;EAC1B,MAAM,YAAY,OAAO,UAAU,KAAK;EACxC,MAAM,WAAW,UAAU;EAC3B,MAAM,cAAc,KAAK,qBAAqB;EAC9C,MAAM,EAAE,UAAW,eAAgB,WAAW,WAAW,SAAS;EAClE,IAAI,OAAO;AACX,MAAI,OAAO,UAAU;AACrB,MAAI,KAAK,cAAc,EAAE;AACrB,WAAQ,KAAK;AACb,YAAS,KAAK,SAAS,aAAa,UAAU,UAAU,WAAW,GAAG;SACnE;AACH,YAAS,KAAK;AACd,WAAQ,KAAK,SAAS,aAAa,WAAW,UAAU,WAAW,GAAG;;AAE1E,OAAK,QAAQ,KAAK,IAAI,OAAO,QAAQ,YAAY,KAAK,SAAS;AAC/D,OAAK,SAAS,KAAK,IAAI,QAAQ,QAAQ,aAAa,KAAK,UAAU;;CAE1E,SAAS,aAAa,UAAU,UAAU,YAAY;EAC/C,MAAM,EAAE,KAAM,UAAW,SAAS,EAAE,QAAQ,EAAE,gBAAmB;EACjE,MAAM,WAAW,KAAK,iBAAiB,EAAE;EACzC,MAAM,aAAa,KAAK,aAAa,CACjC,EACH;EACD,MAAM,aAAa,aAAa;EAChC,IAAI,cAAc;AAClB,MAAI,YAAY;AAChB,MAAI,eAAe;EACnB,IAAI,MAAM;EACV,IAAI,MAAM,CAAC;AACX,OAAK,YAAY,SAAS,YAAY,MAAI;GACtC,MAAM,YAAY,WAAW,WAAW,IAAI,IAAI,YAAY,WAAW,KAAK,CAAC;AAC7E,OAAI,MAAM,KAAK,WAAW,WAAW,SAAS,KAAK,YAAY,IAAI,UAAU,UAAU;AACnF,mBAAe;AACf,eAAW,WAAW,UAAU,IAAI,IAAI,IAAI,MAAM;AAClD,WAAO;AACP;;AAEJ,YAAS,KAAK;IACV,MAAM;IACN;IACA;IACA,OAAO;IACP,QAAQ;IACX;AACD,cAAW,WAAW,SAAS,MAAM,YAAY;IACnD;AACF,SAAO;;CAEX,SAAS,aAAa,WAAW,UAAU,aAAa;EACpD,MAAM,EAAE,KAAM,WAAY,SAAS,EAAE,QAAQ,EAAE,gBAAmB;EAClE,MAAM,WAAW,KAAK,iBAAiB,EAAE;EACzC,MAAM,cAAc,KAAK,cAAc,EAAE;EACzC,MAAM,cAAc,YAAY;EAChC,IAAI,aAAa;EACjB,IAAI,kBAAkB;EACtB,IAAI,mBAAmB;EACvB,IAAI,OAAO;EACX,IAAI,MAAM;AACV,OAAK,YAAY,SAAS,YAAY,MAAI;GACtC,MAAM,EAAE,WAAY,eAAgB,kBAAkB,UAAU,WAAW,KAAK,YAAY,YAAY;AACxG,OAAI,IAAI,KAAK,mBAAmB,aAAa,IAAI,UAAU,aAAa;AACpE,kBAAc,kBAAkB;AAChC,gBAAY,KAAK;KACb,OAAO;KACP,QAAQ;KACX,CAAC;AACF,YAAQ,kBAAkB;AAC1B;AACA,sBAAkB,mBAAmB;;AAEzC,YAAS,KAAK;IACV;IACA,KAAK;IACL;IACA,OAAO;IACP,QAAQ;IACX;AACD,qBAAkB,KAAK,IAAI,iBAAiB,UAAU;AACtD,uBAAoB,aAAa;IACnC;AACF,gBAAc;AACd,cAAY,KAAK;GACb,OAAO;GACP,QAAQ;GACX,CAAC;AACF,SAAO;;CAEX,iBAAiB;AACb,MAAI,CAAC,KAAK,QAAQ,QACd;EAEJ,MAAM,cAAc,KAAK,qBAAqB;EAC9C,MAAM,EAAE,gBAAgB,UAAW,SAAS,EAAE,OAAQ,QAAQ,EAAE,WAAa,UAAY;EACzF,MAAM,YAAY,cAAc,KAAK,KAAK,MAAM,KAAK,MAAM;AAC3D,MAAI,KAAK,cAAc,EAAE;GACrB,IAAI,MAAM;GACV,IAAI,OAAO,eAAe,OAAO,KAAK,OAAO,SAAS,KAAK,QAAQ,KAAK,WAAW,KAAK;AACxF,QAAK,MAAM,UAAU,UAAS;AAC1B,QAAI,QAAQ,OAAO,KAAK;AACpB,WAAM,OAAO;AACb,YAAO,eAAe,OAAO,KAAK,OAAO,SAAS,KAAK,QAAQ,KAAK,WAAW,KAAK;;AAExF,WAAO,OAAO,KAAK,MAAM,cAAc;AACvC,WAAO,OAAO,UAAU,WAAW,UAAU,EAAE,KAAK,EAAE,OAAO,MAAM;AACnE,YAAQ,OAAO,QAAQ;;SAExB;GACH,IAAI,MAAM;GACV,IAAI,MAAM,eAAe,OAAO,KAAK,MAAM,cAAc,SAAS,KAAK,SAAS,KAAK,YAAY,KAAK,OAAO;AAC7G,QAAK,MAAM,UAAU,UAAS;AAC1B,QAAI,OAAO,QAAQ,KAAK;AACpB,WAAM,OAAO;AACb,WAAM,eAAe,OAAO,KAAK,MAAM,cAAc,SAAS,KAAK,SAAS,KAAK,YAAY,KAAK,OAAO;;AAE7G,WAAO,MAAM;AACb,WAAO,QAAQ,KAAK,OAAO;AAC3B,WAAO,OAAO,UAAU,WAAW,UAAU,EAAE,OAAO,KAAK,EAAE,OAAO,MAAM;AAC1E,WAAO,OAAO,SAAS;;;;CAInC,eAAe;AACX,SAAO,KAAK,QAAQ,aAAa,SAAS,KAAK,QAAQ,aAAa;;CAExE,OAAO;AACH,MAAI,KAAK,QAAQ,SAAS;GACtB,MAAM,MAAM,KAAK;AACjB,YAAS,KAAK,KAAK;AACnB,QAAK,OAAO;AACZ,cAAW,IAAI;;;CAG1B,QAAQ;EACD,MAAM,EAAE,SAAS,MAAO,aAAc,YAAa,QAAS;EAC5D,MAAM,EAAE,OAAQ,QAAQ,cAAe;EACvC,MAAM,eAAe,SAAS;EAC9B,MAAM,YAAY,cAAc,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM;EAChE,MAAM,YAAY,OAAO,UAAU,KAAK;EACxC,MAAM,EAAE,YAAa;EACrB,MAAM,WAAW,UAAU;EAC3B,MAAM,eAAe,WAAW;EAChC,IAAI;AACJ,OAAK,WAAW;AAChB,MAAI,YAAY,UAAU,UAAU,OAAO;AAC3C,MAAI,eAAe;AACnB,MAAI,YAAY;AAChB,MAAI,OAAO,UAAU;EACrB,MAAM,EAAE,UAAW,WAAY,eAAgB,WAAW,WAAW,SAAS;EAC9E,MAAM,gBAAgB,SAAS,GAAG,GAAG,YAAY;AAC7C,OAAI,MAAM,SAAS,IAAI,YAAY,KAAK,MAAM,UAAU,IAAI,YAAY,EACpE;AAEJ,OAAI,MAAM;GACV,MAAM,YAAY,eAAe,WAAW,WAAW,EAAE;AACzD,OAAI,YAAY,eAAe,WAAW,WAAW,aAAa;AAClE,OAAI,UAAU,eAAe,WAAW,SAAS,OAAO;AACxD,OAAI,iBAAiB,eAAe,WAAW,gBAAgB,EAAE;AACjE,OAAI,WAAW,eAAe,WAAW,UAAU,QAAQ;AAC3D,OAAI,YAAY;AAChB,OAAI,cAAc,eAAe,WAAW,aAAa,aAAa;AACtE,OAAI,YAAY,eAAe,WAAW,UAAU,EAAE,CAAC,CAAC;AACxD,OAAI,UAAU,eAAe;IACzB,MAAM,cAAc;KAChB,QAAQ,YAAY,KAAK,QAAQ;KACjC,YAAY,WAAW;KACvB,UAAU,WAAW;KACrB,aAAa;KAChB;IACD,MAAM,UAAU,UAAU,MAAM,GAAG,WAAW,EAAE;IAChD,MAAM,UAAU,IAAI;AACpB,oBAAgB,KAAK,aAAa,SAAS,SAAS,UAAU,mBAAmB,SAAS;UACvF;IACH,MAAM,UAAU,IAAI,KAAK,KAAK,WAAW,aAAa,GAAG,EAAE;IAC3D,MAAM,WAAW,UAAU,WAAW,GAAG,SAAS;IAClD,MAAM,eAAe,cAAc,WAAW,aAAa;AAC3D,QAAI,WAAW;AACf,QAAI,OAAO,OAAO,aAAa,CAAC,MAAM,MAAI,MAAM,EAAE,CAC9C,oBAAmB,KAAK;KACpB,GAAG;KACH,GAAG;KACH,GAAG;KACH,GAAG;KACH,QAAQ;KACX,CAAC;QAEF,KAAI,KAAK,UAAU,SAAS,UAAU,UAAU;AAEpD,QAAI,MAAM;AACV,QAAI,cAAc,EACd,KAAI,QAAQ;;AAGpB,OAAI,SAAS;;EAEjB,MAAM,WAAW,SAAS,GAAG,GAAG,YAAY;AACxC,cAAW,KAAK,WAAW,MAAM,GAAG,IAAI,aAAa,GAAG,WAAW;IAC/D,eAAe,WAAW;IAC1B,WAAW,UAAU,UAAU,WAAW,UAAU;IACvD,CAAC;;EAEN,MAAM,eAAe,KAAK,cAAc;EACxC,MAAM,cAAc,KAAK,qBAAqB;AAC9C,MAAI,aACA,UAAS;GACL,GAAG,eAAe,OAAO,KAAK,OAAO,SAAS,KAAK,QAAQ,WAAW,GAAG;GACzE,GAAG,KAAK,MAAM,UAAU;GACxB,MAAM;GACT;MAED,UAAS;GACL,GAAG,KAAK,OAAO;GACf,GAAG,eAAe,OAAO,KAAK,MAAM,cAAc,SAAS,KAAK,SAAS,YAAY,GAAG,OAAO;GAC/F,MAAM;GACT;AAEL,wBAAsB,KAAK,KAAK,KAAK,cAAc;EACnD,MAAM,aAAa,aAAa;AAChC,OAAK,YAAY,SAAS,YAAY,MAAI;AACtC,OAAI,cAAc,WAAW;AAC7B,OAAI,YAAY,WAAW;GAC3B,MAAM,YAAY,IAAI,YAAY,WAAW,KAAK,CAAC;GACnD,MAAM,YAAY,UAAU,UAAU,WAAW,cAAc,WAAW,YAAY,UAAU,WAAW;GAC3G,MAAM,QAAQ,WAAW,eAAe;GACxC,IAAI,IAAI,OAAO;GACf,IAAI,IAAI,OAAO;AACf,aAAU,SAAS,KAAK,MAAM;AAC9B,OAAI,cACA;QAAI,IAAI,KAAK,IAAI,QAAQ,UAAU,KAAK,OAAO;AAC3C,SAAI,OAAO,KAAK;AAChB,YAAO;AACP,SAAI,OAAO,IAAI,eAAe,OAAO,KAAK,OAAO,SAAS,KAAK,QAAQ,WAAW,OAAO,MAAM;;cAE5F,IAAI,KAAK,IAAI,aAAa,KAAK,QAAQ;AAC9C,QAAI,OAAO,IAAI,IAAI,YAAY,OAAO,MAAM,QAAQ;AACpD,WAAO;AACP,QAAI,OAAO,IAAI,eAAe,OAAO,KAAK,MAAM,cAAc,SAAS,KAAK,SAAS,YAAY,OAAO,MAAM,OAAO;;GAEzH,MAAM,QAAQ,UAAU,EAAE,EAAE;AAC5B,iBAAc,OAAO,GAAG,WAAW;AACnC,OAAI,OAAO,WAAW,IAAI,WAAW,cAAc,eAAe,IAAI,QAAQ,KAAK,OAAO,KAAK,IAAI;AACnG,YAAS,UAAU,EAAE,EAAE,EAAE,GAAG,WAAW;AACvC,OAAI,aACA,QAAO,KAAK,QAAQ;YACb,OAAO,WAAW,SAAS,UAAU;IAC5C,MAAM,iBAAiB,UAAU;AACjC,WAAO,KAAK,0BAA0B,YAAY,eAAe,GAAG;SAEpE,QAAO,KAAK;IAElB;AACF,uBAAqB,KAAK,KAAK,KAAK,cAAc;;CAEzD,YAAY;EACL,MAAM,OAAO,KAAK;EAClB,MAAM,YAAY,KAAK;EACvB,MAAM,YAAY,OAAO,UAAU,KAAK;EACxC,MAAM,eAAe,UAAU,UAAU,QAAQ;AACjD,MAAI,CAAC,UAAU,QACX;EAEJ,MAAM,YAAY,cAAc,KAAK,KAAK,KAAK,MAAM,KAAK,MAAM;EAChE,MAAM,MAAM,KAAK;EACjB,MAAM,WAAW,UAAU;EAC3B,MAAM,eAAe,UAAU,OAAO;EACtC,MAAM,6BAA6B,aAAa,MAAM;EACtD,IAAI;EACJ,IAAI,OAAO,KAAK;EAChB,IAAI,WAAW,KAAK;AACpB,MAAI,KAAK,cAAc,EAAE;AACrB,cAAW,KAAK,IAAI,GAAG,KAAK,WAAW;AACvC,OAAI,KAAK,MAAM;AACf,UAAO,eAAe,KAAK,OAAO,MAAM,KAAK,QAAQ,SAAS;SAC3D;GACH,MAAM,YAAY,KAAK,YAAY,QAAQ,KAAK,SAAO,KAAK,IAAI,KAAK,KAAK,OAAO,EAAE,EAAE;AACrF,OAAI,6BAA6B,eAAe,KAAK,OAAO,KAAK,KAAK,KAAK,SAAS,YAAY,KAAK,OAAO,UAAU,KAAK,qBAAqB,CAAC;;EAErJ,MAAM,IAAI,eAAe,UAAU,MAAM,OAAO,SAAS;AACzD,MAAI,YAAY,UAAU,UAAU,mBAAmB,SAAS,CAAC;AACjE,MAAI,eAAe;AACnB,MAAI,cAAc,UAAU;AAC5B,MAAI,YAAY,UAAU;AAC1B,MAAI,OAAO,UAAU;AACrB,aAAW,KAAK,UAAU,MAAM,GAAG,GAAG,UAAU;;CAEvD,sBAAsB;EACf,MAAM,YAAY,KAAK,QAAQ;EAC/B,MAAM,YAAY,OAAO,UAAU,KAAK;EACxC,MAAM,eAAe,UAAU,UAAU,QAAQ;AACjD,SAAO,UAAU,UAAU,UAAU,aAAa,aAAa,SAAS;;CAE/E,iBAAiB,GAAG,GAAG;EAChB,IAAI,GAAG,QAAQ;AACf,MAAI,WAAW,GAAG,KAAK,MAAM,KAAK,MAAM,IAAI,WAAW,GAAG,KAAK,KAAK,KAAK,OAAO,EAAE;AAC9E,QAAK,KAAK;AACV,QAAI,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE,GAAE;AAC1B,aAAS,GAAG;AACZ,QAAI,WAAW,GAAG,OAAO,MAAM,OAAO,OAAO,OAAO,MAAM,IAAI,WAAW,GAAG,OAAO,KAAK,OAAO,MAAM,OAAO,OAAO,CAC/G,QAAO,KAAK,YAAY;;;AAIpC,SAAO;;CAEd,YAAY,GAAG;EACR,MAAM,OAAO,KAAK;AAClB,MAAI,CAAC,WAAW,EAAE,MAAM,KAAK,CACzB;EAEJ,MAAM,cAAc,KAAK,iBAAiB,EAAE,GAAG,EAAE,EAAE;AACnD,MAAI,EAAE,SAAS,eAAe,EAAE,SAAS,YAAY;GACjD,MAAM,WAAW,KAAK;GACtB,MAAM,WAAW,WAAW,UAAU,YAAY;AAClD,OAAI,YAAY,CAAC,SACb,UAAS,KAAK,SAAS;IACnB;IACA;IACA;IACH,EAAE,KAAK;AAEZ,QAAK,eAAe;AACpB,OAAI,eAAe,CAAC,SAChB,UAAS,KAAK,SAAS;IACnB;IACA;IACA;IACH,EAAE,KAAK;aAEL,YACP,UAAS,KAAK,SAAS;GACnB;GACA;GACA;GACH,EAAE,KAAK;;;AAIpB,SAAS,kBAAkB,UAAU,WAAW,KAAK,YAAY,aAAa;CAC1E,MAAM,YAAY,mBAAmB,YAAY,UAAU,WAAW,IAAI;CAC1E,MAAM,aAAa,oBAAoB,aAAa,YAAY,UAAU,WAAW;AACrF,QAAO;EACH;EACA;EACH;;AAEL,SAAS,mBAAmB,YAAY,UAAU,WAAW,KAAK;CAC9D,IAAI,iBAAiB,WAAW;AAChC,KAAI,kBAAkB,OAAO,mBAAmB,SAC5C,kBAAiB,eAAe,QAAQ,GAAG,MAAI,EAAE,SAAS,EAAE,SAAS,IAAI,EAAE;AAE/E,QAAO,WAAW,UAAU,OAAO,IAAI,IAAI,YAAY,eAAe,CAAC;;AAE3E,SAAS,oBAAoB,aAAa,YAAY,gBAAgB;CAClE,IAAI,aAAa;AACjB,KAAI,OAAO,WAAW,SAAS,SAC3B,cAAa,0BAA0B,YAAY,eAAe;AAEtE,QAAO;;AAEX,SAAS,0BAA0B,YAAY,gBAAgB;CAC3D,MAAM,cAAc,WAAW,OAAO,WAAW,KAAK,SAAS;AAC/D,QAAO,iBAAiB;;AAE5B,SAAS,WAAW,MAAM,MAAM;AAC5B,MAAK,SAAS,eAAe,SAAS,gBAAgB,KAAK,WAAW,KAAK,SACvE,QAAO;AAEX,KAAI,KAAK,YAAY,SAAS,WAAW,SAAS,WAC9C,QAAO;AAEX,QAAO;;AAEX,IAAI,gBAAgB;CAChB,IAAI;CACP,UAAU;CACP,MAAO,OAAO,OAAO,SAAS;EAC1B,MAAM,SAAS,MAAM,SAAS,IAAI,OAAO;GACrC,KAAK,MAAM;GACX;GACA;GACH,CAAC;AACF,UAAQ,UAAU,OAAO,QAAQ,QAAQ;AACzC,UAAQ,OAAO,OAAO,OAAO;;CAEjC,KAAM,OAAO;AACT,UAAQ,UAAU,OAAO,MAAM,OAAO;AACtC,SAAO,MAAM;;CAEjB,aAAc,OAAO,OAAO,SAAS;EACjC,MAAM,SAAS,MAAM;AACrB,UAAQ,UAAU,OAAO,QAAQ,QAAQ;AACzC,SAAO,UAAU;;CAErB,YAAa,OAAO;EAChB,MAAM,SAAS,MAAM;AACrB,SAAO,aAAa;AACpB,SAAO,gBAAgB;;CAE3B,WAAY,OAAO,MAAM;AACrB,MAAI,CAAC,KAAK,OACN,OAAM,OAAO,YAAY,KAAK,MAAM;;CAG5C,UAAU;EACN,SAAS;EACT,UAAU;EACV,OAAO;EACP,UAAU;EACV,SAAS;EACT,QAAQ;EACR,QAAS,GAAG,YAAY,QAAQ;GAC5B,MAAMG,UAAQ,WAAW;GACzB,MAAM,KAAK,OAAO;AAClB,OAAI,GAAG,iBAAiBA,QAAM,EAAE;AAC5B,OAAG,KAAKA,QAAM;AACd,eAAW,SAAS;UACjB;AACH,OAAG,KAAKA,QAAM;AACd,eAAW,SAAS;;;EAG5B,SAAS;EACT,SAAS;EACT,QAAQ;GACJ,QAAQ,QAAM,IAAI,MAAM,QAAQ;GAChC,UAAU;GACV,SAAS;GACT,eAAgB,OAAO;IACnB,MAAM,WAAW,MAAM,KAAK;IAC5B,MAAM,EAAE,QAAQ,EAAE,eAAgB,YAAa,WAAY,gBAAQ,iBAAkB,mBAAqB,MAAM,OAAO;AACvH,WAAO,MAAM,wBAAwB,CAAC,KAAK,SAAO;KAC9C,MAAM,QAAQ,KAAK,WAAW,SAAS,gBAAgB,IAAI,OAAU;KACrE,MAAM,cAAc,UAAU,MAAM,YAAY;AAChD,YAAO;MACH,MAAM,SAAS,KAAK,OAAO;MAC3B,WAAW,MAAM;MACjB,WAAWI;MACX,QAAQ,CAAC,KAAK;MACd,SAAS,MAAM;MACf,UAAU,MAAM;MAChB,gBAAgB,MAAM;MACtB,UAAU,MAAM;MAChB,YAAY,YAAY,QAAQ,YAAY,UAAU;MACtD,aAAa,MAAM;MACnB,YAAY,cAAc,MAAM;MAChC,UAAU,MAAM;MAChB,WAAW,aAAa,MAAM;MAC9B,cAAc,oBAAoB,gBAAgB,MAAM;MACxD,cAAc,KAAK;MACtB;OACF,KAAK;;GAEf;EACD,OAAO;GACH,QAAQ,QAAM,IAAI,MAAM,QAAQ;GAChC,SAAS;GACT,UAAU;GACV,MAAM;GACT;EACJ;CACD,aAAa;EACT,cAAc,SAAO,CAAC,KAAK,WAAW,KAAK;EAC3C,QAAQ,EACJ,cAAc,SAAO,CAAC;GACd;GACA;GACA;GACH,CAAC,SAAS,KAAK,EACvB;EACJ;CACJ;AAED,IAAM,QAAN,cAAoB,QAAQ;CAC3B,YAAY,QAAO;AACZ,SAAO;AACP,OAAK,QAAQ,OAAO;AACpB,OAAK,UAAU,OAAO;AACtB,OAAK,MAAM,OAAO;AAClB,OAAK,WAAW;AAChB,OAAK,MAAM;AACX,OAAK,SAAS;AACd,OAAK,OAAO;AACZ,OAAK,QAAQ;AACb,OAAK,QAAQ;AACb,OAAK,SAAS;AACd,OAAK,WAAW;AAChB,OAAK,SAAS;AACd,OAAK,WAAW;;CAEpB,OAAO,UAAU,WAAW;EACxB,MAAM,OAAO,KAAK;AAClB,OAAK,OAAO;AACZ,OAAK,MAAM;AACX,MAAI,CAAC,KAAK,SAAS;AACf,QAAK,QAAQ,KAAK,SAAS,KAAK,QAAQ,KAAK,SAAS;AACtD;;AAEJ,OAAK,QAAQ,KAAK,QAAQ;AAC1B,OAAK,SAAS,KAAK,SAAS;EAC5B,MAAM,YAAY,QAAQ,KAAK,KAAK,GAAG,KAAK,KAAK,SAAS;AAC1D,OAAK,WAAW,UAAU,KAAK,QAAQ;EACvC,MAAM,WAAW,YAAY,OAAO,KAAK,KAAK,CAAC,aAAa,KAAK,SAAS;AAC1E,MAAI,KAAK,cAAc,CACnB,MAAK,SAAS;MAEd,MAAK,QAAQ;;CAGrB,eAAe;EACX,MAAM,MAAM,KAAK,QAAQ;AACzB,SAAO,QAAQ,SAAS,QAAQ;;CAEpC,UAAU,QAAQ;EACd,MAAM,EAAE,KAAM,MAAO,QAAS,OAAQ,YAAa;EACnD,MAAM,QAAQ,QAAQ;EACtB,IAAI,WAAW;EACf,IAAI,UAAU,QAAQ;AACtB,MAAI,KAAK,cAAc,EAAE;AACrB,YAAS,eAAe,OAAO,MAAM,MAAM;AAC3C,YAAS,MAAM;AACf,cAAW,QAAQ;SAChB;AACH,OAAI,QAAQ,aAAa,QAAQ;AAC7B,aAAS,OAAO;AAChB,aAAS,eAAe,OAAO,QAAQ,IAAI;AAC3C,eAAW,KAAK;UACb;AACH,aAAS,QAAQ;AACjB,aAAS,eAAe,OAAO,KAAK,OAAO;AAC3C,eAAW,KAAK;;AAEpB,cAAW,SAAS;;AAExB,SAAO;GACH;GACA;GACA;GACA;GACH;;CAEL,OAAO;EACH,MAAM,MAAM,KAAK;EACjB,MAAM,OAAO,KAAK;AAClB,MAAI,CAAC,KAAK,QACN;EAEJ,MAAM,WAAW,OAAO,KAAK,KAAK;EAElC,MAAM,SADa,SAAS,aACA,IAAI,KAAK,SAAS;EAC9C,MAAM,EAAE,QAAS,QAAS,UAAW,aAAc,KAAK,UAAU,OAAO;AACzE,aAAW,KAAK,KAAK,MAAM,GAAG,GAAG,UAAU;GACvC,OAAO,KAAK;GACZ;GACA;GACA,WAAW,mBAAmB,KAAK,MAAM;GACzC,cAAc;GACd,aAAa,CACT,QACA,OACH;GACJ,CAAC;;;AAGV,SAAS,YAAY,OAAO,WAAW;CACnC,MAAM,QAAQ,IAAI,MAAM;EACpB,KAAK,MAAM;EACX,SAAS;EACT;EACH,CAAC;AACF,SAAQ,UAAU,OAAO,OAAO,UAAU;AAC1C,SAAQ,OAAO,OAAO,MAAM;AAC5B,OAAM,aAAa;;AAEvB,IAAI,eAAe;CACf,IAAI;CACP,UAAU;CACP,MAAO,OAAO,OAAO,SAAS;AAC1B,cAAY,OAAO,QAAQ;;CAE/B,KAAM,OAAO;EACT,MAAM,aAAa,MAAM;AACzB,UAAQ,UAAU,OAAO,WAAW;AACpC,SAAO,MAAM;;CAEjB,aAAc,OAAO,OAAO,SAAS;EACjC,MAAM,QAAQ,MAAM;AACpB,UAAQ,UAAU,OAAO,OAAO,QAAQ;AACxC,QAAM,UAAU;;CAEpB,UAAU;EACN,OAAO;EACP,SAAS;EACT,MAAM,EACF,QAAQ,QACX;EACD,UAAU;EACV,SAAS;EACT,UAAU;EACV,MAAM;EACN,QAAQ;EACX;CACD,eAAe,EACX,OAAO,SACV;CACD,aAAa;EACT,aAAa;EACb,YAAY;EACf;CACJ;AAED,IAAM,sBAAM,IAAI,SAAS;AACzB,IAAI,kBAAkB;CAClB,IAAI;CACJ,MAAO,OAAO,OAAO,SAAS;EAC1B,MAAM,QAAQ,IAAI,MAAM;GACpB,KAAK,MAAM;GACX;GACA;GACH,CAAC;AACF,UAAQ,UAAU,OAAO,OAAO,QAAQ;AACxC,UAAQ,OAAO,OAAO,MAAM;AAC5B,MAAI,IAAI,OAAO,MAAM;;CAEzB,KAAM,OAAO;AACT,UAAQ,UAAU,OAAO,IAAI,IAAI,MAAM,CAAC;AACxC,MAAI,OAAO,MAAM;;CAErB,aAAc,OAAO,OAAO,SAAS;EACjC,MAAM,QAAQ,IAAI,IAAI,MAAM;AAC5B,UAAQ,UAAU,OAAO,OAAO,QAAQ;AACxC,QAAM,UAAU;;CAEpB,UAAU;EACN,OAAO;EACP,SAAS;EACT,MAAM,EACF,QAAQ,UACX;EACD,UAAU;EACV,SAAS;EACT,UAAU;EACV,MAAM;EACN,QAAQ;EACX;CACD,eAAe,EACX,OAAO,SACV;CACD,aAAa;EACT,aAAa;EACb,YAAY;EACf;CACJ;AAED,IAAM,cAAc;CACnB,QAAS,OAAO;AACT,MAAI,CAAC,MAAM,OACP,QAAO;EAEX,IAAI,GAAG;EACP,IAAI,uBAAO,IAAI,KAAK;EACpB,IAAI,IAAI;EACR,IAAI,QAAQ;AACZ,OAAI,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,EAAE,GAAE;GACxC,MAAM,KAAK,MAAM,GAAG;AACpB,OAAI,MAAM,GAAG,UAAU,EAAE;IACrB,MAAM,MAAM,GAAG,iBAAiB;AAChC,SAAK,IAAI,IAAI,EAAE;AACf,SAAK,IAAI;AACT,MAAE;;;AAGV,MAAI,UAAU,KAAK,KAAK,SAAS,EAC7B,QAAO;AAKX,SAAO;GACH,GAJa,CACb,GAAG,KACN,CAAC,QAAQ,GAAG,MAAI,IAAI,EAAE,GAAG,KAAK;GAG3B,GAAG,IAAI;GACV;;CAER,QAAS,OAAO,eAAe;AACxB,MAAI,CAAC,MAAM,OACP,QAAO;EAEX,IAAI,IAAI,cAAc;EACtB,IAAI,IAAI,cAAc;EACtB,IAAI,cAAc,OAAO;EACzB,IAAI,GAAG,KAAK;AACZ,OAAI,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,EAAE,GAAE;GACxC,MAAM,KAAK,MAAM,GAAG;AACpB,OAAI,MAAM,GAAG,UAAU,EAAE;IACrB,MAAM,SAAS,GAAG,gBAAgB;IAClC,MAAM,IAAI,sBAAsB,eAAe,OAAO;AACtD,QAAI,IAAI,aAAa;AACjB,mBAAc;AACd,sBAAiB;;;;AAI7B,MAAI,gBAAgB;GAChB,MAAM,KAAK,eAAe,iBAAiB;AAC3C,OAAI,GAAG;AACP,OAAI,GAAG;;AAEX,SAAO;GACH;GACA;GACH;;CAER;AACD,SAAS,aAAa,MAAM,QAAQ;AAChC,KAAI,OACA,KAAI,QAAQ,OAAO,CACf,OAAM,UAAU,KAAK,MAAM,MAAM,OAAO;KAExC,MAAK,KAAK,OAAO;AAGzB,QAAO;;AAEV,SAAS,cAAc,KAAK;AACzB,MAAK,OAAO,QAAQ,YAAY,eAAe,WAAW,IAAI,QAAQ,KAAK,GAAG,GAC1E,QAAO,IAAI,MAAM,KAAK;AAE1B,QAAO;;AAEV,SAAS,kBAAkB,OAAO,MAAM;CACrC,MAAM,EAAE,SAAU,cAAe,mBAAW;CAC5C,MAAM,aAAa,MAAM,eAAe,aAAa,CAAC;CACtD,MAAM,EAAE,OAAQ,UAAW,WAAW,iBAAiBJ,QAAM;AAC7D,QAAO;EACH;EACA;EACA,QAAQ,WAAW,UAAUA,QAAM;EACnC,KAAK,MAAM,KAAK,SAAS,cAAc,KAAKA;EAC5C,gBAAgB;EAChB,SAAS,WAAW,YAAY;EAChC,WAAWA;EACX;EACA;EACH;;AAEJ,SAAS,eAAe,SAAS,SAAS;CACvC,MAAM,MAAM,QAAQ,MAAM;CAC1B,MAAM,EAAE,MAAO,QAAS,UAAW;CACnC,MAAM,EAAE,UAAW,cAAe;CAClC,MAAM,WAAW,OAAO,QAAQ,SAAS;CACzC,MAAM,YAAY,OAAO,QAAQ,UAAU;CAC3C,MAAM,aAAa,OAAO,QAAQ,WAAW;CAC7C,MAAM,iBAAiB,MAAM;CAC7B,MAAM,kBAAkB,OAAO;CAC/B,MAAM,oBAAoB,KAAK;CAC/B,MAAM,UAAU,UAAU,QAAQ,QAAQ;CAC1C,IAAI,SAAS,QAAQ;CACrB,IAAI,QAAQ;CACZ,IAAI,qBAAqB,KAAK,QAAQ,OAAO,aAAW,QAAQ,SAAS,OAAO,SAAS,SAAS,MAAM,SAAS,SAAS,MAAM,QAAQ,EAAE;AAC1I,uBAAsB,QAAQ,WAAW,SAAS,QAAQ,UAAU;AACpE,KAAI,eACA,WAAU,iBAAiB,UAAU,cAAc,iBAAiB,KAAK,QAAQ,eAAe,QAAQ;AAE5G,KAAI,oBAAoB;EACpB,MAAM,iBAAiB,QAAQ,gBAAgB,KAAK,IAAI,WAAW,SAAS,WAAW,GAAG,SAAS;AACnG,YAAU,oBAAoB,kBAAkB,qBAAqB,qBAAqB,SAAS,cAAc,qBAAqB,KAAK,QAAQ;;AAEvJ,KAAI,gBACA,WAAU,QAAQ,kBAAkB,kBAAkB,WAAW,cAAc,kBAAkB,KAAK,QAAQ;CAElH,IAAI,eAAe;CACnB,MAAM,eAAe,SAAS,MAAM;AAChC,UAAQ,KAAK,IAAI,OAAO,IAAI,YAAY,KAAK,CAAC,QAAQ,aAAa;;AAEvE,KAAI,MAAM;AACV,KAAI,OAAO,UAAU;AACrB,MAAK,QAAQ,OAAO,aAAa;AACjC,KAAI,OAAO,SAAS;AACpB,MAAK,QAAQ,WAAW,OAAO,QAAQ,UAAU,EAAE,aAAa;AAChE,gBAAe,QAAQ,gBAAgB,WAAW,IAAI,QAAQ,aAAa;AAC3E,MAAK,OAAO,aAAW;AACnB,OAAK,SAAS,QAAQ,aAAa;AACnC,OAAK,SAAS,OAAO,aAAa;AAClC,OAAK,SAAS,OAAO,aAAa;GACpC;AACF,gBAAe;AACf,KAAI,OAAO,WAAW;AACtB,MAAK,QAAQ,QAAQ,aAAa;AAClC,KAAI,SAAS;AACb,UAAS,QAAQ;AACjB,QAAO;EACH;EACA;EACH;;AAEL,SAAS,gBAAgB,OAAO,MAAM;CAClC,MAAM,EAAE,GAAI,WAAY;AACxB,KAAI,IAAI,SAAS,EACb,QAAO;UACA,IAAI,MAAM,SAAS,SAAS,EACnC,QAAO;AAEX,QAAO;;AAEX,SAAS,oBAAoB,QAAQ,OAAO,SAAS,MAAM;CACvD,MAAM,EAAE,GAAI,UAAW;CACvB,MAAM,QAAQ,QAAQ,YAAY,QAAQ;AAC1C,KAAI,WAAW,UAAU,IAAI,QAAQ,QAAQ,MAAM,MAC/C,QAAO;AAEX,KAAI,WAAW,WAAW,IAAI,QAAQ,QAAQ,EAC1C,QAAO;;AAGf,SAAS,gBAAgB,OAAO,SAAS,MAAM,QAAQ;CACnD,MAAM,EAAE,GAAI,UAAW;CACvB,MAAM,EAAE,OAAO,YAAa,WAAW,EAAE,MAAO,YAAc;CAC9D,IAAI,SAAS;AACb,KAAI,WAAW,SACX,UAAS,MAAM,OAAO,SAAS,IAAI,SAAS;UACrC,KAAK,QAAQ,EACpB,UAAS;UACF,KAAK,aAAa,QAAQ,EACjC,UAAS;AAEb,KAAI,oBAAoB,QAAQ,OAAO,SAAS,KAAK,CACjD,UAAS;AAEb,QAAO;;AAEV,SAAS,mBAAmB,OAAO,SAAS,MAAM;CAC/C,MAAM,SAAS,KAAK,UAAU,QAAQ,UAAU,gBAAgB,OAAO,KAAK;AAC5E,QAAO;EACH,QAAQ,KAAK,UAAU,QAAQ,UAAU,gBAAgB,OAAO,SAAS,MAAM,OAAO;EACtF;EACH;;AAEL,SAAS,OAAO,MAAM,QAAQ;CAC1B,IAAI,EAAE,GAAI,UAAW;AACrB,KAAI,WAAW,QACX,MAAK;UACE,WAAW,SAClB,MAAK,QAAQ;AAEjB,QAAO;;AAEX,SAAS,OAAO,MAAM,QAAQ,gBAAgB;CAC1C,IAAI,EAAE,GAAI,WAAY;AACtB,KAAI,WAAW,MACX,MAAK;UACE,WAAW,SAClB,MAAK,SAAS;KAEd,MAAK,SAAS;AAElB,QAAO;;AAEV,SAAS,mBAAmB,SAAS,MAAM,WAAW,OAAO;CAC1D,MAAM,EAAE,WAAY,cAAe,iBAAkB;CACrD,MAAM,EAAE,QAAS,WAAY;CAC7B,MAAM,iBAAiB,YAAY;CACnC,MAAM,EAAE,SAAU,UAAW,YAAa,gBAAiB,cAAc,aAAa;CACtF,IAAI,IAAI,OAAO,MAAM,OAAO;CAC5B,MAAM,IAAI,OAAO,MAAM,QAAQ,eAAe;AAC9C,KAAI,WAAW,UACX;MAAI,WAAW,OACX,MAAK;WACE,WAAW,QAClB,MAAK;YAEF,WAAW,OAClB,MAAK,KAAK,IAAI,SAAS,WAAW,GAAG;UAC9B,WAAW,QAClB,MAAK,KAAK,IAAI,UAAU,YAAY,GAAG;AAE3C,QAAO;EACH,GAAG,YAAY,GAAG,GAAG,MAAM,QAAQ,KAAK,MAAM;EAC9C,GAAG,YAAY,GAAG,GAAG,MAAM,SAAS,KAAK,OAAO;EACnD;;AAEL,SAAS,YAAY,SAAS,OAAO,SAAS;CAC1C,MAAM,UAAU,UAAU,QAAQ,QAAQ;AAC1C,QAAO,UAAU,WAAW,QAAQ,IAAI,QAAQ,QAAQ,IAAI,UAAU,UAAU,QAAQ,IAAI,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,IAAI,QAAQ;;AAEnJ,SAAS,wBAAwB,YAAU;AACxC,QAAO,aAAa,EAAE,EAAE,cAAce,WAAS,CAAC;;AAEpD,SAAS,qBAAqB,QAAQ,SAAS,cAAc;AACzD,QAAO,cAAc,QAAQ;EACzB;EACA;EACA,MAAM;EACT,CAAC;;AAEN,SAAS,kBAAkB,WAAW,SAAS;CAC3C,MAAM,WAAW,WAAW,QAAQ,WAAW,QAAQ,QAAQ,WAAW,QAAQ,QAAQ,QAAQ;AAClG,QAAO,WAAW,UAAU,SAAS,SAAS,GAAG;;AAErD,IAAM,mBAAmB;CACrB,aAAa;CACb,MAAO,cAAc;AACjB,MAAI,aAAa,SAAS,GAAG;GACzB,MAAM,OAAO,aAAa;GAC1B,MAAM,SAAS,KAAK,MAAM,KAAK;GAC/B,MAAM,aAAa,SAAS,OAAO,SAAS;AAC5C,OAAI,QAAQ,KAAK,WAAW,KAAK,QAAQ,SAAS,UAC9C,QAAO,KAAK,QAAQ,SAAS;YACtB,KAAK,MACZ,QAAO,KAAK;YACL,aAAa,KAAK,KAAK,YAAY,WAC1C,QAAO,OAAO,KAAK;;AAG3B,SAAO;;CAEX,YAAY;CACZ,YAAY;CACZ,aAAa;CACb,MAAO,aAAa;AAChB,MAAI,QAAQ,KAAK,WAAW,KAAK,QAAQ,SAAS,UAC9C,QAAO,YAAY,QAAQ,OAAO,YAAY,kBAAkB,YAAY;EAEhF,IAAI,QAAQ,YAAY,QAAQ,SAAS;AACzC,MAAI,MACA,UAAS;EAEb,MAAM,QAAQ,YAAY;AAC1B,MAAI,CAAC,cAAc,MAAM,CACrB,UAAS;AAEb,SAAO;;CAEX,WAAY,aAAa;EAErB,MAAM,UADO,YAAY,MAAM,eAAe,YAAY,aAAa,CAClD,WAAW,SAAS,YAAY,UAAU;AAC/D,SAAO;GACH,aAAa,QAAQ;GACrB,iBAAiB,QAAQ;GACzB,aAAa,QAAQ;GACrB,YAAY,QAAQ;GACpB,kBAAkB,QAAQ;GAC1B,cAAc;GACjB;;CAEL,iBAAkB;AACd,SAAO,KAAK,QAAQ;;CAExB,gBAAiB,aAAa;EAE1B,MAAM,UADO,YAAY,MAAM,eAAe,YAAY,aAAa,CAClD,WAAW,SAAS,YAAY,UAAU;AAC/D,SAAO;GACH,YAAY,QAAQ;GACpB,UAAU,QAAQ;GACrB;;CAEL,YAAY;CACZ,WAAW;CACX,cAAc;CACd,QAAQ;CACR,aAAa;CAChB;AACA,SAAS,2BAA2B,WAAW,MAAM,KAAK,KAAK;CAC5D,MAAM,SAAS,UAAU,MAAM,KAAK,KAAK,IAAI;AAC7C,KAAI,OAAO,WAAW,YAClB,QAAO,iBAAiB,MAAM,KAAK,KAAK,IAAI;AAEhD,QAAO;;AAEX,IAAM,UAAN,cAAsB,QAAQ;CAC7B,OAAO,cAAc;CAClB,YAAY,QAAO;AACf,SAAO;AACP,OAAK,UAAU;AACf,OAAK,UAAU,EAAE;AACjB,OAAK,iBAAiB;AACtB,OAAK,QAAQ;AACb,OAAK,oBAAoB;AACzB,OAAK,gBAAgB,EAAE;AACvB,OAAK,cAAc;AACnB,OAAK,WAAW;AAChB,OAAK,QAAQ,OAAO;AACpB,OAAK,UAAU,OAAO;AACtB,OAAK,aAAa;AAClB,OAAK,QAAQ;AACb,OAAK,aAAa;AAClB,OAAK,OAAO;AACZ,OAAK,YAAY;AACjB,OAAK,SAAS;AACd,OAAK,SAAS;AACd,OAAK,SAAS;AACd,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,SAAS;AACd,OAAK,QAAQ;AACb,OAAK,SAAS;AACd,OAAK,SAAS;AACd,OAAK,cAAc;AACnB,OAAK,mBAAmB;AACxB,OAAK,kBAAkB;;CAE3B,WAAW,SAAS;AAChB,OAAK,UAAU;AACf,OAAK,oBAAoB;AACzB,OAAK,WAAW;;CAEvB,qBAAqB;EACd,MAAM,SAAS,KAAK;AACpB,MAAI,OACA,QAAO;EAEX,MAAM,QAAQ,KAAK;EACnB,MAAM,UAAU,KAAK,QAAQ,WAAW,KAAK,YAAY,CAAC;EAC1D,MAAM,OAAO,QAAQ,WAAW,MAAM,QAAQ,aAAa,QAAQ;EACnE,MAAM,aAAa,IAAI,WAAW,KAAK,OAAO,KAAK;AACnD,MAAI,KAAK,WACL,MAAK,oBAAoB,OAAO,OAAO,WAAW;AAEtD,SAAO;;CAEd,aAAa;AACN,SAAO,KAAK,aAAa,KAAK,WAAW,qBAAqB,KAAK,MAAM,YAAY,EAAE,MAAM,KAAK,cAAc;;CAEpH,SAAS,SAAS,SAAS;EACvB,MAAM,EAAE,cAAe;EACvB,MAAM,cAAc,2BAA2B,WAAW,eAAe,MAAM,QAAQ;EACvF,MAAM,QAAQ,2BAA2B,WAAW,SAAS,MAAM,QAAQ;EAC3E,MAAM,aAAa,2BAA2B,WAAW,cAAc,MAAM,QAAQ;EACrF,IAAI,QAAQ,EAAE;AACd,UAAQ,aAAa,OAAO,cAAc,YAAY,CAAC;AACvD,UAAQ,aAAa,OAAO,cAAc,MAAM,CAAC;AACjD,UAAQ,aAAa,OAAO,cAAc,WAAW,CAAC;AACtD,SAAO;;CAEX,cAAc,cAAc,SAAS;AACjC,SAAO,wBAAwB,2BAA2B,QAAQ,WAAW,cAAc,MAAM,aAAa,CAAC;;CAEnH,QAAQ,cAAc,SAAS;EAC3B,MAAM,EAAE,cAAe;EACvB,MAAM,YAAY,EAAE;AACpB,OAAK,eAAe,YAAU;GAC1B,MAAM,WAAW;IACb,QAAQ,EAAE;IACV,OAAO,EAAE;IACT,OAAO,EAAE;IACZ;GACD,MAAM,SAAS,kBAAkB,WAAW,QAAQ;AACpD,gBAAa,SAAS,QAAQ,cAAc,2BAA2B,QAAQ,eAAe,MAAM,QAAQ,CAAC,CAAC;AAC9G,gBAAa,SAAS,OAAO,2BAA2B,QAAQ,SAAS,MAAM,QAAQ,CAAC;AACxF,gBAAa,SAAS,OAAO,cAAc,2BAA2B,QAAQ,cAAc,MAAM,QAAQ,CAAC,CAAC;AAC5G,aAAU,KAAK,SAAS;IAC1B;AACF,SAAO;;CAEX,aAAa,cAAc,SAAS;AAChC,SAAO,wBAAwB,2BAA2B,QAAQ,WAAW,aAAa,MAAM,aAAa,CAAC;;CAElH,UAAU,cAAc,SAAS;EAC7B,MAAM,EAAE,cAAe;EACvB,MAAM,eAAe,2BAA2B,WAAW,gBAAgB,MAAM,aAAa;EAC9F,MAAM,SAAS,2BAA2B,WAAW,UAAU,MAAM,aAAa;EAClF,MAAM,cAAc,2BAA2B,WAAW,eAAe,MAAM,aAAa;EAC5F,IAAI,QAAQ,EAAE;AACd,UAAQ,aAAa,OAAO,cAAc,aAAa,CAAC;AACxD,UAAQ,aAAa,OAAO,cAAc,OAAO,CAAC;AAClD,UAAQ,aAAa,OAAO,cAAc,YAAY,CAAC;AACvD,SAAO;;CAEd,aAAa,SAAS;EACf,MAAM,SAAS,KAAK;EACpB,MAAM,OAAO,KAAK,MAAM;EACxB,MAAM,cAAc,EAAE;EACtB,MAAM,mBAAmB,EAAE;EAC3B,MAAM,kBAAkB,EAAE;EAC1B,IAAI,eAAe,EAAE;EACrB,IAAI,GAAG;AACP,OAAI,IAAI,GAAG,MAAM,OAAO,QAAQ,IAAI,KAAK,EAAE,EACvC,cAAa,KAAK,kBAAkB,KAAK,OAAO,OAAO,GAAG,CAAC;AAE/D,MAAI,QAAQ,OACR,gBAAe,aAAa,QAAQ,SAAS,SAAO,UAAQ,QAAQ,OAAO,SAASf,SAAO,OAAO,KAAK,CAAC;AAE5G,MAAI,QAAQ,SACR,gBAAe,aAAa,MAAM,GAAG,MAAI,QAAQ,SAAS,GAAG,GAAG,KAAK,CAAC;AAE1E,OAAK,eAAe,YAAU;GAC1B,MAAM,SAAS,kBAAkB,QAAQ,WAAW,QAAQ;AAC5D,eAAY,KAAK,2BAA2B,QAAQ,cAAc,MAAM,QAAQ,CAAC;AACjF,oBAAiB,KAAK,2BAA2B,QAAQ,mBAAmB,MAAM,QAAQ,CAAC;AAC3F,mBAAgB,KAAK,2BAA2B,QAAQ,kBAAkB,MAAM,QAAQ,CAAC;IAC3F;AACF,OAAK,cAAc;AACnB,OAAK,mBAAmB;AACxB,OAAK,kBAAkB;AACvB,OAAK,aAAa;AAClB,SAAO;;CAEX,OAAO,SAAS,QAAQ;EACpB,MAAM,UAAU,KAAK,QAAQ,WAAW,KAAK,YAAY,CAAC;EAC1D,MAAM,SAAS,KAAK;EACpB,IAAI;EACJ,IAAI,eAAe,EAAE;AACrB,MAAI,CAAC,OAAO,QACR;OAAI,KAAK,YAAY,EACjB,cAAa,EACT,SAAS,GACZ;SAEF;GACH,MAAM,WAAW,YAAY,QAAQ,UAAU,KAAK,MAAM,QAAQ,KAAK,eAAe;AACtF,kBAAe,KAAK,aAAa,QAAQ;AACzC,QAAK,QAAQ,KAAK,SAAS,cAAc,QAAQ;AACjD,QAAK,aAAa,KAAK,cAAc,cAAc,QAAQ;AAC3D,QAAK,OAAO,KAAK,QAAQ,cAAc,QAAQ;AAC/C,QAAK,YAAY,KAAK,aAAa,cAAc,QAAQ;AACzD,QAAK,SAAS,KAAK,UAAU,cAAc,QAAQ;GACnD,MAAM,OAAO,KAAK,QAAQ,eAAe,MAAM,QAAQ;GACvD,MAAM,kBAAkB,OAAO,OAAO,EAAE,EAAE,UAAU,KAAK;GACzD,MAAM,YAAY,mBAAmB,KAAK,OAAO,SAAS,gBAAgB;GAC1E,MAAM,kBAAkB,mBAAmB,SAAS,iBAAiB,WAAW,KAAK,MAAM;AAC3F,QAAK,SAAS,UAAU;AACxB,QAAK,SAAS,UAAU;AACxB,gBAAa;IACT,SAAS;IACT,GAAG,gBAAgB;IACnB,GAAG,gBAAgB;IACnB,OAAO,KAAK;IACZ,QAAQ,KAAK;IACb,QAAQ,SAAS;IACjB,QAAQ,SAAS;IACpB;;AAEL,OAAK,gBAAgB;AACrB,OAAK,WAAW;AAChB,MAAI,WACA,MAAK,oBAAoB,CAAC,OAAO,MAAM,WAAW;AAEtD,MAAI,WAAW,QAAQ,SACnB,SAAQ,SAAS,KAAK,MAAM;GACxB,OAAO,KAAK;GACZ,SAAS;GACT;GACH,CAAC;;CAGV,UAAU,cAAc,KAAK,MAAM,SAAS;EACxC,MAAM,gBAAgB,KAAK,iBAAiB,cAAc,MAAM,QAAQ;AACxE,MAAI,OAAO,cAAc,IAAI,cAAc,GAAG;AAC9C,MAAI,OAAO,cAAc,IAAI,cAAc,GAAG;AAC9C,MAAI,OAAO,cAAc,IAAI,cAAc,GAAG;;CAElD,iBAAiB,cAAc,MAAM,SAAS;EAC1C,MAAM,EAAE,QAAS,WAAY;EAC7B,MAAM,EAAE,WAAY,iBAAkB;EACtC,MAAM,EAAE,SAAU,UAAW,YAAa,gBAAiB,cAAc,aAAa;EACtF,MAAM,EAAE,GAAG,KAAM,GAAG,QAAS;EAC7B,MAAM,EAAE,OAAQ,WAAY;EAC5B,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,MAAI,WAAW,UAAU;AACrB,QAAK,MAAM,SAAS;AACpB,OAAI,WAAW,QAAQ;AACnB,SAAK;AACL,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;UACP;AACH,SAAK,MAAM;AACX,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;;AAEd,QAAK;SACF;AACH,OAAI,WAAW,OACX,MAAK,MAAM,KAAK,IAAI,SAAS,WAAW,GAAG;YACpC,WAAW,QAClB,MAAK,MAAM,QAAQ,KAAK,IAAI,UAAU,YAAY,GAAG;OAErD,MAAK,KAAK;AAEd,OAAI,WAAW,OAAO;AAClB,SAAK;AACL,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;UACP;AACH,SAAK,MAAM;AACX,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;;AAEd,QAAK;;AAET,SAAO;GACH;GACA;GACA;GACA;GACA;GACA;GACH;;CAEL,UAAU,IAAI,KAAK,SAAS;EACxB,MAAM,QAAQ,KAAK;EACnB,MAAM,SAAS,MAAM;EACrB,IAAI,WAAW,cAAc;AAC7B,MAAI,QAAQ;GACR,MAAM,YAAY,cAAc,QAAQ,KAAK,KAAK,GAAG,KAAK,MAAM;AAChE,MAAG,IAAI,YAAY,MAAM,QAAQ,YAAY,QAAQ;AACrD,OAAI,YAAY,UAAU,UAAU,QAAQ,WAAW;AACvD,OAAI,eAAe;AACnB,eAAY,OAAO,QAAQ,UAAU;AACrC,kBAAe,QAAQ;AACvB,OAAI,YAAY,QAAQ;AACxB,OAAI,OAAO,UAAU;AACrB,QAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAE;AACvB,QAAI,SAAS,MAAM,IAAI,UAAU,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,UAAU,aAAa,EAAE;AAC1E,OAAG,KAAK,UAAU,aAAa;AAC/B,QAAI,IAAI,MAAM,OACV,IAAG,KAAK,QAAQ,oBAAoB;;;;CAKvD,cAAc,KAAK,IAAI,GAAG,WAAW,SAAS;EACvC,MAAM,aAAa,KAAK,YAAY;EACpC,MAAM,kBAAkB,KAAK,iBAAiB;EAC9C,MAAM,EAAE,WAAY,aAAc;EAClC,MAAM,WAAW,OAAO,QAAQ,SAAS;EACzC,MAAM,SAAS,YAAY,MAAM,QAAQ,QAAQ;EACjD,MAAM,YAAY,UAAU,EAAE,OAAO;EACrC,MAAM,UAAU,YAAY,SAAS,cAAc,SAAS,aAAa,aAAa,IAAI;EAC1F,MAAM,SAAS,GAAG,IAAI;AACtB,MAAI,QAAQ,eAAe;GACvB,MAAM,cAAc;IAChB,QAAQ,KAAK,IAAI,UAAU,UAAU,GAAG;IACxC,YAAY,gBAAgB;IAC5B,UAAU,gBAAgB;IAC1B,aAAa;IAChB;GACD,MAAM,UAAU,UAAU,WAAW,WAAW,SAAS,GAAG,WAAW;GACvE,MAAM,UAAU,SAAS,YAAY;AACrC,OAAI,cAAc,QAAQ;AAC1B,OAAI,YAAY,QAAQ;AACxB,aAAU,KAAK,aAAa,SAAS,QAAQ;AAC7C,OAAI,cAAc,WAAW;AAC7B,OAAI,YAAY,WAAW;AAC3B,aAAU,KAAK,aAAa,SAAS,QAAQ;SAC1C;AACH,OAAI,YAAY,SAAS,WAAW,YAAY,GAAG,KAAK,IAAI,GAAG,OAAO,OAAO,WAAW,YAAY,CAAC,GAAG,WAAW,eAAe;AAClI,OAAI,cAAc,WAAW;AAC7B,OAAI,YAAY,WAAW,cAAc,EAAE,CAAC;AAC5C,OAAI,iBAAiB,WAAW,oBAAoB;GACpD,MAAM,SAAS,UAAU,WAAW,WAAW,SAAS;GACxD,MAAM,SAAS,UAAU,WAAW,UAAU,MAAM,WAAW,EAAE,EAAE,WAAW,EAAE;GAChF,MAAM,eAAe,cAAc,WAAW,aAAa;AAC3D,OAAI,OAAO,OAAO,aAAa,CAAC,MAAM,MAAI,MAAM,EAAE,EAAE;AAChD,QAAI,WAAW;AACf,QAAI,YAAY,QAAQ;AACxB,uBAAmB,KAAK;KACpB,GAAG;KACH,GAAG;KACH,GAAG;KACH,GAAG;KACH,QAAQ;KACX,CAAC;AACF,QAAI,MAAM;AACV,QAAI,QAAQ;AACZ,QAAI,YAAY,WAAW;AAC3B,QAAI,WAAW;AACf,uBAAmB,KAAK;KACpB,GAAG;KACH,GAAG,SAAS;KACZ,GAAG,WAAW;KACd,GAAG,YAAY;KACf,QAAQ;KACX,CAAC;AACF,QAAI,MAAM;UACP;AACH,QAAI,YAAY,QAAQ;AACxB,QAAI,SAAS,QAAQ,QAAQ,UAAU,UAAU;AACjD,QAAI,WAAW,QAAQ,QAAQ,UAAU,UAAU;AACnD,QAAI,YAAY,WAAW;AAC3B,QAAI,SAAS,QAAQ,SAAS,GAAG,WAAW,GAAG,YAAY,EAAE;;;AAGrE,MAAI,YAAY,KAAK,gBAAgB;;CAEzC,SAAS,IAAI,KAAK,SAAS;EACvB,MAAM,EAAE,SAAU;EAClB,MAAM,EAAE,aAAc,WAAY,eAAgB,WAAY,UAAW,eAAgB;EACzF,MAAM,WAAW,OAAO,QAAQ,SAAS;EACzC,IAAI,iBAAiB,SAAS;EAC9B,IAAI,eAAe;EACnB,MAAM,YAAY,cAAc,QAAQ,KAAK,KAAK,GAAG,KAAK,MAAM;EAChE,MAAM,iBAAiB,SAAS,MAAM;AAClC,OAAI,SAAS,MAAM,UAAU,EAAE,GAAG,IAAI,aAAa,EAAE,GAAG,IAAI,iBAAiB,EAAE;AAC/E,MAAG,KAAK,iBAAiB;;EAE7B,MAAM,0BAA0B,UAAU,UAAU,UAAU;EAC9D,IAAI,UAAU,WAAW,OAAO,GAAG,GAAG,MAAM;AAC5C,MAAI,YAAY;AAChB,MAAI,eAAe;AACnB,MAAI,OAAO,SAAS;AACpB,KAAG,IAAI,YAAY,MAAM,yBAAyB,QAAQ;AAC1D,MAAI,YAAY,QAAQ;AACxB,OAAK,KAAK,YAAY,eAAe;AACrC,iBAAe,iBAAiB,4BAA4B,UAAU,cAAc,WAAW,WAAW,IAAI,aAAa,WAAW,IAAI,aAAa;AACvJ,OAAI,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,EAAE,GAAE;AACzC,cAAW,KAAK;AAChB,eAAY,KAAK,gBAAgB;AACjC,OAAI,YAAY;AAChB,QAAK,SAAS,QAAQ,eAAe;AACrC,WAAQ,SAAS;AACjB,OAAI,iBAAiB,MAAM,QAAQ;AAC/B,SAAK,cAAc,KAAK,IAAI,GAAG,WAAW,QAAQ;AAClD,qBAAiB,KAAK,IAAI,SAAS,YAAY,UAAU;;AAE7D,QAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC1C,mBAAe,MAAM,GAAG;AACxB,qBAAiB,SAAS;;AAE9B,QAAK,SAAS,OAAO,eAAe;;AAExC,iBAAe;AACf,mBAAiB,SAAS;AAC1B,OAAK,KAAK,WAAW,eAAe;AACpC,KAAG,KAAK;;CAEZ,WAAW,IAAI,KAAK,SAAS;EACzB,MAAM,SAAS,KAAK;EACpB,MAAM,SAAS,OAAO;EACtB,IAAI,YAAY;AAChB,MAAI,QAAQ;GACR,MAAM,YAAY,cAAc,QAAQ,KAAK,KAAK,GAAG,KAAK,MAAM;AAChE,MAAG,IAAI,YAAY,MAAM,QAAQ,aAAa,QAAQ;AACtD,MAAG,KAAK,QAAQ;AAChB,OAAI,YAAY,UAAU,UAAU,QAAQ,YAAY;AACxD,OAAI,eAAe;AACnB,gBAAa,OAAO,QAAQ,WAAW;AACvC,OAAI,YAAY,QAAQ;AACxB,OAAI,OAAO,WAAW;AACtB,QAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAE;AACvB,QAAI,SAAS,OAAO,IAAI,UAAU,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,WAAW,aAAa,EAAE;AAC5E,OAAG,KAAK,WAAW,aAAa,QAAQ;;;;CAIpD,eAAe,IAAI,KAAK,aAAa,SAAS;EAC1C,MAAM,EAAE,QAAS,WAAY;EAC7B,MAAM,EAAE,GAAI,MAAO;EACnB,MAAM,EAAE,OAAQ,WAAY;EAC5B,MAAM,EAAE,SAAU,UAAW,YAAa,gBAAiB,cAAc,QAAQ,aAAa;AAC9F,MAAI,YAAY,QAAQ;AACxB,MAAI,cAAc,QAAQ;AAC1B,MAAI,YAAY,QAAQ;AACxB,MAAI,WAAW;AACf,MAAI,OAAO,IAAI,SAAS,EAAE;AAC1B,MAAI,WAAW,MACX,MAAK,UAAU,IAAI,KAAK,aAAa,QAAQ;AAEjD,MAAI,OAAO,IAAI,QAAQ,UAAU,EAAE;AACnC,MAAI,iBAAiB,IAAI,OAAO,GAAG,IAAI,OAAO,IAAI,SAAS;AAC3D,MAAI,WAAW,YAAY,WAAW,QAClC,MAAK,UAAU,IAAI,KAAK,aAAa,QAAQ;AAEjD,MAAI,OAAO,IAAI,OAAO,IAAI,SAAS,YAAY;AAC/C,MAAI,iBAAiB,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,aAAa,IAAI,OAAO;AAChF,MAAI,WAAW,SACX,MAAK,UAAU,IAAI,KAAK,aAAa,QAAQ;AAEjD,MAAI,OAAO,IAAI,YAAY,IAAI,OAAO;AACtC,MAAI,iBAAiB,GAAG,IAAI,QAAQ,GAAG,IAAI,SAAS,WAAW;AAC/D,MAAI,WAAW,YAAY,WAAW,OAClC,MAAK,UAAU,IAAI,KAAK,aAAa,QAAQ;AAEjD,MAAI,OAAO,GAAG,IAAI,QAAQ;AAC1B,MAAI,iBAAiB,GAAG,GAAG,IAAI,SAAS,EAAE;AAC1C,MAAI,WAAW;AACf,MAAI,MAAM;AACV,MAAI,QAAQ,cAAc,EACtB,KAAI,QAAQ;;CAGvB,uBAAuB,SAAS;EACzB,MAAM,QAAQ,KAAK;EACnB,MAAM,QAAQ,KAAK;EACnB,MAAM,QAAQ,SAAS,MAAM;EAC7B,MAAM,QAAQ,SAAS,MAAM;AAC7B,MAAI,SAAS,OAAO;GAChB,MAAM,WAAW,YAAY,QAAQ,UAAU,KAAK,MAAM,KAAK,SAAS,KAAK,eAAe;AAC5F,OAAI,CAAC,SACD;GAEJ,MAAM,OAAO,KAAK,QAAQ,eAAe,MAAM,QAAQ;GACvD,MAAM,kBAAkB,OAAO,OAAO,EAAE,EAAE,UAAU,KAAK,MAAM;GAC/D,MAAM,YAAY,mBAAmB,OAAO,SAAS,gBAAgB;GACrE,MAAM,QAAQ,mBAAmB,SAAS,iBAAiB,WAAW,MAAM;AAC5E,OAAI,MAAM,QAAQ,MAAM,KAAK,MAAM,QAAQ,MAAM,GAAG;AAChD,SAAK,SAAS,UAAU;AACxB,SAAK,SAAS,UAAU;AACxB,SAAK,QAAQ,KAAK;AAClB,SAAK,SAAS,KAAK;AACnB,SAAK,SAAS,SAAS;AACvB,SAAK,SAAS,SAAS;AACvB,SAAK,oBAAoB,CAAC,OAAO,MAAM,MAAM;;;;CAI5D,cAAc;AACP,SAAO,CAAC,CAAC,KAAK;;CAElB,KAAK,KAAK;EACN,MAAM,UAAU,KAAK,QAAQ,WAAW,KAAK,YAAY,CAAC;EAC1D,IAAI,UAAU,KAAK;AACnB,MAAI,CAAC,QACD;AAEJ,OAAK,uBAAuB,QAAQ;EACpC,MAAM,cAAc;GAChB,OAAO,KAAK;GACZ,QAAQ,KAAK;GAChB;EACD,MAAM,KAAK;GACP,GAAG,KAAK;GACR,GAAG,KAAK;GACX;AACD,YAAU,KAAK,IAAI,QAAQ,GAAG,OAAO,IAAI;EACzC,MAAM,UAAU,UAAU,QAAQ,QAAQ;EAC1C,MAAM,oBAAoB,KAAK,MAAM,UAAU,KAAK,WAAW,UAAU,KAAK,KAAK,UAAU,KAAK,UAAU,UAAU,KAAK,OAAO;AAClI,MAAI,QAAQ,WAAW,mBAAmB;AACtC,OAAI,MAAM;AACV,OAAI,cAAc;AAClB,QAAK,eAAe,IAAI,KAAK,aAAa,QAAQ;AAClD,yBAAsB,KAAK,QAAQ,cAAc;AACjD,MAAG,KAAK,QAAQ;AAChB,QAAK,UAAU,IAAI,KAAK,QAAQ;AAChC,QAAK,SAAS,IAAI,KAAK,QAAQ;AAC/B,QAAK,WAAW,IAAI,KAAK,QAAQ;AACjC,wBAAqB,KAAK,QAAQ,cAAc;AAChD,OAAI,SAAS;;;CAGxB,oBAAoB;AACb,SAAO,KAAK,WAAW,EAAE;;CAEhC,kBAAkB,gBAAgB,eAAe;EAC1C,MAAM,aAAa,KAAK;EACxB,MAAM,SAAS,eAAe,KAAK,EAAE,cAAe,qBAAW;GAC3D,MAAM,OAAO,KAAK,MAAM,eAAe,aAAa;AACpD,OAAI,CAAC,KACD,OAAM,IAAI,MAAM,oCAAoC,aAAa;AAErE,UAAO;IACH;IACA,SAAS,KAAK,KAAKA;IACnB;IACH;IACH;EACF,MAAM,UAAU,CAAC,eAAe,YAAY,OAAO;EACnD,MAAM,kBAAkB,KAAK,iBAAiB,QAAQ,cAAc;AACpE,MAAI,WAAW,iBAAiB;AAC5B,QAAK,UAAU;AACf,QAAK,iBAAiB;AACtB,QAAK,sBAAsB;AAC3B,QAAK,OAAO,KAAK;;;CAG5B,YAAY,GAAG,QAAQ,cAAc,MAAM;AACpC,MAAI,UAAU,KAAK,oBACf,QAAO;AAEX,OAAK,sBAAsB;EAC3B,MAAM,UAAU,KAAK;EACrB,MAAM,aAAa,KAAK,WAAW,EAAE;EACrC,MAAM,SAAS,KAAK,mBAAmB,GAAG,YAAY,QAAQ,YAAY;EAC1E,MAAM,kBAAkB,KAAK,iBAAiB,QAAQ,EAAE;EACxD,MAAM,UAAU,UAAU,CAAC,eAAe,QAAQ,WAAW,IAAI;AACjE,MAAI,SAAS;AACT,QAAK,UAAU;AACf,OAAI,QAAQ,WAAW,QAAQ,UAAU;AACrC,SAAK,iBAAiB;KAClB,GAAG,EAAE;KACL,GAAG,EAAE;KACR;AACD,SAAK,OAAO,MAAM,OAAO;;;AAGjC,SAAO;;CAEd,mBAAmB,GAAG,YAAY,QAAQ,aAAa;EAChD,MAAM,UAAU,KAAK;AACrB,MAAI,EAAE,SAAS,WACX,QAAO,EAAE;AAEb,MAAI,CAAC,YACD,QAAO,WAAW,QAAQ,MAAI,KAAK,MAAM,KAAK,SAAS,EAAE,iBAAiB,KAAK,MAAM,eAAe,EAAE,aAAa,CAAC,WAAW,UAAU,EAAE,MAAM,KAAK,OAAU;EAEpK,MAAM,SAAS,KAAK,MAAM,0BAA0B,GAAG,QAAQ,MAAM,SAAS,OAAO;AACrF,MAAI,QAAQ,QACR,QAAO,SAAS;AAEpB,SAAO;;CAEd,iBAAiB,QAAQ,GAAG;EACrB,MAAM,EAAE,QAAS,QAAS,YAAa;EACvC,MAAM,WAAW,YAAY,QAAQ,UAAU,KAAK,MAAM,QAAQ,EAAE;AACpE,SAAO,aAAa,UAAU,WAAW,SAAS,KAAK,WAAW,SAAS;;;AAGnF,IAAI,iBAAiB;CACjB,IAAI;CACJ,UAAU;CACV;CACA,UAAW,OAAO,OAAO,SAAS;AAC9B,MAAI,QACA,OAAM,UAAU,IAAI,QAAQ;GACxB;GACA;GACH,CAAC;;CAGV,aAAc,OAAO,OAAO,SAAS;AACjC,MAAI,MAAM,QACN,OAAM,QAAQ,WAAW,QAAQ;;CAGzC,MAAO,OAAO,OAAO,SAAS;AAC1B,MAAI,MAAM,QACN,OAAM,QAAQ,WAAW,QAAQ;;CAGzC,UAAW,OAAO;EACd,MAAM,UAAU,MAAM;AACtB,MAAI,WAAW,QAAQ,aAAa,EAAE;GAClC,MAAM,OAAO,EACT,SACH;AACD,OAAI,MAAM,cAAc,qBAAqB;IACzC,GAAG;IACH,YAAY;IACf,CAAC,KAAK,MACH;AAEJ,WAAQ,KAAK,MAAM,IAAI;AACvB,SAAM,cAAc,oBAAoB,KAAK;;;CAGrD,WAAY,OAAO,MAAM;AACrB,MAAI,MAAM,SAAS;GACf,MAAM,mBAAmB,KAAK;AAC9B,OAAI,MAAM,QAAQ,YAAY,KAAK,OAAO,kBAAkB,KAAK,YAAY,CACzE,MAAK,UAAU;;;CAI3B,UAAU;EACN,SAAS;EACT,UAAU;EACV,UAAU;EACV,iBAAiB;EACjB,YAAY;EACZ,WAAW,EACP,QAAQ,QACX;EACD,cAAc;EACd,mBAAmB;EACnB,YAAY;EACZ,WAAW;EACX,aAAa;EACb,UAAU,EAAE;EACZ,WAAW;EACX,aAAa;EACb,eAAe;EACf,iBAAiB;EACjB,YAAY,EACR,QAAQ,QACX;EACD,aAAa;EACb,SAAS;EACT,cAAc;EACd,WAAW;EACX,cAAc;EACd,YAAY,KAAK,SAAO,KAAK,SAAS;EACtC,WAAW,KAAK,SAAO,KAAK,SAAS;EACrC,oBAAoB;EACpB,eAAe;EACf,YAAY;EACZ,aAAa;EACb,aAAa;EACb,WAAW;GACP,UAAU;GACV,QAAQ;GACX;EACD,YAAY;GACR,SAAS;IACL,MAAM;IACN,YAAY;KACR;KACA;KACA;KACA;KACA;KACA;KACH;IACJ;GACD,SAAS;IACL,QAAQ;IACR,UAAU;IACb;GACJ;EACD,WAAW;EACd;CACD,eAAe;EACX,UAAU;EACV,YAAY;EACZ,WAAW;EACd;CACD,aAAa;EACT,cAAc,SAAO,SAAS,YAAY,SAAS,cAAc,SAAS;EAC1E,YAAY;EACZ,WAAW;GACP,aAAa;GACb,YAAY;GACf;EACD,WAAW,EACP,WAAW,OACd;EACD,YAAY,EACR,WAAW,aACd;EACJ;CACD,wBAAwB,CACpB,cACH;CACJ;AAED,IAAI,UAAuB,uBAAO,OAAO;CACzC,WAAW;CACX,QAAQ;CACR,YAAY;CACZ,QAAQ;CACR,QAAQ;CACR,UAAU;CACV,OAAO;CACP,SAAS;CACR,CAAC;AAEF,IAAM,eAAe,QAAQ,KAAK,SAAO,gBAAc;AACnD,KAAI,OAAO,QAAQ,UAAU;AACzB,YAAQ,OAAO,KAAK,IAAI,GAAG;AAC3B,cAAY,QAAQ;GAChB;GACA,OAAO;GACV,CAAC;YACK,MAAM,IAAI,CACjB,WAAQ;AAEZ,QAAOA;;AAEX,SAAS,eAAe,QAAQ,KAAK,SAAO,aAAa;CACrD,MAAM,QAAQ,OAAO,QAAQ,IAAI;AACjC,KAAI,UAAU,GACV,QAAO,YAAY,QAAQ,KAAKA,SAAO,YAAY;CAEvD,MAAM,OAAO,OAAO,YAAY,IAAI;AACpC,QAAO,UAAU,OAAOA,UAAQ;;AAEpC,IAAM,cAAc,SAAO,QAAMA,YAAU,OAAO,OAAO,YAAY,KAAK,MAAMA,QAAM,EAAE,GAAG,IAAI;AAC/F,SAAS,kBAAkB,OAAO;CAC9B,MAAM,SAAS,KAAK,WAAW;AAC/B,KAAI,SAAS,KAAK,QAAQ,OAAO,OAC7B,QAAO,OAAO;AAElB,QAAO;;AAEX,IAAM,gBAAN,cAA4B,MAAM;CAC9B,OAAO,KAAK;CACf,OAAO,WAAW,EACX,OAAO,EACH,UAAU,mBACb,EACJ;CACD,YAAY,KAAI;AACZ,QAAM,IAAI;AACT,OAAK,cAAc;AACpB,OAAK,cAAc;AACnB,OAAK,eAAe,EAAE;;CAE1B,KAAK,cAAc;EACf,MAAM,QAAQ,KAAK;AACnB,MAAI,MAAM,QAAQ;GACd,MAAM,SAAS,KAAK,WAAW;AAC/B,QAAK,MAAM,EAAE,gBAAQ,WAAY,MAC7B,KAAI,OAAOA,aAAW,MAClB,QAAO,OAAOA,SAAO,EAAE;AAG/B,QAAK,eAAe,EAAE;;AAE1B,QAAM,KAAK,aAAa;;CAE5B,MAAM,KAAK,SAAO;AACd,MAAI,cAAc,IAAI,CAClB,QAAO;EAEX,MAAM,SAAS,KAAK,WAAW;AAC/B,YAAQ,SAASA,QAAM,IAAI,OAAOA,aAAW,MAAMA,UAAQ,eAAe,QAAQ,KAAK,eAAeA,SAAO,IAAI,EAAE,KAAK,aAAa;AACrI,SAAO,WAAWA,SAAO,OAAO,SAAS,EAAE;;CAE/C,sBAAsB;EAClB,MAAM,EAAE,YAAa,eAAgB,KAAK,eAAe;EACzD,IAAI,EAAE,KAAM,QAAS,KAAK,UAAU,KAAK;AACzC,MAAI,KAAK,QAAQ,WAAW,SAAS;AACjC,OAAI,CAAC,WACD,OAAM;AAEV,OAAI,CAAC,WACD,OAAM,KAAK,WAAW,CAAC,SAAS;;AAGxC,OAAK,MAAM;AACX,OAAK,MAAM;;CAEf,aAAa;EACT,MAAM,MAAM,KAAK;EACjB,MAAM,MAAM,KAAK;EACjB,MAAM,SAAS,KAAK,QAAQ;EAC5B,MAAM,QAAQ,EAAE;EAChB,IAAI,SAAS,KAAK,WAAW;AAC7B,WAAS,QAAQ,KAAK,QAAQ,OAAO,SAAS,IAAI,SAAS,OAAO,MAAM,KAAK,MAAM,EAAE;AACrF,OAAK,cAAc,KAAK,IAAI,OAAO,UAAU,SAAS,IAAI,IAAI,EAAE;AAChE,OAAK,cAAc,KAAK,OAAO,SAAS,KAAM;AAC9C,OAAI,IAAI,QAAQ,KAAK,SAAS,KAAK,QAC/B,OAAM,KAAK,EACP,OACH,CAAC;AAEN,SAAO;;CAEX,iBAAiB,OAAO;AACpB,SAAO,kBAAkB,KAAK,MAAM,MAAM;;CAEjD,YAAY;AACL,QAAM,WAAW;AACjB,MAAI,CAAC,KAAK,cAAc,CACpB,MAAK,iBAAiB,CAAC,KAAK;;CAGpC,iBAAiB,OAAO;AACpB,MAAI,OAAO,UAAU,SACjB,SAAQ,KAAK,MAAM,MAAM;AAE7B,SAAO,UAAU,OAAO,MAAM,KAAK,oBAAoB,QAAQ,KAAK,eAAe,KAAK,YAAY;;CAExG,gBAAgB,SAAO;EACnB,MAAM,QAAQ,KAAK;AACnB,MAAIA,UAAQ,KAAKA,UAAQ,MAAM,SAAS,EACpC,QAAO;AAEX,SAAO,KAAK,iBAAiB,MAAMA,SAAO,MAAM;;CAEpD,iBAAiB,OAAO;AACpB,SAAO,KAAK,MAAM,KAAK,cAAc,KAAK,mBAAmB,MAAM,GAAG,KAAK,YAAY;;CAE3F,eAAe;AACX,SAAO,KAAK;;;AAIpB,SAAS,gBAAgB,mBAAmB,WAAW;CACnD,MAAM,QAAQ,EAAE;CAChB,MAAM,cAAc;CACpB,MAAM,EAAE,QAAS,MAAO,KAAM,KAAM,WAAY,OAAQ,UAAW,WAAY,kBAAmB;CAClG,MAAM,OAAO,QAAQ;CACrB,MAAM,YAAY,WAAW;CAC7B,MAAM,EAAE,KAAK,MAAO,KAAK,SAAU;CACnC,MAAM,aAAa,CAAC,cAAc,IAAI;CACtC,MAAM,aAAa,CAAC,cAAc,IAAI;CACtC,MAAM,eAAe,CAAC,cAAc,MAAM;CAC1C,MAAM,cAAc,OAAO,SAAS,YAAY;CAChD,IAAI,UAAU,SAAS,OAAO,QAAQ,YAAY,KAAK,GAAG;CAC1D,IAAI,QAAQ,SAAS,SAAS;AAC9B,KAAI,UAAU,eAAe,CAAC,cAAc,CAAC,WACzC,QAAO,CACH,EACI,OAAO,MACV,EACD,EACI,OAAO,MACV,CACJ;AAEL,aAAY,KAAK,KAAK,OAAO,QAAQ,GAAG,KAAK,MAAM,OAAO,QAAQ;AAClE,KAAI,YAAY,UACZ,WAAU,QAAQ,YAAY,UAAU,YAAY,KAAK,GAAG;AAEhE,KAAI,CAAC,cAAc,UAAU,EAAE;AAC3B,WAAS,KAAK,IAAI,IAAI,UAAU;AAChC,YAAU,KAAK,KAAK,UAAU,OAAO,GAAG;;AAE5C,KAAI,WAAW,SAAS;AACpB,YAAU,KAAK,MAAM,OAAO,QAAQ,GAAG;AACvC,YAAU,KAAK,KAAK,OAAO,QAAQ,GAAG;QACnC;AACH,YAAU;AACV,YAAU;;AAEd,KAAI,cAAc,cAAc,QAAQ,aAAa,MAAM,OAAO,MAAM,UAAU,IAAK,EAAE;AACrF,cAAY,KAAK,MAAM,KAAK,KAAK,MAAM,OAAO,SAAS,SAAS,CAAC;AACjE,aAAW,MAAM,OAAO;AACxB,YAAU;AACV,YAAU;YACH,cAAc;AACrB,YAAU,aAAa,MAAM;AAC7B,YAAU,aAAa,MAAM;AAC7B,cAAY,QAAQ;AACpB,aAAW,UAAU,WAAW;QAC7B;AACH,eAAa,UAAU,WAAW;AAClC,MAAI,aAAa,WAAW,KAAK,MAAM,UAAU,EAAE,UAAU,IAAK,CAC9D,aAAY,KAAK,MAAM,UAAU;MAEjC,aAAY,KAAK,KAAK,UAAU;;CAGxC,MAAM,gBAAgB,KAAK,IAAI,eAAe,QAAQ,EAAE,eAAe,QAAQ,CAAC;AAChF,UAAS,KAAK,IAAI,IAAI,cAAc,UAAU,GAAG,gBAAgB,UAAU;AAC3E,WAAU,KAAK,MAAM,UAAU,OAAO,GAAG;AACzC,WAAU,KAAK,MAAM,UAAU,OAAO,GAAG;CACzC,IAAI,IAAI;AACR,KAAI,YACA;MAAI,iBAAiB,YAAY,KAAK;AAClC,SAAM,KAAK,EACP,OAAO,KACV,CAAC;AACF,OAAI,UAAU,IACV;AAEJ,OAAI,aAAa,KAAK,OAAO,UAAU,IAAI,WAAW,OAAO,GAAG,QAAQ,KAAK,kBAAkB,KAAK,YAAY,kBAAkB,CAAC,CAC/H;aAEG,UAAU,IACjB;;AAGR,QAAM,IAAI,WAAW,EAAE,GAAE;EACrB,MAAM,YAAY,KAAK,OAAO,UAAU,IAAI,WAAW,OAAO,GAAG;AACjE,MAAI,cAAc,YAAY,IAC1B;AAEJ,QAAM,KAAK,EACP,OAAO,WACV,CAAC;;AAEN,KAAI,cAAc,iBAAiB,YAAY,IAC3C,KAAI,MAAM,UAAU,aAAa,MAAM,MAAM,SAAS,GAAG,OAAO,KAAK,kBAAkB,KAAK,YAAY,kBAAkB,CAAC,CACvH,OAAM,MAAM,SAAS,GAAG,QAAQ;KAEhC,OAAM,KAAK,EACP,OAAO,KACV,CAAC;UAEC,CAAC,cAAc,YAAY,IAClC,OAAM,KAAK,EACP,OAAO,SACV,CAAC;AAEN,QAAO;;AAEX,SAAS,kBAAkB,OAAO,YAAY,EAAE,YAAa,eAAgB;CACzE,MAAM,MAAM,UAAU,YAAY;CAClC,MAAM,SAAS,aAAa,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK;CAC9D,MAAM,SAAS,MAAO,cAAc,KAAK,OAAO;AAChD,QAAO,KAAK,IAAI,aAAa,OAAO,OAAO;;AAE/C,IAAM,kBAAN,cAA8B,MAAM;CAChC,YAAY,KAAI;AACZ,QAAM,IAAI;AACT,OAAK,QAAQ;AACb,OAAK,MAAM;AACX,OAAK,cAAc;AACnB,OAAK,YAAY;AAClB,OAAK,cAAc;;CAEvB,MAAM,KAAK,SAAO;AACd,MAAI,cAAc,IAAI,CAClB,QAAO;AAEX,OAAK,OAAO,QAAQ,YAAY,eAAe,WAAW,CAAC,SAAS,CAAC,IAAI,CACrE,QAAO;AAEX,SAAO,CAAC;;CAEZ,yBAAyB;EACrB,MAAM,EAAE,gBAAiB,KAAK;EAC9B,MAAM,EAAE,YAAa,eAAgB,KAAK,eAAe;EACzD,IAAI,EAAE,KAAM,QAAS;EACrB,MAAM,UAAU,MAAI,MAAM,aAAa,MAAM;EAC7C,MAAM,UAAU,MAAI,MAAM,aAAa,MAAM;AAC7C,MAAI,aAAa;GACb,MAAM,UAAU,KAAK,IAAI;GACzB,MAAM,UAAU,KAAK,IAAI;AACzB,OAAI,UAAU,KAAK,UAAU,EACzB,QAAO,EAAE;YACF,UAAU,KAAK,UAAU,EAChC,QAAO,EAAE;;AAGjB,MAAI,QAAQ,KAAK;GACb,IAAI,SAAS,QAAQ,IAAI,IAAI,KAAK,IAAI,MAAM,IAAK;AACjD,UAAO,MAAM,OAAO;AACpB,OAAI,CAAC,YACD,QAAO,MAAM,OAAO;;AAG5B,OAAK,MAAM;AACX,OAAK,MAAM;;CAEf,eAAe;EAEX,IAAI,EAAE,eAAgB,aADL,KAAK,QAAQ;EAE9B,IAAI;AACJ,MAAI,UAAU;AACV,cAAW,KAAK,KAAK,KAAK,MAAM,SAAS,GAAG,KAAK,MAAM,KAAK,MAAM,SAAS,GAAG;AAC9E,OAAI,WAAW,KAAM;AACjB,YAAQ,KAAK,UAAU,KAAK,GAAG,mBAAmB,SAAS,iCAAiC,SAAS,2BAA2B;AAChI,eAAW;;SAEZ;AACH,cAAW,KAAK,kBAAkB;AAClC,mBAAgB,iBAAiB;;AAErC,MAAI,cACA,YAAW,KAAK,IAAI,eAAe,SAAS;AAEhD,SAAO;;CAEd,mBAAmB;AACZ,SAAO,OAAO;;CAElB,aAAa;EACT,MAAM,OAAO,KAAK;EAClB,MAAM,WAAW,KAAK;EACtB,IAAI,WAAW,KAAK,cAAc;AAClC,aAAW,KAAK,IAAI,GAAG,SAAS;EAChC,MAAM,0BAA0B;GAC5B;GACA,QAAQ,KAAK;GACb,KAAK,KAAK;GACV,KAAK,KAAK;GACV,WAAW,SAAS;GACpB,MAAM,SAAS;GACf,OAAO,SAAS;GAChB,WAAW,KAAK,YAAY;GAC5B,YAAY,KAAK,cAAc;GAC/B,aAAa,SAAS,eAAe;GACrC,eAAe,SAAS,kBAAkB;GAC7C;EACD,MAAM,YAAY,KAAK,UAAU;EACjC,MAAM,QAAQ,gBAAgB,yBAAyB,UAAU;AACjE,MAAI,KAAK,WAAW,QAChB,oBAAmB,OAAO,MAAM,QAAQ;AAE5C,MAAI,KAAK,SAAS;AACd,SAAM,SAAS;AACf,QAAK,QAAQ,KAAK;AAClB,QAAK,MAAM,KAAK;SACb;AACH,QAAK,QAAQ,KAAK;AAClB,QAAK,MAAM,KAAK;;AAEpB,SAAO;;CAEd,YAAY;EACL,MAAM,QAAQ,KAAK;EACnB,IAAI,QAAQ,KAAK;EACjB,IAAI,MAAM,KAAK;AACf,QAAM,WAAW;AACjB,MAAI,KAAK,QAAQ,UAAU,MAAM,QAAQ;GACrC,MAAM,UAAU,MAAM,SAAS,KAAK,IAAI,MAAM,SAAS,GAAG,EAAE,GAAG;AAC/D,YAAS;AACT,UAAO;;AAEX,OAAK,cAAc;AACnB,OAAK,YAAY;AACjB,OAAK,cAAc,MAAM;;CAE7B,iBAAiB,OAAO;AACpB,SAAO,aAAa,OAAO,KAAK,MAAM,QAAQ,QAAQ,KAAK,QAAQ,MAAM,OAAO;;;AAIxF,IAAM,cAAN,cAA0B,gBAAgB;CACtC,OAAO,KAAK;CACf,OAAO,WAAW,EACX,OAAO,EACH,UAAU,MAAM,WAAW,SAC9B,EACJ;CACD,sBAAsB;EAClB,MAAM,EAAE,KAAM,QAAS,KAAK,UAAU,KAAK;AAC3C,OAAK,MAAM,eAAe,IAAI,GAAG,MAAM;AACvC,OAAK,MAAM,eAAe,IAAI,GAAG,MAAM;AACvC,OAAK,wBAAwB;;CAEpC,mBAAmB;EACZ,MAAM,aAAa,KAAK,cAAc;EACtC,MAAM,SAAS,aAAa,KAAK,QAAQ,KAAK;EAC9C,MAAM,cAAc,UAAU,KAAK,QAAQ,MAAM,YAAY;EAC7D,MAAM,SAAS,aAAa,KAAK,IAAI,YAAY,GAAG,KAAK,IAAI,YAAY,KAAK;EAC9E,MAAM,WAAW,KAAK,wBAAwB,EAAE;AAChD,SAAO,KAAK,KAAK,SAAS,KAAK,IAAI,IAAI,SAAS,aAAa,MAAM,CAAC;;CAExE,iBAAiB,OAAO;AACpB,SAAO,UAAU,OAAO,MAAM,KAAK,oBAAoB,QAAQ,KAAK,eAAe,KAAK,YAAY;;CAExG,iBAAiB,OAAO;AACpB,SAAO,KAAK,cAAc,KAAK,mBAAmB,MAAM,GAAG,KAAK;;;AAIxE,IAAM,cAAc,MAAI,KAAK,MAAM,MAAM,EAAE,CAAC;AAC5C,IAAM,kBAAkB,GAAG,MAAI,KAAK,IAAI,IAAI,WAAW,EAAE,GAAG,EAAE;AAC9D,SAAS,QAAQ,SAAS;AAEtB,QADe,UAAU,KAAK,IAAI,IAAI,WAAW,QAAQ,CAAC,KACxC;;AAEtB,SAAS,MAAM,KAAK,KAAK,UAAU;CAC/B,MAAM,YAAY,KAAK,IAAI,IAAI,SAAS;CACxC,MAAM,QAAQ,KAAK,MAAM,MAAM,UAAU;AAEzC,QADY,KAAK,KAAK,MAAM,UAAU,GACzB;;AAEjB,SAAS,SAAS,KAAK,KAAK;CACxB,MAAM,QAAQ,MAAM;CACpB,IAAI,WAAW,WAAW,MAAM;AAChC,QAAM,MAAM,KAAK,KAAK,SAAS,GAAG,GAC9B;AAEJ,QAAM,MAAM,KAAK,KAAK,SAAS,GAAG,GAC9B;AAEJ,QAAO,KAAK,IAAI,UAAU,WAAW,IAAI,CAAC;;AAE7C,SAAS,cAAc,mBAAmB,EAAE,KAAM,OAAQ;AACvD,OAAM,gBAAgB,kBAAkB,KAAK,IAAI;CACjD,MAAM,QAAQ,EAAE;CAChB,MAAM,SAAS,WAAW,IAAI;CAC9B,IAAI,MAAM,SAAS,KAAK,IAAI;CAC5B,IAAI,YAAY,MAAM,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,GAAG;CACxD,MAAM,WAAW,KAAK,IAAI,IAAI,IAAI;CAClC,MAAM,OAAO,SAAS,MAAM,KAAK,IAAI,IAAI,OAAO,GAAG;CACnD,MAAM,QAAQ,KAAK,OAAO,MAAM,QAAQ,UAAU,GAAG;CACrD,MAAM,SAAS,KAAK,OAAO,MAAM,QAAQ,WAAW,GAAG,GAAG,WAAW;CACrE,IAAI,cAAc,KAAK,OAAO,QAAQ,UAAU,KAAK,IAAI,IAAI,IAAI,CAAC;CAClE,IAAI,QAAQ,gBAAgB,kBAAkB,KAAK,KAAK,OAAO,OAAO,SAAS,cAAc,KAAK,IAAI,IAAI,IAAI,IAAI,UAAU,GAAG,UAAU;AACzI,QAAM,QAAQ,KAAI;AACd,QAAM,KAAK;GACP;GACA,OAAO,QAAQ,MAAM;GACrB;GACH,CAAC;AACF,MAAI,eAAe,GACf,eAAc,cAAc,KAAK,KAAK;MAEtC;AAEJ,MAAI,eAAe,IAAI;AACnB;AACA,iBAAc;AACd,eAAY,OAAO,IAAI,IAAI;;AAE/B,UAAQ,KAAK,OAAO,OAAO,SAAS,cAAc,KAAK,IAAI,IAAI,IAAI,IAAI,UAAU,GAAG;;CAExF,MAAM,WAAW,gBAAgB,kBAAkB,KAAK,MAAM;AAC9D,OAAM,KAAK;EACP,OAAO;EACP,OAAO,QAAQ,SAAS;EACxB;EACH,CAAC;AACF,QAAO;;AAEX,IAAM,mBAAN,cAA+B,MAAM;CACjC,OAAO,KAAK;CACf,OAAO,WAAW,EACX,OAAO;EACH,UAAU,MAAM,WAAW;EAC3B,OAAO,EACH,SAAS,MACZ;EACJ,EACJ;CACD,YAAY,KAAI;AACZ,QAAM,IAAI;AACT,OAAK,QAAQ;AACb,OAAK,MAAM;AACX,OAAK,cAAc;AACpB,OAAK,cAAc;;CAEvB,MAAM,KAAK,SAAO;EACd,MAAM,QAAQ,gBAAgB,UAAU,MAAM,MAAM,MAAM,CACtD,KACAA,QACH,CAAC;AACF,MAAI,UAAU,GAAG;AACb,QAAK,QAAQ;AACb;;AAEJ,SAAO,eAAe,MAAM,IAAI,QAAQ,IAAI,QAAQ;;CAExD,sBAAsB;EAClB,MAAM,EAAE,KAAM,QAAS,KAAK,UAAU,KAAK;AAC3C,OAAK,MAAM,eAAe,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG;AACpD,OAAK,MAAM,eAAe,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG;AACpD,MAAI,KAAK,QAAQ,YACb,MAAK,QAAQ;AAEjB,MAAI,KAAK,SAAS,KAAK,QAAQ,KAAK,iBAAiB,CAAC,eAAe,KAAK,SAAS,CAC/E,MAAK,MAAM,QAAQ,eAAe,KAAK,KAAK,EAAE,GAAG,eAAe,KAAK,KAAK,GAAG,GAAG,eAAe,KAAK,KAAK,EAAE;AAE/G,OAAK,wBAAwB;;CAEjC,yBAAyB;EACrB,MAAM,EAAE,YAAa,eAAgB,KAAK,eAAe;EACzD,IAAI,MAAM,KAAK;EACf,IAAI,MAAM,KAAK;EACf,MAAM,UAAU,MAAI,MAAM,aAAa,MAAM;EAC7C,MAAM,UAAU,MAAI,MAAM,aAAa,MAAM;AAC7C,MAAI,QAAQ,IACR,KAAI,OAAO,GAAG;AACV,UAAO,EAAE;AACT,UAAO,GAAG;SACP;AACH,UAAO,eAAe,KAAK,GAAG,CAAC;AAC/B,UAAO,eAAe,KAAK,EAAG,CAAC;;AAGvC,MAAI,OAAO,EACP,QAAO,eAAe,KAAK,GAAG,CAAC;AAEnC,MAAI,OAAO,EACP,QAAO,eAAe,KAAK,EAAG,CAAC;AAEnC,OAAK,MAAM;AACX,OAAK,MAAM;;CAEf,aAAa;EACT,MAAM,OAAO,KAAK;EAClB,MAAM,oBAAoB;GACtB,KAAK,KAAK;GACV,KAAK,KAAK;GACb;EACD,MAAM,QAAQ,cAAc,mBAAmB,KAAK;AACpD,MAAI,KAAK,WAAW,QAChB,oBAAmB,OAAO,MAAM,QAAQ;AAE5C,MAAI,KAAK,SAAS;AACd,SAAM,SAAS;AACf,QAAK,QAAQ,KAAK;AAClB,QAAK,MAAM,KAAK;SACb;AACH,QAAK,QAAQ,KAAK;AAClB,QAAK,MAAM,KAAK;;AAEpB,SAAO;;CAEd,iBAAiB,OAAO;AACjB,SAAO,UAAU,SAAY,MAAM,aAAa,OAAO,KAAK,MAAM,QAAQ,QAAQ,KAAK,QAAQ,MAAM,OAAO;;CAEnH,YAAY;EACL,MAAM,QAAQ,KAAK;AACnB,QAAM,WAAW;AACjB,OAAK,cAAc,MAAM,MAAM;AAC/B,OAAK,cAAc,MAAM,KAAK,IAAI,GAAG,MAAM,MAAM;;CAErD,iBAAiB,OAAO;AACpB,MAAI,UAAU,UAAa,UAAU,EACjC,SAAQ,KAAK;AAEjB,MAAI,UAAU,QAAQ,MAAM,MAAM,CAC9B,QAAO;AAEX,SAAO,KAAK,mBAAmB,UAAU,KAAK,MAAM,KAAK,MAAM,MAAM,GAAG,KAAK,eAAe,KAAK,YAAY;;CAEjH,iBAAiB,OAAO;EACpB,MAAM,UAAU,KAAK,mBAAmB,MAAM;AAC9C,SAAO,KAAK,IAAI,IAAI,KAAK,cAAc,UAAU,KAAK,YAAY;;;AAI1E,SAAS,sBAAsB,MAAM;CACjC,MAAM,WAAW,KAAK;AACtB,KAAI,SAAS,WAAW,KAAK,SAAS;EAClC,MAAM,UAAU,UAAU,SAAS,gBAAgB;AACnD,SAAO,eAAe,SAAS,QAAQ,SAAS,KAAK,MAAM,SAAS,KAAK,KAAK,GAAG,QAAQ;;AAE7F,QAAO;;AAEX,SAAS,iBAAiB,KAAK,MAAM,OAAO;AACxC,SAAQ,QAAQ,MAAM,GAAG,QAAQ,CAC7B,MACH;AACD,QAAO;EACH,GAAG,aAAa,KAAK,KAAK,QAAQ,MAAM;EACxC,GAAG,MAAM,SAAS,KAAK;EAC1B;;AAEL,SAAS,gBAAgB,OAAO,KAAK,MAAM,KAAK,KAAK;AACjD,KAAI,UAAU,OAAO,UAAU,IAC3B,QAAO;EACH,OAAO,MAAM,OAAO;EACpB,KAAK,MAAM,OAAO;EACrB;UACM,QAAQ,OAAO,QAAQ,IAC9B,QAAO;EACH,OAAO,MAAM;EACb,KAAK;EACR;AAEL,QAAO;EACH,OAAO;EACP,KAAK,MAAM;EACd;;AAEJ,SAAS,mBAAmB,OAAO;CAChC,MAAM,OAAO;EACT,GAAG,MAAM,OAAO,MAAM,SAAS;EAC/B,GAAG,MAAM,QAAQ,MAAM,SAAS;EAChC,GAAG,MAAM,MAAM,MAAM,SAAS;EAC9B,GAAG,MAAM,SAAS,MAAM,SAAS;EACpC;CACD,MAAM,SAAS,OAAO,OAAO,EAAE,EAAE,KAAK;CACtC,MAAM,aAAa,EAAE;CACrB,MAAM,UAAU,EAAE;CAClB,MAAM,aAAa,MAAM,aAAa;CACtC,MAAM,iBAAiB,MAAM,QAAQ;CACrC,MAAM,kBAAkB,eAAe,oBAAoB,KAAK,aAAa;AAC7E,MAAI,IAAI,IAAI,GAAG,IAAI,YAAY,KAAI;EAC/B,MAAM,OAAO,eAAe,WAAW,MAAM,qBAAqB,EAAE,CAAC;AACrE,UAAQ,KAAK,KAAK;EAClB,MAAM,gBAAgB,MAAM,iBAAiB,GAAG,MAAM,cAAc,QAAQ,IAAI,gBAAgB;EAChG,MAAM,SAAS,OAAO,KAAK,KAAK;EAChC,MAAM,WAAW,iBAAiB,MAAM,KAAK,QAAQ,MAAM,aAAa,GAAG;AAC3E,aAAW,KAAK;EAChB,MAAM,eAAe,gBAAgB,MAAM,cAAc,EAAE,GAAG,gBAAgB;EAC9E,MAAM,QAAQ,KAAK,MAAM,UAAU,aAAa,CAAC;EACjD,MAAM,UAAU,gBAAgB,OAAO,cAAc,GAAG,SAAS,GAAG,GAAG,IAAI;EAC3E,MAAM,UAAU,gBAAgB,OAAO,cAAc,GAAG,SAAS,GAAG,IAAI,IAAI;AAC5E,eAAa,QAAQ,MAAM,cAAc,SAAS,QAAQ;;AAE9D,OAAM,eAAe,KAAK,IAAI,OAAO,GAAG,OAAO,IAAI,KAAK,GAAG,KAAK,IAAI,OAAO,GAAG,OAAO,IAAI,KAAK,EAAE;AAChG,OAAM,mBAAmB,qBAAqB,OAAO,YAAY,QAAQ;;AAE7E,SAAS,aAAa,QAAQ,MAAM,OAAO,SAAS,SAAS;CACzD,MAAM,MAAM,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC;CACrC,MAAM,MAAM,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC;CACrC,IAAI,IAAI;CACR,IAAI,IAAI;AACR,KAAI,QAAQ,QAAQ,KAAK,GAAG;AACxB,OAAK,KAAK,IAAI,QAAQ,SAAS;AAC/B,SAAO,IAAI,KAAK,IAAI,OAAO,GAAG,KAAK,IAAI,EAAE;YAClC,QAAQ,MAAM,KAAK,GAAG;AAC7B,OAAK,QAAQ,MAAM,KAAK,KAAK;AAC7B,SAAO,IAAI,KAAK,IAAI,OAAO,GAAG,KAAK,IAAI,EAAE;;AAE7C,KAAI,QAAQ,QAAQ,KAAK,GAAG;AACxB,OAAK,KAAK,IAAI,QAAQ,SAAS;AAC/B,SAAO,IAAI,KAAK,IAAI,OAAO,GAAG,KAAK,IAAI,EAAE;YAClC,QAAQ,MAAM,KAAK,GAAG;AAC7B,OAAK,QAAQ,MAAM,KAAK,KAAK;AAC7B,SAAO,IAAI,KAAK,IAAI,OAAO,GAAG,KAAK,IAAI,EAAE;;;AAGjD,SAAS,qBAAqB,OAAO,SAAO,UAAU;CAClD,MAAM,gBAAgB,MAAM;CAC5B,MAAM,EAAE,OAAQ,iBAAkB,SAAU,SAAU;CACtD,MAAM,qBAAqB,MAAM,iBAAiBA,SAAO,gBAAgB,QAAQ,SAAS,gBAAgB;CAC1G,MAAM,QAAQ,KAAK,MAAM,UAAU,gBAAgB,mBAAmB,QAAQ,QAAQ,CAAC,CAAC;CACxF,MAAM,IAAI,UAAU,mBAAmB,GAAG,KAAK,GAAG,MAAM;CACxD,MAAM,YAAY,qBAAqB,MAAM;CAC7C,MAAM,OAAO,iBAAiB,mBAAmB,GAAG,KAAK,GAAG,UAAU;AACtE,QAAO;EACH,SAAS;EACT,GAAG,mBAAmB;EACtB;EACA;EACA;EACA,KAAK;EACL,OAAO,OAAO,KAAK;EACnB,QAAQ,IAAI,KAAK;EACpB;;AAEL,SAAS,gBAAgB,MAAM,MAAM;AACjC,KAAI,CAAC,KACD,QAAO;CAEX,MAAM,EAAE,MAAO,KAAM,OAAQ,WAAY;AAczC,QAAO,EAbc,eAAe;EAChC,GAAG;EACH,GAAG;EACN,EAAE,KAAK,IAAI,eAAe;EACvB,GAAG;EACH,GAAG;EACN,EAAE,KAAK,IAAI,eAAe;EACvB,GAAG;EACH,GAAG;EACN,EAAE,KAAK,IAAI,eAAe;EACvB,GAAG;EACH,GAAG;EACN,EAAE,KAAK;;AAGZ,SAAS,qBAAqB,OAAO,YAAY,SAAS;CACtD,MAAM,QAAQ,EAAE;CAChB,MAAM,aAAa,MAAM,aAAa;CACtC,MAAM,OAAO,MAAM;CACnB,MAAM,EAAE,mBAAoB,YAAa,KAAK;CAC9C,MAAM,WAAW;EACb,OAAO,sBAAsB,KAAK,GAAG;EACrC,iBAAiB,oBAAoB,KAAK,aAAa;EAC1D;CACD,IAAI;AACJ,MAAI,IAAI,IAAI,GAAG,IAAI,YAAY,KAAI;AAC/B,WAAS,UAAU,QAAQ;AAC3B,WAAS,OAAO,WAAW;EAC3B,MAAM,OAAO,qBAAqB,OAAO,GAAG,SAAS;AACrD,QAAM,KAAK,KAAK;AAChB,MAAI,YAAY,QAAQ;AACpB,QAAK,UAAU,gBAAgB,MAAM,KAAK;AAC1C,OAAI,KAAK,QACL,QAAO;;;AAInB,QAAO;;AAEX,SAAS,qBAAqB,OAAO;AACjC,KAAI,UAAU,KAAK,UAAU,IACzB,QAAO;UACA,QAAQ,IACf,QAAO;AAEX,QAAO;;AAEX,SAAS,iBAAiB,GAAG,GAAG,OAAO;AACnC,KAAI,UAAU,QACV,MAAK;UACE,UAAU,SACjB,MAAK,IAAI;AAEb,QAAO;;AAEX,SAAS,UAAU,GAAG,GAAG,OAAO;AAC5B,KAAI,UAAU,MAAM,UAAU,IAC1B,MAAK,IAAI;UACF,QAAQ,OAAO,QAAQ,GAC9B,MAAK;AAET,QAAO;;AAEX,SAAS,kBAAkB,KAAK,MAAM,MAAM;CACxC,MAAM,EAAE,MAAO,KAAM,OAAQ,WAAY;CACzC,MAAM,EAAE,kBAAmB;AAC3B,KAAI,CAAC,cAAc,cAAc,EAAE;EAC/B,MAAM,eAAe,cAAc,KAAK,aAAa;EACrD,MAAM,UAAU,UAAU,KAAK,gBAAgB;AAC/C,MAAI,YAAY;EAChB,MAAM,eAAe,OAAO,QAAQ;EACpC,MAAM,cAAc,MAAM,QAAQ;EAClC,MAAM,gBAAgB,QAAQ,OAAO,QAAQ;EAC7C,MAAM,iBAAiB,SAAS,MAAM,QAAQ;AAC9C,MAAI,OAAO,OAAO,aAAa,CAAC,MAAM,MAAI,MAAM,EAAE,EAAE;AAChD,OAAI,WAAW;AACf,sBAAmB,KAAK;IACpB,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,QAAQ;IACX,CAAC;AACF,OAAI,MAAM;QAEV,KAAI,SAAS,cAAc,aAAa,eAAe,eAAe;;;AAIlF,SAAS,gBAAgB,OAAO,YAAY;CACxC,MAAM,EAAE,KAAM,SAAS,EAAE,kBAAoB;AAC7C,MAAI,IAAI,IAAI,aAAa,GAAG,KAAK,GAAG,KAAI;EACpC,MAAM,OAAO,MAAM,iBAAiB;AACpC,MAAI,CAAC,KAAK,QACN;EAEJ,MAAM,cAAc,YAAY,WAAW,MAAM,qBAAqB,EAAE,CAAC;AACzE,oBAAkB,KAAK,aAAa,KAAK;EACzC,MAAM,SAAS,OAAO,YAAY,KAAK;EACvC,MAAM,EAAE,GAAI,GAAI,cAAe;AAC/B,aAAW,KAAK,MAAM,aAAa,IAAI,GAAG,IAAI,OAAO,aAAa,GAAG,QAAQ;GACzE,OAAO,YAAY;GACR;GACX,cAAc;GACjB,CAAC;;;AAGV,SAAS,eAAe,OAAO,QAAQ,UAAU,YAAY;CACzD,MAAM,EAAE,QAAS;AACjB,KAAI,SACA,KAAI,IAAI,MAAM,SAAS,MAAM,SAAS,QAAQ,GAAG,IAAI;MAClD;EACH,IAAI,gBAAgB,MAAM,iBAAiB,GAAG,OAAO;AACrD,MAAI,OAAO,cAAc,GAAG,cAAc,EAAE;AAC5C,OAAI,IAAI,IAAI,GAAG,IAAI,YAAY,KAAI;AAC/B,mBAAgB,MAAM,iBAAiB,GAAG,OAAO;AACjD,OAAI,OAAO,cAAc,GAAG,cAAc,EAAE;;;;AAIxD,SAAS,eAAe,OAAO,cAAc,QAAQ,YAAY,YAAY;CACzE,MAAM,MAAM,MAAM;CAClB,MAAM,WAAW,aAAa;CAC9B,MAAM,EAAE,gBAAQ,cAAe;AAC/B,KAAI,CAAC,YAAY,CAAC,cAAc,CAACI,WAAS,CAAC,aAAa,SAAS,EAC7D;AAEJ,KAAI,MAAM;AACV,KAAI,cAAcA;AAClB,KAAI,YAAY;AAChB,KAAI,YAAY,WAAW,QAAQ,EAAE,CAAC;AACtC,KAAI,iBAAiB,WAAW;AAChC,KAAI,WAAW;AACf,gBAAe,OAAO,QAAQ,UAAU,WAAW;AACnD,KAAI,WAAW;AACf,KAAI,QAAQ;AACZ,KAAI,SAAS;;AAEjB,SAAS,wBAAwB,QAAQ,SAAO,OAAO;AACnD,QAAO,cAAc,QAAQ;EACzB;EACA;EACA,MAAM;EACT,CAAC;;AAEN,IAAM,oBAAN,cAAgC,gBAAgB;CAC5C,OAAO,KAAK;CACf,OAAO,WAAW;EACX,SAAS;EACT,SAAS;EACT,UAAU;EACV,YAAY;GACR,SAAS;GACT,WAAW;GACX,YAAY,EAAE;GACd,kBAAkB;GACrB;EACD,MAAM,EACF,UAAU,OACb;EACD,YAAY;EACZ,OAAO;GACH,mBAAmB;GACnB,UAAU,MAAM,WAAW;GAC9B;EACD,aAAa;GACT,eAAe;GACf,iBAAiB;GACjB,SAAS;GACT,MAAM,EACF,MAAM,IACT;GACD,SAAU,OAAO;AACb,WAAO;;GAEX,SAAS;GACT,mBAAmB;GACtB;EACJ;CACD,OAAO,gBAAgB;EACnB,oBAAoB;EACpB,qBAAqB;EACrB,eAAe;EAClB;CACD,OAAO,cAAc,EACjB,YAAY,EACR,WAAW,QACd,EACJ;CACD,YAAY,KAAI;AACZ,QAAM,IAAI;AACT,OAAK,UAAU;AACf,OAAK,UAAU;AACf,OAAK,cAAc;AACnB,OAAK,eAAe,EAAE;AACvB,OAAK,mBAAmB,EAAE;;CAE9B,gBAAgB;EACZ,MAAM,UAAU,KAAK,WAAW,UAAU,sBAAsB,KAAK,QAAQ,GAAG,EAAE;EAClF,MAAM,IAAI,KAAK,QAAQ,KAAK,WAAW,QAAQ;EAC/C,MAAM,IAAI,KAAK,SAAS,KAAK,YAAY,QAAQ;AACjD,OAAK,UAAU,KAAK,MAAM,KAAK,OAAO,IAAI,IAAI,QAAQ,KAAK;AAC3D,OAAK,UAAU,KAAK,MAAM,KAAK,MAAM,IAAI,IAAI,QAAQ,IAAI;AACzD,OAAK,cAAc,KAAK,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;;CAErD,sBAAsB;EAClB,MAAM,EAAE,KAAM,QAAS,KAAK,UAAU,MAAM;AAC5C,OAAK,MAAM,eAAe,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,MAAM;AACtD,OAAK,MAAM,eAAe,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,MAAM;AACtD,OAAK,wBAAwB;;CAEpC,mBAAmB;AACZ,SAAO,KAAK,KAAK,KAAK,cAAc,sBAAsB,KAAK,QAAQ,CAAC;;CAE5E,mBAAmB,OAAO;AACtB,kBAAgB,UAAU,mBAAmB,KAAK,MAAM,MAAM;AAC9D,OAAK,eAAe,KAAK,WAAW,CAAC,KAAK,OAAO,YAAQ;GACrD,MAAM,QAAQ,SAAS,KAAK,QAAQ,YAAY,UAAU,CACtD,OACAJ,QACH,EAAE,KAAK;AACR,UAAO,SAAS,UAAU,IAAI,QAAQ;IACxC,CAAC,QAAQ,GAAG,MAAI,KAAK,MAAM,kBAAkB,EAAE,CAAC;;CAEtD,MAAM;EACF,MAAM,OAAO,KAAK;AAClB,MAAI,KAAK,WAAW,KAAK,YAAY,QACjC,oBAAmB,KAAK;MAExB,MAAK,eAAe,GAAG,GAAG,GAAG,EAAE;;CAGvC,eAAe,cAAc,eAAe,aAAa,gBAAgB;AACrE,OAAK,WAAW,KAAK,OAAO,eAAe,iBAAiB,EAAE;AAC9D,OAAK,WAAW,KAAK,OAAO,cAAc,kBAAkB,EAAE;AAC9D,OAAK,eAAe,KAAK,IAAI,KAAK,cAAc,GAAG,KAAK,IAAI,cAAc,eAAe,aAAa,eAAe,CAAC;;CAE1H,cAAc,SAAO;EACjB,MAAM,kBAAkB,OAAO,KAAK,aAAa,UAAU;EAC3D,MAAM,aAAa,KAAK,QAAQ,cAAc;AAC9C,SAAO,gBAAgBA,UAAQ,kBAAkB,UAAU,WAAW,CAAC;;CAE3E,8BAA8B,OAAO;AACjC,MAAI,cAAc,MAAM,CACpB,QAAO;EAEX,MAAM,gBAAgB,KAAK,eAAe,KAAK,MAAM,KAAK;AAC1D,MAAI,KAAK,QAAQ,QACb,SAAQ,KAAK,MAAM,SAAS;AAEhC,UAAQ,QAAQ,KAAK,OAAO;;CAEhC,8BAA8B,UAAU;AACpC,MAAI,cAAc,SAAS,CACvB,QAAO;EAEX,MAAM,iBAAiB,YAAY,KAAK,eAAe,KAAK,MAAM,KAAK;AACvE,SAAO,KAAK,QAAQ,UAAU,KAAK,MAAM,iBAAiB,KAAK,MAAM;;CAEzE,qBAAqB,SAAO;EACxB,MAAM,cAAc,KAAK,gBAAgB,EAAE;AAC3C,MAAIA,WAAS,KAAKA,UAAQ,YAAY,QAAQ;GAC1C,MAAM,aAAa,YAAYA;AAC/B,UAAO,wBAAwB,KAAK,YAAY,EAAEA,SAAO,WAAW;;;CAG5E,iBAAiB,SAAO,oBAAoB,kBAAkB,GAAG;EAC7D,MAAM,QAAQ,KAAK,cAAcA,QAAM,GAAG,UAAU;AACpD,SAAO;GACH,GAAG,KAAK,IAAI,MAAM,GAAG,qBAAqB,KAAK;GAC/C,GAAG,KAAK,IAAI,MAAM,GAAG,qBAAqB,KAAK;GAC/C;GACH;;CAEL,yBAAyB,SAAO,OAAO;AACnC,SAAO,KAAK,iBAAiBA,SAAO,KAAK,8BAA8B,MAAM,CAAC;;CAElF,gBAAgB,SAAO;AACnB,SAAO,KAAK,yBAAyBA,WAAS,GAAG,KAAK,cAAc,CAAC;;CAEzE,sBAAsB,SAAO;EACzB,MAAM,EAAE,MAAO,KAAM,OAAQ,WAAY,KAAK,iBAAiBA;AAC/D,SAAO;GACH;GACA;GACA;GACA;GACH;;CAER,iBAAiB;EACV,MAAM,EAAE,iBAAkB,MAAM,EAAE,eAAiB,KAAK;AACxD,MAAI,iBAAiB;GACjB,MAAM,MAAM,KAAK;AACjB,OAAI,MAAM;AACV,OAAI,WAAW;AACf,kBAAe,MAAM,KAAK,8BAA8B,KAAK,UAAU,EAAE,UAAU,KAAK,aAAa,OAAO;AAC5G,OAAI,WAAW;AACf,OAAI,YAAY;AAChB,OAAI,MAAM;AACV,OAAI,SAAS;;;CAGxB,WAAW;EACJ,MAAM,MAAM,KAAK;EACjB,MAAM,OAAO,KAAK;EAClB,MAAM,EAAE,YAAa,MAAO,WAAY;EACxC,MAAM,aAAa,KAAK,aAAa;EACrC,IAAI,GAAG,QAAQ;AACf,MAAI,KAAK,YAAY,QACjB,iBAAgB,MAAM,WAAW;AAErC,MAAI,KAAK,QACL,MAAK,MAAM,SAAS,MAAM,YAAQ;AAC9B,OAAIA,YAAU,KAAKA,YAAU,KAAK,KAAK,MAAM,GAAG;AAC5C,aAAS,KAAK,8BAA8B,KAAK,MAAM;IACvD,MAAM,UAAU,KAAK,WAAWA,QAAM;IACtC,MAAM,cAAc,KAAK,WAAW,QAAQ;IAC5C,MAAM,oBAAoB,OAAO,WAAW,QAAQ;AACpD,mBAAe,MAAM,aAAa,QAAQ,YAAY,kBAAkB;;IAE9E;AAEN,MAAI,WAAW,SAAS;AACpB,OAAI,MAAM;AACV,QAAI,IAAI,aAAa,GAAG,KAAK,GAAG,KAAI;IAChC,MAAM,cAAc,WAAW,WAAW,KAAK,qBAAqB,EAAE,CAAC;IACvE,MAAM,EAAE,gBAAQ,cAAe;AAC/B,QAAI,CAAC,aAAa,CAACI,QACf;AAEJ,QAAI,YAAY;AAChB,QAAI,cAAcA;AAClB,QAAI,YAAY,YAAY,WAAW;AACvC,QAAI,iBAAiB,YAAY;AACjC,aAAS,KAAK,8BAA8B,KAAK,UAAU,KAAK,MAAM,KAAK,IAAI;AAC/E,eAAW,KAAK,iBAAiB,GAAG,OAAO;AAC3C,QAAI,WAAW;AACf,QAAI,OAAO,KAAK,SAAS,KAAK,QAAQ;AACtC,QAAI,OAAO,SAAS,GAAG,SAAS,EAAE;AAClC,QAAI,QAAQ;;AAEhB,OAAI,SAAS;;;CAGxB,aAAa;CACb,aAAa;EACN,MAAM,MAAM,KAAK;EACjB,MAAM,OAAO,KAAK;EAClB,MAAM,WAAW,KAAK;AACtB,MAAI,CAAC,SAAS,QACV;EAEJ,MAAM,aAAa,KAAK,cAAc,EAAE;EACxC,IAAI,QAAQ;AACZ,MAAI,MAAM;AACV,MAAI,UAAU,KAAK,SAAS,KAAK,QAAQ;AACzC,MAAI,OAAO,WAAW;AACtB,MAAI,YAAY;AAChB,MAAI,eAAe;AACnB,OAAK,MAAM,SAAS,MAAM,YAAQ;AAC9B,OAAIJ,YAAU,KAAK,KAAK,OAAO,KAAK,CAAC,KAAK,QACtC;GAEJ,MAAM,cAAc,SAAS,WAAW,KAAK,WAAWA,QAAM,CAAC;GAC/D,MAAM,WAAW,OAAO,YAAY,KAAK;AACzC,YAAS,KAAK,8BAA8B,KAAK,MAAMA,SAAO,MAAM;AACpE,OAAI,YAAY,mBAAmB;AAC/B,QAAI,OAAO,SAAS;AACpB,YAAQ,IAAI,YAAY,KAAK,MAAM,CAAC;AACpC,QAAI,YAAY,YAAY;IAC5B,MAAM,UAAU,UAAU,YAAY,gBAAgB;AACtD,QAAI,SAAS,CAAC,QAAQ,IAAI,QAAQ,MAAM,CAAC,SAAS,SAAS,OAAO,IAAI,QAAQ,KAAK,QAAQ,QAAQ,OAAO,SAAS,OAAO,QAAQ,OAAO;;AAE7I,cAAW,KAAK,KAAK,OAAO,GAAG,CAAC,QAAQ,UAAU;IAC9C,OAAO,YAAY;IACnB,aAAa,YAAY;IACzB,aAAa,YAAY;IAC5B,CAAC;IACJ;AACF,MAAI,SAAS;;CAEpB,YAAY;;AAGb,IAAM,YAAY;CACd,aAAa;EACT,QAAQ;EACR,MAAM;EACN,OAAO;EACV;CACD,QAAQ;EACJ,QAAQ;EACR,MAAM;EACN,OAAO;EACV;CACD,QAAQ;EACJ,QAAQ;EACR,MAAM;EACN,OAAO;EACV;CACD,MAAM;EACF,QAAQ;EACR,MAAM;EACN,OAAO;EACV;CACD,KAAK;EACD,QAAQ;EACR,MAAM;EACN,OAAO;EACV;CACD,MAAM;EACF,QAAQ;EACR,MAAM;EACN,OAAO;EACV;CACD,OAAO;EACH,QAAQ;EACR,MAAM;EACN,OAAO;EACV;CACD,SAAS;EACL,QAAQ;EACR,MAAM;EACN,OAAO;EACV;CACD,MAAM;EACF,QAAQ;EACR,MAAM;EACT;CACJ;AACA,IAAM,QAAyB,uBAAO,KAAK,UAAU;AACrD,SAAS,OAAO,GAAG,GAAG;AACnB,QAAO,IAAI;;AAEd,SAAS,MAAM,OAAO,OAAO;AAC1B,KAAI,cAAc,MAAM,CACpB,QAAO;CAEX,MAAM,UAAU,MAAM;CACtB,MAAM,EAAE,QAAS,gBAAQ,eAAgB,MAAM;CAC/C,IAAI,QAAQ;AACZ,KAAI,OAAO,WAAW,WAClB,SAAQ,OAAO,MAAM;AAEzB,KAAI,CAAC,eAAe,MAAM,CACtB,SAAQ,OAAO,WAAW,WAAW,QAAQ,MAAM,OAAO,OAAO,GAAG,QAAQ,MAAM,MAAM;AAE5F,KAAI,UAAU,KACV,QAAO;AAEX,KAAIgB,QACA,SAAQA,YAAU,WAAW,SAAS,WAAW,IAAI,eAAe,QAAQ,QAAQ,QAAQ,OAAO,WAAW,WAAW,GAAG,QAAQ,QAAQ,OAAOA,QAAM;AAE7J,QAAO,CAAC;;AAEX,SAAS,0BAA0B,SAAS,KAAK,KAAK,UAAU;CAC7D,MAAM,OAAO,MAAM;AACnB,MAAI,IAAI,IAAI,MAAM,QAAQ,QAAQ,EAAE,IAAI,OAAO,GAAG,EAAE,GAAE;EAClD,MAAM,WAAW,UAAU,MAAM;EACjC,MAAM,SAAS,SAAS,QAAQ,SAAS,QAAQ,OAAO;AACxD,MAAI,SAAS,UAAU,KAAK,MAAM,MAAM,QAAQ,SAAS,SAAS,MAAM,IAAI,SACxE,QAAO,MAAM;;AAGrB,QAAO,MAAM,OAAO;;AAEvB,SAAS,2BAA2B,OAAO,UAAU,SAAS,KAAK,KAAK;AACrE,MAAI,IAAI,IAAI,MAAM,SAAS,GAAG,KAAK,MAAM,QAAQ,QAAQ,EAAE,KAAI;EAC3D,MAAM,OAAO,MAAM;AACnB,MAAI,UAAU,MAAM,UAAU,MAAM,SAAS,KAAK,KAAK,KAAK,KAAK,IAAI,WAAW,EAC5E,QAAO;;AAGf,QAAO,MAAM,UAAU,MAAM,QAAQ,QAAQ,GAAG;;AAEnD,SAAS,mBAAmB,MAAM;AAC/B,MAAI,IAAI,IAAI,MAAM,QAAQ,KAAK,GAAG,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,EAClE,KAAI,UAAU,MAAM,IAAI,OACpB,QAAO,MAAM;;AAIxB,SAAS,QAAQ,OAAO,MAAM,YAAY;AACvC,KAAI,CAAC,WACD,OAAM,QAAQ;UACP,WAAW,QAAQ;EAC1B,MAAM,EAAE,IAAK,OAAQ,QAAQ,YAAY,KAAK;EAC9C,MAAM,YAAY,WAAW,OAAO,OAAO,WAAW,MAAM,WAAW;AACvE,QAAM,aAAa;;;AAG1B,SAAS,cAAc,OAAO,OAAO,OAAK,WAAW;CAClD,MAAM,UAAU,MAAM;CACtB,MAAM,QAAQ,CAAC,QAAQ,QAAQ,MAAM,GAAG,OAAO,UAAU;CACzD,MAAM,OAAO,MAAM,MAAM,SAAS,GAAG;CACrC,IAAI,OAAOhB;AACX,MAAI,QAAQ,OAAO,SAAS,MAAM,QAAQ,CAAC,QAAQ,IAAI,OAAO,GAAG,UAAU,EAAC;AACxE,YAAQiB,MAAI;AACZ,MAAIjB,WAAS,EACT,OAAMA,SAAO,QAAQ;;AAG7B,QAAO;;AAEV,SAAS,oBAAoB,OAAO,QAAQ,WAAW;CACpD,MAAM,QAAQ,EAAE;CACf,MAAMiB,QAAM,EAAE;CACf,MAAM,OAAO,OAAO;CACpB,IAAI,GAAG;AACP,MAAI,IAAI,GAAG,IAAI,MAAM,EAAE,GAAE;AACrB,UAAQ,OAAO;AACf,QAAI,SAAS;AACb,QAAM,KAAK;GACP;GACA,OAAO;GACV,CAAC;;AAEN,QAAO,SAAS,KAAK,CAAC,YAAY,QAAQ,cAAc,OAAO,OAAOA,OAAK,UAAU;;AAEzF,IAAM,YAAN,cAAwB,MAAM;CAC1B,OAAO,KAAK;CACf,OAAO,WAAW;EAClB,QAAQ;EACD,UAAU,EAAE;EACZ,MAAM;GACF,QAAQ;GACR,MAAM;GACN,OAAO;GACP,YAAY;GACZ,SAAS;GACT,gBAAgB,EAAE;GACrB;EACD,OAAO;GACd,QAAQ;GACG,UAAU;GACV,OAAO,EACH,SAAS,OACZ;GACJ;EACJ;CACJ,YAAY,OAAM;AACX,QAAM,MAAM;AACX,OAAK,SAAS;GACX,MAAM,EAAE;GACR,QAAQ,EAAE;GACV,KAAK,EAAE;GACV;AACA,OAAK,QAAQ;AACb,OAAK,aAAa;AACnB,OAAK,WAAW,EAAE;AAClB,OAAK,cAAc;AACnB,OAAK,aAAa;;CAEtB,KAAK,WAAW,OAAO,EAAE,EAAE;EACvB,MAAM,OAAO,UAAU,SAAS,UAAU,OAAO,EAAE;EAClD,MAAM,UAAU,KAAK,WAAW,IAAI,SAAS,MAAM,UAAU,SAAS,KAAK;AAC5E,UAAQ,KAAK,KAAK;AAClB,UAAQ,KAAK,gBAAgB,QAAQ,SAAS,CAAC;AAC/C,OAAK,aAAa;GACd,QAAQ,KAAK;GACb,OAAO,KAAK;GACZ,YAAY,KAAK;GACpB;AACD,QAAM,KAAK,UAAU;AACrB,OAAK,cAAc,KAAK;;CAE/B,MAAM,KAAK,SAAO;AACX,MAAI,QAAQ,OACR,QAAO;AAEX,SAAO,MAAM,MAAM,IAAI;;CAE3B,eAAe;AACX,QAAM,cAAc;AACpB,OAAK,SAAS;GACV,MAAM,EAAE;GACR,QAAQ,EAAE;GACV,KAAK,EAAE;GACV;;CAEL,sBAAsB;EAClB,MAAM,UAAU,KAAK;EACrB,MAAM,UAAU,KAAK;EACrB,MAAM,OAAO,QAAQ,KAAK,QAAQ;EAClC,IAAI,EAAE,KAAM,KAAM,YAAa,eAAgB,KAAK,eAAe;EAC1E,SAAS,aAAa,QAAQ;AACnB,OAAI,CAAC,cAAc,CAAC,MAAM,OAAO,IAAI,CACjC,OAAM,KAAK,IAAI,KAAK,OAAO,IAAI;AAEnC,OAAI,CAAC,cAAc,CAAC,MAAM,OAAO,IAAI,CACjC,OAAM,KAAK,IAAI,KAAK,OAAO,IAAI;;AAGvC,MAAI,CAAC,cAAc,CAAC,YAAY;AAC5B,gBAAa,KAAK,iBAAiB,CAAC;AACpC,OAAI,QAAQ,WAAW,WAAW,QAAQ,MAAM,WAAW,SACvD,cAAa,KAAK,UAAU,MAAM,CAAC;;AAG3C,QAAM,eAAe,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,QAAQ,KAAK,KAAK,EAAE,KAAK;AACnF,QAAM,eAAe,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,MAAM,KAAK,KAAK,EAAE,KAAK,GAAG;AACpF,OAAK,MAAM,KAAK,IAAI,KAAK,MAAM,EAAE;AACjC,OAAK,MAAM,KAAK,IAAI,MAAM,GAAG,IAAI;;CAExC,kBAAkB;EACX,MAAM,MAAM,KAAK,oBAAoB;EACrC,IAAI,MAAM,OAAO;EACjB,IAAI,MAAM,OAAO;AACjB,MAAI,IAAI,QAAQ;AACZ,SAAM,IAAI;AACV,SAAM,IAAI,IAAI,SAAS;;AAE3B,SAAO;GACH;GACA;GACH;;CAER,aAAa;EACN,MAAM,UAAU,KAAK;EACrB,MAAM,WAAW,QAAQ;EACzB,MAAM,WAAW,QAAQ;EACzB,MAAM,aAAa,SAAS,WAAW,WAAW,KAAK,oBAAoB,GAAG,KAAK,WAAW;AAC9F,MAAI,QAAQ,WAAW,WAAW,WAAW,QAAQ;AACjD,QAAK,MAAM,KAAK,YAAY,WAAW;AACvC,QAAK,MAAM,KAAK,YAAY,WAAW,WAAW,SAAS;;EAE/D,MAAM,MAAM,KAAK;EACjB,MAAM,MAAM,KAAK;EACjB,MAAM,QAAQ,eAAe,YAAY,KAAK,IAAI;AAClD,OAAK,QAAQ,SAAS,SAAS,SAAS,WAAW,0BAA0B,SAAS,SAAS,KAAK,KAAK,KAAK,KAAK,KAAK,kBAAkB,IAAI,CAAC,GAAG,2BAA2B,MAAM,MAAM,QAAQ,SAAS,SAAS,KAAK,KAAK,KAAK,IAAI;AACtO,OAAK,aAAa,CAAC,SAAS,MAAM,WAAW,KAAK,UAAU,SAAS,SAAY,mBAAmB,KAAK,MAAM;AAC/G,OAAK,YAAY,WAAW;AAC5B,MAAI,QAAQ,QACR,OAAM,SAAS;AAEnB,SAAO,oBAAoB,MAAM,OAAO,KAAK,WAAW;;CAE5D,gBAAgB;AACZ,MAAI,KAAK,QAAQ,oBACb,MAAK,YAAY,KAAK,MAAM,KAAK,SAAO,CAAC,KAAK,MAAM,CAAC;;CAGhE,YAAY,aAAa,EAAE,EAAE;EACtB,IAAI,QAAQ;EACZ,IAAI,MAAM;EACV,IAAI,OAAO;AACX,MAAI,KAAK,QAAQ,UAAU,WAAW,QAAQ;AAC1C,WAAQ,KAAK,mBAAmB,WAAW,GAAG;AAC9C,OAAI,WAAW,WAAW,EACtB,SAAQ,IAAI;OAEZ,UAAS,KAAK,mBAAmB,WAAW,GAAG,GAAG,SAAS;AAE/D,UAAO,KAAK,mBAAmB,WAAW,WAAW,SAAS,GAAG;AACjE,OAAI,WAAW,WAAW,EACtB,OAAM;OAEN,QAAO,OAAO,KAAK,mBAAmB,WAAW,WAAW,SAAS,GAAG,IAAI;;EAGpF,MAAM,QAAQ,WAAW,SAAS,IAAI,KAAM;AAC5C,UAAQ,YAAY,OAAO,GAAG,MAAM;AACpC,QAAM,YAAY,KAAK,GAAG,MAAM;AAChC,OAAK,WAAW;GACZ;GACA;GACA,QAAQ,KAAK,QAAQ,IAAI;GAC5B;;CAER,YAAY;EACL,MAAM,UAAU,KAAK;EACrB,MAAM,MAAM,KAAK;EACjB,MAAM,MAAM,KAAK;EACjB,MAAM,UAAU,KAAK;EACrB,MAAM,WAAW,QAAQ;EACzB,MAAM,QAAQ,SAAS,QAAQ,0BAA0B,SAAS,SAAS,KAAK,KAAK,KAAK,kBAAkB,IAAI,CAAC;EACjH,MAAM,WAAW,eAAe,QAAQ,MAAM,UAAU,EAAE;EAC1D,MAAM,UAAU,UAAU,SAAS,SAAS,aAAa;EACzD,MAAM,aAAa,SAAS,QAAQ,IAAI,YAAY;EACpD,MAAM,QAAQ,EAAE;EAChB,IAAI,QAAQ;EACZ,IAAI,MAAM;AACV,MAAI,WACA,SAAQ,CAAC,QAAQ,QAAQ,OAAO,WAAW,QAAQ;AAEvD,UAAQ,CAAC,QAAQ,QAAQ,OAAO,aAAa,QAAQ,MAAM;AAC3D,MAAI,QAAQ,KAAK,KAAK,KAAK,MAAM,GAAG,MAAS,SACzC,OAAM,IAAI,MAAM,MAAM,UAAU,MAAM,yCAAyC,WAAW,MAAM,MAAM;EAE1G,MAAM,aAAa,QAAQ,MAAM,WAAW,UAAU,KAAK,mBAAmB;AAC9E,OAAI,OAAO,OAAO,QAAQ,GAAG,OAAO,KAAK,OAAO,CAAC,QAAQ,IAAI,MAAM,UAAU,MAAM,EAAE,QACjF,SAAQ,OAAO,MAAM,WAAW;AAEpC,MAAI,SAAS,OAAO,QAAQ,WAAW,WAAW,UAAU,EACxD,SAAQ,OAAO,MAAM,WAAW;AAEpC,SAAO,OAAO,KAAK,MAAM,CAAC,KAAK,OAAO,CAAC,KAAK,MAAI,CAAC,EAAE;;CAE1D,iBAAiB,OAAO;EACjB,MAAM,UAAU,KAAK;EACrB,MAAM,WAAW,KAAK,QAAQ;AAC9B,MAAI,SAAS,cACT,QAAO,QAAQ,OAAO,OAAO,SAAS,cAAc;AAExD,SAAO,QAAQ,OAAO,OAAO,SAAS,eAAe,SAAS;;CAErE,OAAO,OAAO,QAAQ;EAEf,MAAM,UADU,KAAK,QACG,KAAK;EAC7B,MAAM,OAAO,KAAK;EAClB,MAAM,MAAM,UAAU,QAAQ;AAC9B,SAAO,KAAK,SAAS,OAAO,OAAO,IAAI;;CAE9C,oBAAoB,MAAM,SAAO,OAAO,QAAQ;EACzC,MAAM,UAAU,KAAK;EACrB,MAAM,YAAY,QAAQ,MAAM;AAChC,MAAI,UACA,QAAO,SAAS,WAAW;GACvB;GACAjB;GACA;GACH,EAAE,KAAK;EAEZ,MAAM,UAAU,QAAQ,KAAK;EAC7B,MAAM,OAAO,KAAK;EAClB,MAAM,YAAY,KAAK;EACvB,MAAM,cAAc,QAAQ,QAAQ;EACpC,MAAM,cAAc,aAAa,QAAQ;EACzC,MAAM,OAAO,MAAMA;EACnB,MAAM,QAAQ,aAAa,eAAe,QAAQ,KAAK;AACvD,SAAO,KAAK,SAAS,OAAO,MAAM,WAAW,QAAQ,cAAc,aAAa;;CAEvF,mBAAmB,OAAO;EACnB,IAAI,GAAG,MAAM;AACb,OAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC1C,UAAO,MAAM;AACb,QAAK,QAAQ,KAAK,oBAAoB,KAAK,OAAO,GAAG,MAAM;;;CAGtE,mBAAmB,OAAO;AACnB,SAAO,UAAU,OAAO,OAAO,QAAQ,KAAK,QAAQ,KAAK,MAAM,KAAK;;CAE3E,iBAAiB,OAAO;EACjB,MAAM,UAAU,KAAK;EACrB,MAAM,MAAM,KAAK,mBAAmB,MAAM;AAC1C,SAAO,KAAK,oBAAoB,QAAQ,QAAQ,OAAO,QAAQ,OAAO;;CAE7E,iBAAiB,OAAO;EACjB,MAAM,UAAU,KAAK;EACrB,MAAM,MAAM,KAAK,mBAAmB,MAAM,GAAG,QAAQ,SAAS,QAAQ;AACtE,SAAO,KAAK,MAAM,OAAO,KAAK,MAAM,KAAK;;CAEhD,cAAc,OAAO;EACd,MAAM,YAAY,KAAK,QAAQ;EAC/B,MAAM,iBAAiB,KAAK,IAAI,YAAY,MAAM,CAAC;EACnD,MAAM,QAAQ,UAAU,KAAK,cAAc,GAAG,UAAU,cAAc,UAAU,YAAY;EAC5F,MAAM,cAAc,KAAK,IAAI,MAAM;EACnC,MAAM,cAAc,KAAK,IAAI,MAAM;EACnC,MAAM,eAAe,KAAK,wBAAwB,EAAE,CAAC;AACrD,SAAO;GACH,GAAG,iBAAiB,cAAc,eAAe;GACjD,GAAG,iBAAiB,cAAc,eAAe;GACpD;;CAER,kBAAkB,aAAa;EACxB,MAAM,WAAW,KAAK,QAAQ;EAC9B,MAAM,iBAAiB,SAAS;EAChC,MAAM,SAAS,eAAe,SAAS,SAAS,eAAe;EAC/D,MAAM,eAAe,KAAK,oBAAoB,aAAa,GAAG,oBAAoB,MAAM,CACpF,YACH,EAAE,KAAK,WAAW,EAAE,OAAO;EAC5B,MAAM,OAAO,KAAK,cAAc,aAAa;EAC7C,MAAM,WAAW,KAAK,MAAM,KAAK,cAAc,GAAG,KAAK,QAAQ,KAAK,IAAI,KAAK,SAAS,KAAK,EAAE,GAAG;AAChG,SAAO,WAAW,IAAI,WAAW;;CAExC,oBAAoB;EACb,IAAI,aAAa,KAAK,OAAO,QAAQ,EAAE;EACvC,IAAI,GAAG;AACP,MAAI,WAAW,OACX,QAAO;EAEX,MAAM,QAAQ,KAAK,yBAAyB;AAC5C,MAAI,KAAK,eAAe,MAAM,OAC1B,QAAO,KAAK,OAAO,OAAO,MAAM,GAAG,WAAW,mBAAmB,KAAK;AAE1E,OAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,EACxC,cAAa,WAAW,OAAO,MAAM,GAAG,WAAW,mBAAmB,KAAK,CAAC;AAEhF,SAAO,KAAK,OAAO,OAAO,KAAK,UAAU,WAAW;;CAE3D,qBAAqB;EACd,MAAM,aAAa,KAAK,OAAO,UAAU,EAAE;EAC3C,IAAI,GAAG;AACP,MAAI,WAAW,OACX,QAAO;EAEX,MAAM,SAAS,KAAK,WAAW;AAC/B,OAAI,IAAI,GAAG,OAAO,OAAO,QAAQ,IAAI,MAAM,EAAE,EACzC,YAAW,KAAK,MAAM,MAAM,OAAO,GAAG,CAAC;AAE3C,SAAO,KAAK,OAAO,SAAS,KAAK,cAAc,aAAa,KAAK,UAAU,WAAW;;CAE7F,UAAU,QAAQ;AACX,SAAO,aAAa,OAAO,KAAK,OAAO,CAAC;;;AAIhD,SAAS,YAAY,OAAO,KAAK,SAAS;CACtC,IAAI,KAAK;CACT,IAAI,KAAK,MAAM,SAAS;CACxB,IAAI,YAAY,YAAY,YAAY;AACxC,KAAI,SAAS;AACT,MAAI,OAAO,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,IACzC,EAAC,CAAE,IAAK,MAAQ,aAAa,OAAO,OAAO,IAAI;AAEnD,GAAC,CAAE,KAAK,YAAa,MAAM,cAAgB,MAAM;AACjD,GAAC,CAAE,KAAK,YAAa,MAAM,cAAgB,MAAM;QAC9C;AACH,MAAI,OAAO,MAAM,IAAI,QAAQ,OAAO,MAAM,IAAI,KAC1C,EAAC,CAAE,IAAK,MAAQ,aAAa,OAAO,QAAQ,IAAI;AAEpD,GAAC,CAAE,MAAM,YAAa,KAAK,cAAgB,MAAM;AACjD,GAAC,CAAE,MAAM,YAAa,KAAK,cAAgB,MAAM;;CAErD,MAAM,OAAO,aAAa;AAC1B,QAAO,OAAO,cAAc,aAAa,eAAe,MAAM,cAAc,OAAO;;AAEvF,IAAM,kBAAN,cAA8B,UAAU;CACpC,OAAO,KAAK;CACf,OAAO,WAAW,UAAU;CAC5B,YAAY,OAAM;AACX,QAAM,MAAM;AACX,OAAK,SAAS,EAAE;AAChB,OAAK,UAAU;AACf,OAAK,cAAc;;CAE3B,cAAc;EACP,MAAM,aAAa,KAAK,wBAAwB;EAChD,MAAM,QAAQ,KAAK,SAAS,KAAK,iBAAiB,WAAW;AAC7D,OAAK,UAAU,YAAY,OAAO,KAAK,IAAI;AAC3C,OAAK,cAAc,YAAY,OAAO,KAAK,IAAI,GAAG,KAAK;AACvD,QAAM,YAAY,WAAW;;CAEpC,iBAAiB,YAAY;EACtB,MAAM,EAAE,KAAM,QAAS;EACvB,MAAM,QAAQ,EAAE;EAChB,MAAM,QAAQ,EAAE;EAChB,IAAI,GAAG,MAAM,MAAM,MAAM;AACzB,OAAI,IAAI,GAAG,OAAO,WAAW,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC/C,UAAO,WAAW;AAClB,OAAI,QAAQ,OAAO,QAAQ,IACvB,OAAM,KAAK,KAAK;;AAGxB,MAAI,MAAM,SAAS,EACf,QAAO,CACH;GACI,MAAM;GACN,KAAK;GACR,EACD;GACI,MAAM;GACN,KAAK;GACR,CACJ;AAEL,OAAI,IAAI,GAAG,OAAO,MAAM,QAAQ,IAAI,MAAM,EAAE,GAAE;AAC1C,UAAO,MAAM,IAAI;AACjB,UAAO,MAAM,IAAI;AACjB,UAAO,MAAM;AACb,OAAI,KAAK,OAAO,OAAO,QAAQ,EAAE,KAAK,KAClC,OAAM,KAAK;IACP,MAAM;IACN,KAAK,KAAK,OAAO;IACpB,CAAC;;AAGV,SAAO;;CAEd,YAAY;EACL,MAAM,MAAM,KAAK;EACjB,MAAM,MAAM,KAAK;EACjB,IAAI,aAAa,MAAM,mBAAmB;AAC1C,MAAI,CAAC,WAAW,SAAS,IAAI,IAAI,CAAC,WAAW,OACzC,YAAW,OAAO,GAAG,GAAG,IAAI;AAEhC,MAAI,CAAC,WAAW,SAAS,IAAI,IAAI,WAAW,WAAW,EACnD,YAAW,KAAK,IAAI;AAExB,SAAO,WAAW,MAAM,GAAG,MAAI,IAAI,EAAE;;CAE5C,yBAAyB;EAClB,IAAI,aAAa,KAAK,OAAO,OAAO,EAAE;AACtC,MAAI,WAAW,OACX,QAAO;EAEX,MAAM,OAAO,KAAK,mBAAmB;EACrC,MAAM,QAAQ,KAAK,oBAAoB;AACvC,MAAI,KAAK,UAAU,MAAM,OACrB,cAAa,KAAK,UAAU,KAAK,OAAO,MAAM,CAAC;MAE/C,cAAa,KAAK,SAAS,OAAO;AAEtC,eAAa,KAAK,OAAO,MAAM;AAC/B,SAAO;;CAEd,mBAAmB,OAAO;AACnB,UAAQ,YAAY,KAAK,QAAQ,MAAM,GAAG,KAAK,WAAW,KAAK;;CAEtE,iBAAiB,OAAO;EACjB,MAAM,UAAU,KAAK;EACrB,MAAM,UAAU,KAAK,mBAAmB,MAAM,GAAG,QAAQ,SAAS,QAAQ;AAC1E,SAAO,YAAY,KAAK,QAAQ,UAAU,KAAK,cAAc,KAAK,SAAS,KAAK;;;AAIxF,IAAI,SAAsB,uBAAO,OAAO;CACxC,WAAW;CACI;CACF;CACK;CACC;CACR;CACM;CAChB,CAAC;AAEF,IAAM,gBAAgB;CAClB;CACA;CACA;CACA;CACH"}