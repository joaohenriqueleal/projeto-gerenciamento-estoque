{"version":3,"file":"react-chartjs-2.js","names":[],"sources":["../../react-chartjs-2/dist/index.js"],"sourcesContent":["import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"mappings":"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"}